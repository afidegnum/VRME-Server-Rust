(function() {var implementors = {};
implementors["actix"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"actix/struct.SpawnHandle.html\" title=\"struct actix::SpawnHandle\">SpawnHandle</a>","synthetic":true,"types":["actix::actor::SpawnHandle"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"actix/struct.Addr.html\" title=\"struct actix::Addr\">Addr</a>&lt;A&gt;","synthetic":true,"types":["actix::address::Addr"]},{"text":"impl&lt;M&gt; Freeze for <a class=\"struct\" href=\"actix/struct.Recipient.html\" title=\"struct actix::Recipient\">Recipient</a>&lt;M&gt;","synthetic":true,"types":["actix::address::Recipient"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"actix/struct.WeakAddr.html\" title=\"struct actix::WeakAddr\">WeakAddr</a>&lt;A&gt;","synthetic":true,"types":["actix::address::WeakAddr"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"actix/struct.Context.html\" title=\"struct actix::Context\">Context</a>&lt;A&gt;","synthetic":true,"types":["actix::context::Context"]},{"text":"impl&lt;A, I, E&gt; Freeze for <a class=\"struct\" href=\"actix/struct.ActorResponse.html\" title=\"struct actix::ActorResponse\">ActorResponse</a>&lt;A, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["actix::handler::ActorResponse"]},{"text":"impl&lt;M&gt; Freeze for <a class=\"struct\" href=\"actix/struct.MessageResult.html\" title=\"struct actix::MessageResult\">MessageResult</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;M as <a class=\"trait\" href=\"actix/prelude/trait.Message.html\" title=\"trait actix::prelude::Message\">Message</a>&gt;::<a class=\"type\" href=\"actix/prelude/trait.Message.html#associatedtype.Result\" title=\"type actix::prelude::Message::Result\">Result</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["actix::handler::MessageResult"]},{"text":"impl&lt;I, E&gt; Freeze for <a class=\"struct\" href=\"actix/struct.Response.html\" title=\"struct actix::Response\">Response</a>&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["actix::handler::Response"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"actix/struct.Supervisor.html\" title=\"struct actix::Supervisor\">Supervisor</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["actix::supervisor::Supervisor"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix/enum.ActorState.html\" title=\"enum actix::ActorState\">ActorState</a>","synthetic":true,"types":["actix::actor::ActorState"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix/enum.Running.html\" title=\"enum actix::Running\">Running</a>","synthetic":true,"types":["actix::actor::Running"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix/enum.MailboxError.html\" title=\"enum actix::MailboxError\">MailboxError</a>","synthetic":true,"types":["actix::address::MailboxError"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"actix/dev/struct.ContextParts.html\" title=\"struct actix::dev::ContextParts\">ContextParts</a>&lt;A&gt;","synthetic":true,"types":["actix::contextimpl::ContextParts"]},{"text":"impl&lt;A, C&gt; Freeze for <a class=\"struct\" href=\"actix/dev/struct.ContextFut.html\" title=\"struct actix::dev::ContextFut\">ContextFut</a>&lt;A, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":["actix::contextimpl::ContextFut"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"actix/prelude/enum.SendError.html\" title=\"enum actix::prelude::SendError\">SendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix::address::SendError"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"actix/dev/channel/struct.AddressSender.html\" title=\"struct actix::dev::channel::AddressSender\">AddressSender</a>&lt;A&gt;","synthetic":true,"types":["actix::address::channel::AddressSender"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"actix/dev/channel/struct.AddressReceiver.html\" title=\"struct actix::dev::channel::AddressReceiver\">AddressReceiver</a>&lt;A&gt;","synthetic":true,"types":["actix::address::channel::AddressReceiver"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"actix/dev/struct.Envelope.html\" title=\"struct actix::dev::Envelope\">Envelope</a>&lt;A&gt;","synthetic":true,"types":["actix::address::envelope::Envelope"]},{"text":"impl&lt;A, M&gt; Freeze for <a class=\"struct\" href=\"actix/prelude/struct.Request.html\" title=\"struct actix::prelude::Request\">Request</a>&lt;A, M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Freeze,&nbsp;</span>","synthetic":true,"types":["actix::address::message::Request"]},{"text":"impl&lt;M&gt; Freeze for <a class=\"struct\" href=\"actix/prelude/struct.RecipientRequest.html\" title=\"struct actix::prelude::RecipientRequest\">RecipientRequest</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Freeze,&nbsp;</span>","synthetic":true,"types":["actix::address::message::RecipientRequest"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"actix/dev/struct.Mailbox.html\" title=\"struct actix::dev::Mailbox\">Mailbox</a>&lt;A&gt;","synthetic":true,"types":["actix::mailbox::Mailbox"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix/actors/mocker/struct.Mocker.html\" title=\"struct actix::actors::mocker::Mocker\">Mocker</a>&lt;T&gt;","synthetic":true,"types":["actix::actors::mocker::Mocker"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix/actors/resolver/struct.Resolve.html\" title=\"struct actix::actors::resolver::Resolve\">Resolve</a>","synthetic":true,"types":["actix::actors::resolver::Resolve"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix/actors/resolver/struct.Connect.html\" title=\"struct actix::actors::resolver::Connect\">Connect</a>","synthetic":true,"types":["actix::actors::resolver::Connect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix/actors/resolver/struct.ConnectAddr.html\" title=\"struct actix::actors::resolver::ConnectAddr\">ConnectAddr</a>","synthetic":true,"types":["actix::actors::resolver::ConnectAddr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix/actors/resolver/struct.Resolver.html\" title=\"struct actix::actors::resolver::Resolver\">Resolver</a>","synthetic":true,"types":["actix::actors::resolver::Resolver"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix/actors/resolver/struct.TcpConnector.html\" title=\"struct actix::actors::resolver::TcpConnector\">TcpConnector</a>","synthetic":true,"types":["actix::actors::resolver::TcpConnector"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix/actors/resolver/enum.ResolverError.html\" title=\"enum actix::actors::resolver::ResolverError\">ResolverError</a>","synthetic":true,"types":["actix::actors::resolver::ResolverError"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"actix/fut/struct.Finish.html\" title=\"struct actix::fut::Finish\">Finish</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["actix::fut::helpers::Finish"]},{"text":"impl&lt;A, F&gt; Freeze for <a class=\"struct\" href=\"actix/fut/struct.Map.html\" title=\"struct actix::fut::Map\">Map</a>&lt;A, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["actix::fut::map::Map"]},{"text":"impl&lt;T, A&gt; Freeze for <a class=\"struct\" href=\"actix/fut/struct.Ready.html\" title=\"struct actix::fut::Ready\">Ready</a>&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix::fut::ready_fut::Ready"]},{"text":"impl&lt;T, E, A&gt; Freeze for <a class=\"struct\" href=\"actix/fut/struct.FutureResult.html\" title=\"struct actix::fut::FutureResult\">FutureResult</a>&lt;T, E, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix::fut::result::FutureResult"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"actix/fut/struct.StreamFinish.html\" title=\"struct actix::fut::StreamFinish\">StreamFinish</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["actix::fut::stream_finish::StreamFinish"]},{"text":"impl&lt;S, F, Fut, T&gt; Freeze for <a class=\"struct\" href=\"actix/fut/struct.StreamFold.html\" title=\"struct actix::fut::StreamFold\">StreamFold</a>&lt;S, F, Fut, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as <a class=\"trait\" href=\"actix/fut/trait.IntoActorFuture.html\" title=\"trait actix::fut::IntoActorFuture\">IntoActorFuture</a>&gt;::<a class=\"type\" href=\"actix/fut/trait.IntoActorFuture.html#associatedtype.Future\" title=\"type actix::fut::IntoActorFuture::Future\">Future</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["actix::fut::stream_fold::StreamFold"]},{"text":"impl&lt;S, F&gt; Freeze for <a class=\"struct\" href=\"actix/fut/struct.StreamMap.html\" title=\"struct actix::fut::StreamMap\">StreamMap</a>&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["actix::fut::stream_map::StreamMap"]},{"text":"impl&lt;S, F, U&gt; Freeze for <a class=\"struct\" href=\"actix/fut/struct.StreamThen.html\" title=\"struct actix::fut::StreamThen\">StreamThen</a>&lt;S, F, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as <a class=\"trait\" href=\"actix/fut/trait.IntoActorFuture.html\" title=\"trait actix::fut::IntoActorFuture\">IntoActorFuture</a>&gt;::<a class=\"type\" href=\"actix/fut/trait.IntoActorFuture.html#associatedtype.Future\" title=\"type actix::fut::IntoActorFuture::Future\">Future</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["actix::fut::stream_then::StreamThen"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"actix/fut/struct.StreamTimeout.html\" title=\"struct actix::fut::StreamTimeout\">StreamTimeout</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["actix::fut::stream_timeout::StreamTimeout"]},{"text":"impl&lt;A, B, F&gt; Freeze for <a class=\"struct\" href=\"actix/fut/struct.Then.html\" title=\"struct actix::fut::Then\">Then</a>&lt;A, B, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as <a class=\"trait\" href=\"actix/fut/trait.IntoActorFuture.html\" title=\"trait actix::fut::IntoActorFuture\">IntoActorFuture</a>&gt;::<a class=\"type\" href=\"actix/fut/trait.IntoActorFuture.html#associatedtype.Future\" title=\"type actix::fut::IntoActorFuture::Future\">Future</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["actix::fut::then::Then"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"actix/fut/struct.Timeout.html\" title=\"struct actix::fut::Timeout\">Timeout</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["actix::fut::timeout::Timeout"]},{"text":"impl&lt;F, A&gt; Freeze for <a class=\"struct\" href=\"actix/fut/struct.FutureWrap.html\" title=\"struct actix::fut::FutureWrap\">FutureWrap</a>&lt;F, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["actix::fut::FutureWrap"]},{"text":"impl&lt;S, A&gt; Freeze for <a class=\"struct\" href=\"actix/fut/struct.StreamWrap.html\" title=\"struct actix::fut::StreamWrap\">StreamWrap</a>&lt;S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["actix::fut::StreamWrap"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"enum\" href=\"actix/fut/enum.Either.html\" title=\"enum actix::fut::Either\">Either</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["actix::fut::either::Either"]},{"text":"impl&lt;T, E&gt; Freeze for <a class=\"struct\" href=\"actix/io/struct.Writer.html\" title=\"struct actix::io::Writer\">Writer</a>&lt;T, E&gt;","synthetic":true,"types":["actix::io::Writer"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"actix/io/struct.FramedWrite.html\" title=\"struct actix::io::FramedWrite\">FramedWrite</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["actix::io::FramedWrite"]},{"text":"impl&lt;I, S&gt; Freeze for <a class=\"struct\" href=\"actix/io/struct.SinkWrite.html\" title=\"struct actix::io::SinkWrite\">SinkWrite</a>&lt;I, S&gt;","synthetic":true,"types":["actix::io::SinkWrite"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix/registry/struct.Registry.html\" title=\"struct actix::registry::Registry\">Registry</a>","synthetic":true,"types":["actix::registry::Registry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix/registry/struct.SystemRegistry.html\" title=\"struct actix::registry::SystemRegistry\">SystemRegistry</a>","synthetic":true,"types":["actix::registry::SystemRegistry"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"actix/sync/struct.SyncArbiter.html\" title=\"struct actix::sync::SyncArbiter\">SyncArbiter</a>&lt;A&gt;","synthetic":true,"types":["actix::sync::SyncArbiter"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"actix/sync/struct.SyncContext.html\" title=\"struct actix::sync::SyncContext\">SyncContext</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["actix::sync::SyncContext"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix/utils/struct.Condition.html\" title=\"struct actix::utils::Condition\">Condition</a>&lt;T&gt;","synthetic":true,"types":["actix::utils::Condition"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"actix/utils/struct.TimerFunc.html\" title=\"struct actix::utils::TimerFunc\">TimerFunc</a>&lt;A&gt;","synthetic":true,"types":["actix::utils::TimerFunc"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"actix/utils/struct.IntervalFunc.html\" title=\"struct actix::utils::IntervalFunc\">IntervalFunc</a>&lt;A&gt;","synthetic":true,"types":["actix::utils::IntervalFunc"]}];
implementors["actix_codec"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"actix_codec/struct.BytesCodec.html\" title=\"struct actix_codec::BytesCodec\">BytesCodec</a>","synthetic":true,"types":["actix_codec::bcodec::BytesCodec"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"actix_codec/struct.Framed.html\" title=\"struct actix_codec::Framed\">Framed</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_codec::framed::Framed"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"actix_codec/struct.FramedParts.html\" title=\"struct actix_codec::FramedParts\">FramedParts</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_codec::framed::FramedParts"]}];
implementors["actix_connect"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_connect/struct.Connect.html\" title=\"struct actix_connect::Connect\">Connect</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_connect::connect::Connect"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"actix_connect/struct.Connection.html\" title=\"struct actix_connect::Connection\">Connection</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_connect::connect::Connection"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_connect/struct.TcpConnector.html\" title=\"struct actix_connect::TcpConnector\">TcpConnector</a>&lt;T&gt;","synthetic":true,"types":["actix_connect::connector::TcpConnector"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_connect/struct.TcpConnectorFactory.html\" title=\"struct actix_connect::TcpConnectorFactory\">TcpConnectorFactory</a>&lt;T&gt;","synthetic":true,"types":["actix_connect::connector::TcpConnectorFactory"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_connect/struct.Resolver.html\" title=\"struct actix_connect::Resolver\">Resolver</a>&lt;T&gt;","synthetic":true,"types":["actix_connect::resolve::Resolver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_connect/struct.ResolverFactory.html\" title=\"struct actix_connect::ResolverFactory\">ResolverFactory</a>&lt;T&gt;","synthetic":true,"types":["actix_connect::resolve::ResolverFactory"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_connect/struct.ConnectService.html\" title=\"struct actix_connect::ConnectService\">ConnectService</a>&lt;T&gt;","synthetic":true,"types":["actix_connect::service::ConnectService"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_connect/struct.ConnectServiceFactory.html\" title=\"struct actix_connect::ConnectServiceFactory\">ConnectServiceFactory</a>&lt;T&gt;","synthetic":true,"types":["actix_connect::service::ConnectServiceFactory"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_connect/struct.TcpConnectService.html\" title=\"struct actix_connect::TcpConnectService\">TcpConnectService</a>&lt;T&gt;","synthetic":true,"types":["actix_connect::service::TcpConnectService"]},{"text":"impl !Freeze for <a class=\"enum\" href=\"actix_connect/enum.ConnectError.html\" title=\"enum actix_connect::ConnectError\">ConnectError</a>","synthetic":true,"types":["actix_connect::error::ConnectError"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"actix_connect/ssl/rustls/struct.RustlsConnector.html\" title=\"struct actix_connect::ssl::rustls::RustlsConnector\">RustlsConnector</a>&lt;T, U&gt;","synthetic":true,"types":["actix_connect::ssl::rustls::RustlsConnector"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"actix_connect/ssl/rustls/struct.RustlsConnectorService.html\" title=\"struct actix_connect::ssl::rustls::RustlsConnectorService\">RustlsConnectorService</a>&lt;T, U&gt;","synthetic":true,"types":["actix_connect::ssl::rustls::RustlsConnectorService"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"actix_connect/ssl/rustls/struct.ConnectAsyncExt.html\" title=\"struct actix_connect::ssl::rustls::ConnectAsyncExt\">ConnectAsyncExt</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_connect::ssl::rustls::ConnectAsyncExt"]}];
implementors["actix_files"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"actix_files/struct.NamedFile.html\" title=\"struct actix_files::NamedFile\">NamedFile</a>","synthetic":true,"types":["actix_files::named::NamedFile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_files/struct.HttpRange.html\" title=\"struct actix_files::HttpRange\">HttpRange</a>","synthetic":true,"types":["actix_files::range::HttpRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_files/struct.Directory.html\" title=\"struct actix_files::Directory\">Directory</a>","synthetic":true,"types":["actix_files::Directory"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_files/struct.Files.html\" title=\"struct actix_files::Files\">Files</a>","synthetic":true,"types":["actix_files::Files"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_files/struct.FilesService.html\" title=\"struct actix_files::FilesService\">FilesService</a>","synthetic":true,"types":["actix_files::FilesService"]}];
implementors["actix_http"] = [{"text":"impl&lt;T, S, X, U&gt; Freeze for <a class=\"struct\" href=\"actix_http/struct.HttpServiceBuilder.html\" title=\"struct actix_http::HttpServiceBuilder\">HttpServiceBuilder</a>&lt;T, S, X, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_http::builder::HttpServiceBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/struct.ServiceConfig.html\" title=\"struct actix_http::ServiceConfig\">ServiceConfig</a>","synthetic":true,"types":["actix_http::config::ServiceConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/struct.Extensions.html\" title=\"struct actix_http::Extensions\">Extensions</a>","synthetic":true,"types":["actix_http::extensions::Extensions"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_http/struct.Message.html\" title=\"struct actix_http::Message\">Message</a>&lt;T&gt;","synthetic":true,"types":["actix_http::message::Message"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"actix_http/struct.RequestHead.html\" title=\"struct actix_http::RequestHead\">RequestHead</a>","synthetic":true,"types":["actix_http::message::RequestHead"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"actix_http/struct.ResponseHead.html\" title=\"struct actix_http::ResponseHead\">ResponseHead</a>","synthetic":true,"types":["actix_http::message::ResponseHead"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"actix_http/struct.Request.html\" title=\"struct actix_http::Request\">Request</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_http::request::Request"]},{"text":"impl&lt;B&nbsp;=&nbsp;<a class=\"enum\" href=\"actix_http/body/enum.Body.html\" title=\"enum actix_http::body::Body\">Body</a>&gt; !Freeze for <a class=\"struct\" href=\"actix_http/struct.Response.html\" title=\"struct actix_http::Response\">Response</a>&lt;B&gt;","synthetic":true,"types":["actix_http::response::Response"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/struct.ResponseBuilder.html\" title=\"struct actix_http::ResponseBuilder\">ResponseBuilder</a>","synthetic":true,"types":["actix_http::response::ResponseBuilder"]},{"text":"impl&lt;T, S, B, X, U&gt; Freeze for <a class=\"struct\" href=\"actix_http/struct.HttpService.html\" title=\"struct actix_http::HttpService\">HttpService</a>&lt;T, S, B, X, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_http::service::HttpService"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/enum.KeepAlive.html\" title=\"enum actix_http::KeepAlive\">KeepAlive</a>","synthetic":true,"types":["actix_http::config::KeepAlive"]},{"text":"impl !Freeze for <a class=\"enum\" href=\"actix_http/enum.RequestHeadType.html\" title=\"enum actix_http::RequestHeadType\">RequestHeadType</a>","synthetic":true,"types":["actix_http::message::RequestHeadType"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"enum\" href=\"actix_http/enum.Payload.html\" title=\"enum actix_http::Payload\">Payload</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_http::payload::Payload"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/enum.Protocol.html\" title=\"enum actix_http::Protocol\">Protocol</a>","synthetic":true,"types":["actix_http::Protocol"]},{"text":"impl&lt;S, E&gt; Freeze for <a class=\"struct\" href=\"actix_http/body/struct.BodyStream.html\" title=\"struct actix_http::body::BodyStream\">BodyStream</a>&lt;S, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_http::body::BodyStream"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"actix_http/body/struct.SizedStream.html\" title=\"struct actix_http::body::SizedStream\">SizedStream</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_http::body::SizedStream"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/body/enum.BodySize.html\" title=\"enum actix_http::body::BodySize\">BodySize</a>","synthetic":true,"types":["actix_http::body::BodySize"]},{"text":"impl&lt;B&gt; !Freeze for <a class=\"enum\" href=\"actix_http/body/enum.ResponseBody.html\" title=\"enum actix_http::body::ResponseBody\">ResponseBody</a>&lt;B&gt;","synthetic":true,"types":["actix_http::body::ResponseBody"]},{"text":"impl !Freeze for <a class=\"enum\" href=\"actix_http/body/enum.Body.html\" title=\"enum actix_http::body::Body\">Body</a>","synthetic":true,"types":["actix_http::body::Body"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"actix_http/client/struct.Connector.html\" title=\"struct actix_http::client::Connector\">Connector</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_http::client::connector::Connector"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"actix_http/client/struct.Connect.html\" title=\"struct actix_http::client::Connect\">Connect</a>","synthetic":true,"types":["actix_http::client::Connect"]},{"text":"impl !Freeze for <a class=\"enum\" href=\"actix_http/client/enum.ConnectError.html\" title=\"enum actix_http::client::ConnectError\">ConnectError</a>","synthetic":true,"types":["actix_http::client::error::ConnectError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/client/enum.FreezeRequestError.html\" title=\"enum actix_http::client::FreezeRequestError\">FreezeRequestError</a>","synthetic":true,"types":["actix_http::client::error::FreezeRequestError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/client/enum.InvalidUrl.html\" title=\"enum actix_http::client::InvalidUrl\">InvalidUrl</a>","synthetic":true,"types":["actix_http::client::error::InvalidUrl"]},{"text":"impl !Freeze for <a class=\"enum\" href=\"actix_http/client/enum.SendRequestError.html\" title=\"enum actix_http::client::SendRequestError\">SendRequestError</a>","synthetic":true,"types":["actix_http::client::error::SendRequestError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/client/enum.Protocol.html\" title=\"enum actix_http::client::Protocol\">Protocol</a>","synthetic":true,"types":["actix_http::client::pool::Protocol"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"actix_http/encoding/struct.Decoder.html\" title=\"struct actix_http::encoding::Decoder\">Decoder</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_http::encoding::decoder::Decoder"]},{"text":"impl&lt;B&gt; !Freeze for <a class=\"struct\" href=\"actix_http/encoding/struct.Encoder.html\" title=\"struct actix_http::encoding::Encoder\">Encoder</a>&lt;B&gt;","synthetic":true,"types":["actix_http::encoding::encoder::Encoder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/http/header/struct.ExtendedValue.html\" title=\"struct actix_http::http::header::ExtendedValue\">ExtendedValue</a>","synthetic":true,"types":["actix_http::header::ExtendedValue"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/http/enum.ContentEncoding.html\" title=\"enum actix_http::http::ContentEncoding\">ContentEncoding</a>","synthetic":true,"types":["actix_http::header::ContentEncoding"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/http/header/struct.AcceptCharset.html\" title=\"struct actix_http::http::header::AcceptCharset\">AcceptCharset</a>","synthetic":true,"types":["actix_http::header::common::accept_charset::AcceptCharset"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/http/header/struct.AcceptLanguage.html\" title=\"struct actix_http::http::header::AcceptLanguage\">AcceptLanguage</a>","synthetic":true,"types":["actix_http::header::common::accept_language::AcceptLanguage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/http/header/struct.Accept.html\" title=\"struct actix_http::http::header::Accept\">Accept</a>","synthetic":true,"types":["actix_http::header::common::accept::Accept"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/http/header/struct.Allow.html\" title=\"struct actix_http::http::header::Allow\">Allow</a>","synthetic":true,"types":["actix_http::header::common::allow::Allow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/http/header/struct.CacheControl.html\" title=\"struct actix_http::http::header::CacheControl\">CacheControl</a>","synthetic":true,"types":["actix_http::header::common::cache_control::CacheControl"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/http/header/enum.CacheDirective.html\" title=\"enum actix_http::http::header::CacheDirective\">CacheDirective</a>","synthetic":true,"types":["actix_http::header::common::cache_control::CacheDirective"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/http/header/struct.ContentDisposition.html\" title=\"struct actix_http::http::header::ContentDisposition\">ContentDisposition</a>","synthetic":true,"types":["actix_http::header::common::content_disposition::ContentDisposition"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/http/header/enum.DispositionType.html\" title=\"enum actix_http::http::header::DispositionType\">DispositionType</a>","synthetic":true,"types":["actix_http::header::common::content_disposition::DispositionType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/http/header/enum.DispositionParam.html\" title=\"enum actix_http::http::header::DispositionParam\">DispositionParam</a>","synthetic":true,"types":["actix_http::header::common::content_disposition::DispositionParam"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/http/header/struct.ContentLanguage.html\" title=\"struct actix_http::http::header::ContentLanguage\">ContentLanguage</a>","synthetic":true,"types":["actix_http::header::common::content_language::ContentLanguage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/http/header/struct.ContentRange.html\" title=\"struct actix_http::http::header::ContentRange\">ContentRange</a>","synthetic":true,"types":["actix_http::header::common::content_range::ContentRange"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/http/header/enum.ContentRangeSpec.html\" title=\"enum actix_http::http::header::ContentRangeSpec\">ContentRangeSpec</a>","synthetic":true,"types":["actix_http::header::common::content_range::ContentRangeSpec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/http/header/struct.ContentType.html\" title=\"struct actix_http::http::header::ContentType\">ContentType</a>","synthetic":true,"types":["actix_http::header::common::content_type::ContentType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/http/header/struct.Date.html\" title=\"struct actix_http::http::header::Date\">Date</a>","synthetic":true,"types":["actix_http::header::common::date::Date"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/http/header/struct.ETag.html\" title=\"struct actix_http::http::header::ETag\">ETag</a>","synthetic":true,"types":["actix_http::header::common::etag::ETag"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/http/header/struct.Expires.html\" title=\"struct actix_http::http::header::Expires\">Expires</a>","synthetic":true,"types":["actix_http::header::common::expires::Expires"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/http/header/enum.IfMatch.html\" title=\"enum actix_http::http::header::IfMatch\">IfMatch</a>","synthetic":true,"types":["actix_http::header::common::if_match::IfMatch"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/http/header/struct.IfModifiedSince.html\" title=\"struct actix_http::http::header::IfModifiedSince\">IfModifiedSince</a>","synthetic":true,"types":["actix_http::header::common::if_modified_since::IfModifiedSince"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/http/header/enum.IfNoneMatch.html\" title=\"enum actix_http::http::header::IfNoneMatch\">IfNoneMatch</a>","synthetic":true,"types":["actix_http::header::common::if_none_match::IfNoneMatch"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/http/header/enum.IfRange.html\" title=\"enum actix_http::http::header::IfRange\">IfRange</a>","synthetic":true,"types":["actix_http::header::common::if_range::IfRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/http/header/struct.IfUnmodifiedSince.html\" title=\"struct actix_http::http::header::IfUnmodifiedSince\">IfUnmodifiedSince</a>","synthetic":true,"types":["actix_http::header::common::if_unmodified_since::IfUnmodifiedSince"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/http/header/struct.LastModified.html\" title=\"struct actix_http::http::header::LastModified\">LastModified</a>","synthetic":true,"types":["actix_http::header::common::last_modified::LastModified"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/http/struct.HeaderMap.html\" title=\"struct actix_http::http::HeaderMap\">HeaderMap</a>","synthetic":true,"types":["actix_http::header::map::HeaderMap"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/http/enum.ConnectionType.html\" title=\"enum actix_http::http::ConnectionType\">ConnectionType</a>","synthetic":true,"types":["actix_http::message::ConnectionType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/cookie/struct.CookieBuilder.html\" title=\"struct actix_http::cookie::CookieBuilder\">CookieBuilder</a>","synthetic":true,"types":["actix_http::cookie::builder::CookieBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/cookie/struct.CookieJar.html\" title=\"struct actix_http::cookie::CookieJar\">CookieJar</a>","synthetic":true,"types":["actix_http::cookie::jar::CookieJar"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"actix_http/cookie/struct.Delta.html\" title=\"struct actix_http::cookie::Delta\">Delta</a>&lt;'a&gt;","synthetic":true,"types":["actix_http::cookie::jar::Delta"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"actix_http/cookie/struct.Iter.html\" title=\"struct actix_http::cookie::Iter\">Iter</a>&lt;'a&gt;","synthetic":true,"types":["actix_http::cookie::jar::Iter"]},{"text":"impl&lt;'c&gt; Freeze for <a class=\"struct\" href=\"actix_http/cookie/struct.Cookie.html\" title=\"struct actix_http::cookie::Cookie\">Cookie</a>&lt;'c&gt;","synthetic":true,"types":["actix_http::cookie::Cookie"]},{"text":"impl&lt;'a, 'c&gt; Freeze for <a class=\"struct\" href=\"actix_http/cookie/struct.EncodedCookie.html\" title=\"struct actix_http::cookie::EncodedCookie\">EncodedCookie</a>&lt;'a, 'c&gt;","synthetic":true,"types":["actix_http::cookie::EncodedCookie"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/cookie/enum.SameSite.html\" title=\"enum actix_http::cookie::SameSite\">SameSite</a>","synthetic":true,"types":["actix_http::cookie::draft::SameSite"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/cookie/enum.ParseError.html\" title=\"enum actix_http::cookie::ParseError\">ParseError</a>","synthetic":true,"types":["actix_http::cookie::parse::ParseError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/error/struct.Error.html\" title=\"struct actix_http::error::Error\">Error</a>","synthetic":true,"types":["actix_http::error::Error"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"actix_http/error/struct.InternalError.html\" title=\"struct actix_http::error::InternalError\">InternalError</a>&lt;T&gt;","synthetic":true,"types":["actix_http::error::InternalError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/error/enum.ParseError.html\" title=\"enum actix_http::error::ParseError\">ParseError</a>","synthetic":true,"types":["actix_http::error::ParseError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/error/enum.PayloadError.html\" title=\"enum actix_http::error::PayloadError\">PayloadError</a>","synthetic":true,"types":["actix_http::error::PayloadError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/error/enum.DispatchError.html\" title=\"enum actix_http::error::DispatchError\">DispatchError</a>","synthetic":true,"types":["actix_http::error::DispatchError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/error/enum.ContentTypeError.html\" title=\"enum actix_http::error::ContentTypeError\">ContentTypeError</a>","synthetic":true,"types":["actix_http::error::ContentTypeError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/h1/struct.ClientCodec.html\" title=\"struct actix_http::h1::ClientCodec\">ClientCodec</a>","synthetic":true,"types":["actix_http::h1::client::ClientCodec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/h1/struct.ClientPayloadCodec.html\" title=\"struct actix_http::h1::ClientPayloadCodec\">ClientPayloadCodec</a>","synthetic":true,"types":["actix_http::h1::client::ClientPayloadCodec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/h1/struct.Codec.html\" title=\"struct actix_http::h1::Codec\">Codec</a>","synthetic":true,"types":["actix_http::h1::codec::Codec"]},{"text":"impl&lt;T, S, B, X, U&gt; !Freeze for <a class=\"struct\" href=\"actix_http/h1/struct.Dispatcher.html\" title=\"struct actix_http::h1::Dispatcher\">Dispatcher</a>&lt;T, S, B, X, U&gt;","synthetic":true,"types":["actix_http::h1::dispatcher::Dispatcher"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/h1/struct.ExpectHandler.html\" title=\"struct actix_http::h1::ExpectHandler\">ExpectHandler</a>","synthetic":true,"types":["actix_http::h1::expect::ExpectHandler"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/h1/struct.Payload.html\" title=\"struct actix_http::h1::Payload\">Payload</a>","synthetic":true,"types":["actix_http::h1::payload::Payload"]},{"text":"impl&lt;T, S, B, X, U&gt; Freeze for <a class=\"struct\" href=\"actix_http/h1/struct.H1Service.html\" title=\"struct actix_http::h1::H1Service\">H1Service</a>&lt;T, S, B, X, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_http::h1::service::H1Service"]},{"text":"impl&lt;T, S, B, X, U&gt; Freeze for <a class=\"struct\" href=\"actix_http/h1/struct.H1ServiceHandler.html\" title=\"struct actix_http::h1::H1ServiceHandler\">H1ServiceHandler</a>&lt;T, S, B, X, U&gt;","synthetic":true,"types":["actix_http::h1::service::H1ServiceHandler"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_http/h1/struct.OneRequest.html\" title=\"struct actix_http::h1::OneRequest\">OneRequest</a>&lt;T&gt;","synthetic":true,"types":["actix_http::h1::service::OneRequest"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_http/h1/struct.UpgradeHandler.html\" title=\"struct actix_http::h1::UpgradeHandler\">UpgradeHandler</a>&lt;T&gt;","synthetic":true,"types":["actix_http::h1::upgrade::UpgradeHandler"]},{"text":"impl&lt;T, B&gt; !Freeze for <a class=\"struct\" href=\"actix_http/h1/struct.SendResponse.html\" title=\"struct actix_http::h1::SendResponse\">SendResponse</a>&lt;T, B&gt;","synthetic":true,"types":["actix_http::h1::utils::SendResponse"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"enum\" href=\"actix_http/h1/enum.Message.html\" title=\"enum actix_http::h1::Message\">Message</a>&lt;T&gt;","synthetic":true,"types":["actix_http::h1::Message"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/h1/enum.MessageType.html\" title=\"enum actix_http::h1::MessageType\">MessageType</a>","synthetic":true,"types":["actix_http::h1::MessageType"]},{"text":"impl&lt;T, S, B&gt; !Freeze for <a class=\"struct\" href=\"actix_http/h2/struct.Dispatcher.html\" title=\"struct actix_http::h2::Dispatcher\">Dispatcher</a>&lt;T, S, B&gt;","synthetic":true,"types":["actix_http::h2::dispatcher::Dispatcher"]},{"text":"impl&lt;T, S, B&gt; Freeze for <a class=\"struct\" href=\"actix_http/h2/struct.H2Service.html\" title=\"struct actix_http::h2::H2Service\">H2Service</a>&lt;T, S, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_http::h2::service::H2Service"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/h2/struct.Payload.html\" title=\"struct actix_http::h2::Payload\">Payload</a>","synthetic":true,"types":["actix_http::h2::Payload"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"actix_http/test/struct.TestRequest.html\" title=\"struct actix_http::test::TestRequest\">TestRequest</a>","synthetic":true,"types":["actix_http::test::TestRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/test/struct.TestBuffer.html\" title=\"struct actix_http::test::TestBuffer\">TestBuffer</a>","synthetic":true,"types":["actix_http::test::TestBuffer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/ws/struct.Codec.html\" title=\"struct actix_http::ws::Codec\">Codec</a>","synthetic":true,"types":["actix_http::ws::codec::Codec"]},{"text":"impl&lt;S, T&gt; Freeze for <a class=\"struct\" href=\"actix_http/ws/struct.Dispatcher.html\" title=\"struct actix_http::ws::Dispatcher\">Dispatcher</a>&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"actix_service/trait.Service.html\" title=\"trait actix_service::Service\">Service</a>&gt;::<a class=\"type\" href=\"actix_service/trait.Service.html#associatedtype.Error\" title=\"type actix_service::Service::Error\">Error</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_http::ws::dispatcher::Dispatcher"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/ws/struct.Parser.html\" title=\"struct actix_http::ws::Parser\">Parser</a>","synthetic":true,"types":["actix_http::ws::frame::Parser"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/ws/struct.CloseReason.html\" title=\"struct actix_http::ws::CloseReason\">CloseReason</a>","synthetic":true,"types":["actix_http::ws::proto::CloseReason"]},{"text":"impl !Freeze for <a class=\"enum\" href=\"actix_http/ws/enum.Frame.html\" title=\"enum actix_http::ws::Frame\">Frame</a>","synthetic":true,"types":["actix_http::ws::codec::Frame"]},{"text":"impl !Freeze for <a class=\"enum\" href=\"actix_http/ws/enum.Item.html\" title=\"enum actix_http::ws::Item\">Item</a>","synthetic":true,"types":["actix_http::ws::codec::Item"]},{"text":"impl !Freeze for <a class=\"enum\" href=\"actix_http/ws/enum.Message.html\" title=\"enum actix_http::ws::Message\">Message</a>","synthetic":true,"types":["actix_http::ws::codec::Message"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/ws/enum.CloseCode.html\" title=\"enum actix_http::ws::CloseCode\">CloseCode</a>","synthetic":true,"types":["actix_http::ws::proto::CloseCode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/ws/enum.OpCode.html\" title=\"enum actix_http::ws::OpCode\">OpCode</a>","synthetic":true,"types":["actix_http::ws::proto::OpCode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/ws/enum.ProtocolError.html\" title=\"enum actix_http::ws::ProtocolError\">ProtocolError</a>","synthetic":true,"types":["actix_http::ws::ProtocolError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/ws/enum.HandshakeError.html\" title=\"enum actix_http::ws::HandshakeError\">HandshakeError</a>","synthetic":true,"types":["actix_http::ws::HandshakeError"]}];
implementors["actix_multipart"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"actix_multipart/struct.Field.html\" title=\"struct actix_multipart::Field\">Field</a>","synthetic":true,"types":["actix_multipart::server::Field"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"actix_multipart/struct.Multipart.html\" title=\"struct actix_multipart::Multipart\">Multipart</a>","synthetic":true,"types":["actix_multipart::server::Multipart"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_multipart/enum.MultipartError.html\" title=\"enum actix_multipart::MultipartError\">MultipartError</a>","synthetic":true,"types":["actix_multipart::error::MultipartError"]}];
implementors["actix_ratelimit"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"actix_ratelimit/enum.ActorMessage.html\" title=\"enum actix_ratelimit::ActorMessage\">ActorMessage</a>","synthetic":true,"types":["actix_ratelimit::ActorMessage"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_ratelimit/enum.ActorResponse.html\" title=\"enum actix_ratelimit::ActorResponse\">ActorResponse</a>","synthetic":true,"types":["actix_ratelimit::ActorResponse"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_ratelimit/errors/enum.ARError.html\" title=\"enum actix_ratelimit::errors::ARError\">ARError</a>","synthetic":true,"types":["actix_ratelimit::errors::ARError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_ratelimit/middleware/struct.RateLimiter.html\" title=\"struct actix_ratelimit::middleware::RateLimiter\">RateLimiter</a>&lt;T&gt;","synthetic":true,"types":["actix_ratelimit::middleware::RateLimiter"]},{"text":"impl&lt;S, T&gt; Freeze for <a class=\"struct\" href=\"actix_ratelimit/middleware/struct.RateLimitMiddleware.html\" title=\"struct actix_ratelimit::middleware::RateLimitMiddleware\">RateLimitMiddleware</a>&lt;S, T&gt;","synthetic":true,"types":["actix_ratelimit::middleware::RateLimitMiddleware"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_ratelimit/stores/memory/struct.MemoryStore.html\" title=\"struct actix_ratelimit::stores::memory::MemoryStore\">MemoryStore</a>","synthetic":true,"types":["actix_ratelimit::stores::memory::MemoryStore"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_ratelimit/stores/memory/struct.MemoryStoreActor.html\" title=\"struct actix_ratelimit::stores::memory::MemoryStoreActor\">MemoryStoreActor</a>","synthetic":true,"types":["actix_ratelimit::stores::memory::MemoryStoreActor"]}];
implementors["actix_router"] = [{"text":"impl&lt;'de, T&gt; Freeze for <a class=\"struct\" href=\"actix_router/struct.PathDeserializer.html\" title=\"struct actix_router::PathDeserializer\">PathDeserializer</a>&lt;'de, T&gt;","synthetic":true,"types":["actix_router::de::PathDeserializer"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_router/struct.Path.html\" title=\"struct actix_router::Path\">Path</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_router::path::Path"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"actix_router/struct.ResourceDef.html\" title=\"struct actix_router::ResourceDef\">ResourceDef</a>","synthetic":true,"types":["actix_router::resource::ResourceDef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_router/struct.ResourceInfo.html\" title=\"struct actix_router::ResourceInfo\">ResourceInfo</a>","synthetic":true,"types":["actix_router::router::ResourceInfo"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"actix_router/struct.Router.html\" title=\"struct actix_router::Router\">Router</a>&lt;T, U&gt;","synthetic":true,"types":["actix_router::router::Router"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"actix_router/struct.RouterBuilder.html\" title=\"struct actix_router::RouterBuilder\">RouterBuilder</a>&lt;T, U&gt;","synthetic":true,"types":["actix_router::router::RouterBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_router/struct.Quoter.html\" title=\"struct actix_router::Quoter\">Quoter</a>","synthetic":true,"types":["actix_router::url::Quoter"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"actix_router/struct.Url.html\" title=\"struct actix_router::Url\">Url</a>","synthetic":true,"types":["actix_router::url::Url"]}];
implementors["actix_rt"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"actix_rt/struct.Arbiter.html\" title=\"struct actix_rt::Arbiter\">Arbiter</a>","synthetic":true,"types":["actix_rt::arbiter::Arbiter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_rt/struct.Builder.html\" title=\"struct actix_rt::Builder\">Builder</a>","synthetic":true,"types":["actix_rt::builder::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_rt/struct.SystemRunner.html\" title=\"struct actix_rt::SystemRunner\">SystemRunner</a>","synthetic":true,"types":["actix_rt::builder::SystemRunner"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_rt/struct.Runtime.html\" title=\"struct actix_rt::Runtime\">Runtime</a>","synthetic":true,"types":["actix_rt::runtime::Runtime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_rt/struct.System.html\" title=\"struct actix_rt::System\">System</a>","synthetic":true,"types":["actix_rt::system::System"]}];
implementors["actix_server"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"actix_server/struct.ServerBuilder.html\" title=\"struct actix_server::ServerBuilder\">ServerBuilder</a>","synthetic":true,"types":["actix_server::builder::ServerBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_server/struct.ServiceConfig.html\" title=\"struct actix_server::ServiceConfig\">ServiceConfig</a>","synthetic":true,"types":["actix_server::config::ServiceConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_server/struct.ServiceRuntime.html\" title=\"struct actix_server::ServiceRuntime\">ServiceRuntime</a>","synthetic":true,"types":["actix_server::config::ServiceRuntime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_server/struct.Server.html\" title=\"struct actix_server::Server\">Server</a>","synthetic":true,"types":["actix_server::server::Server"]}];
implementors["actix_service"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_service/struct.Pipeline.html\" title=\"struct actix_service::Pipeline\">Pipeline</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_service::pipeline::Pipeline"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_service/struct.PipelineFactory.html\" title=\"struct actix_service::PipelineFactory\">PipelineFactory</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_service::pipeline::PipelineFactory"]},{"text":"impl&lt;T, F, R, In, Out, Err&gt; Freeze for <a class=\"struct\" href=\"actix_service/dev/struct.Apply.html\" title=\"struct actix_service::dev::Apply\">Apply</a>&lt;T, F, R, In, Out, Err&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_service::apply::Apply"]},{"text":"impl&lt;T, F, R, In, Out, Err&gt; Freeze for <a class=\"struct\" href=\"actix_service/dev/struct.ApplyServiceFactory.html\" title=\"struct actix_service::dev::ApplyServiceFactory\">ApplyServiceFactory</a>&lt;T, F, R, In, Out, Err&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_service::apply::ApplyServiceFactory"]},{"text":"impl&lt;C, Req, Res, Err, InitErr&gt; Freeze for <a class=\"struct\" href=\"actix_service/boxed/struct.BoxServiceFactory.html\" title=\"struct actix_service::boxed::BoxServiceFactory\">BoxServiceFactory</a>&lt;C, Req, Res, Err, InitErr&gt;","synthetic":true,"types":["actix_service::boxed::BoxServiceFactory"]},{"text":"impl&lt;F, Fut, Req, Res, Err&gt; Freeze for <a class=\"struct\" href=\"actix_service/dev/struct.FnService.html\" title=\"struct actix_service::dev::FnService\">FnService</a>&lt;F, Fut, Req, Res, Err&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_service::fn_service::FnService"]},{"text":"impl&lt;F, Fut, Req, Res, Err, Cfg&gt; Freeze for <a class=\"struct\" href=\"actix_service/dev/struct.FnServiceFactory.html\" title=\"struct actix_service::dev::FnServiceFactory\">FnServiceFactory</a>&lt;F, Fut, Req, Res, Err, Cfg&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_service::fn_service::FnServiceFactory"]},{"text":"impl&lt;F, Fut, Cfg, Srv, Err&gt; Freeze for <a class=\"struct\" href=\"actix_service/dev/struct.FnServiceConfig.html\" title=\"struct actix_service::dev::FnServiceConfig\">FnServiceConfig</a>&lt;F, Fut, Cfg, Srv, Err&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_service::fn_service::FnServiceConfig"]},{"text":"impl&lt;F, C, S, R, E&gt; Freeze for <a class=\"struct\" href=\"actix_service/dev/struct.FnServiceNoConfig.html\" title=\"struct actix_service::dev::FnServiceNoConfig\">FnServiceNoConfig</a>&lt;F, C, S, R, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_service::fn_service::FnServiceNoConfig"]},{"text":"impl&lt;A, F, Response&gt; Freeze for <a class=\"struct\" href=\"actix_service/dev/struct.Map.html\" title=\"struct actix_service::dev::Map\">Map</a>&lt;A, F, Response&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_service::map::Map"]},{"text":"impl&lt;A, F, Res&gt; Freeze for <a class=\"struct\" href=\"actix_service/dev/struct.MapServiceFactory.html\" title=\"struct actix_service::dev::MapServiceFactory\">MapServiceFactory</a>&lt;A, F, Res&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_service::map::MapServiceFactory"]},{"text":"impl&lt;A, F, C&gt; Freeze for <a class=\"struct\" href=\"actix_service/dev/struct.MapConfig.html\" title=\"struct actix_service::dev::MapConfig\">MapConfig</a>&lt;A, F, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_service::map_config::MapConfig"]},{"text":"impl&lt;A, C&gt; Freeze for <a class=\"struct\" href=\"actix_service/dev/struct.UnitConfig.html\" title=\"struct actix_service::dev::UnitConfig\">UnitConfig</a>&lt;A, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_service::map_config::UnitConfig"]},{"text":"impl&lt;A, F, E&gt; Freeze for <a class=\"struct\" href=\"actix_service/dev/struct.MapErr.html\" title=\"struct actix_service::dev::MapErr\">MapErr</a>&lt;A, F, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_service::map_err::MapErr"]},{"text":"impl&lt;A, F, E&gt; Freeze for <a class=\"struct\" href=\"actix_service/dev/struct.MapErrServiceFactory.html\" title=\"struct actix_service::dev::MapErrServiceFactory\">MapErrServiceFactory</a>&lt;A, F, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_service::map_err::MapErrServiceFactory"]},{"text":"impl&lt;A, F, E&gt; Freeze for <a class=\"struct\" href=\"actix_service/dev/struct.MapInitErr.html\" title=\"struct actix_service::dev::MapInitErr\">MapInitErr</a>&lt;A, F, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_service::map_init_err::MapInitErr"]},{"text":"impl&lt;T, S&gt; Freeze for <a class=\"struct\" href=\"actix_service/dev/struct.ApplyTransform.html\" title=\"struct actix_service::dev::ApplyTransform\">ApplyTransform</a>&lt;T, S&gt;","synthetic":true,"types":["actix_service::transform::ApplyTransform"]},{"text":"impl&lt;T, S, F, E&gt; Freeze for <a class=\"struct\" href=\"actix_service/dev/struct.TransformMapInitErr.html\" title=\"struct actix_service::dev::TransformMapInitErr\">TransformMapInitErr</a>&lt;T, S, F, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_service::transform_err::TransformMapInitErr"]}];
implementors["actix_testing"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"actix_testing/struct.TestServer.html\" title=\"struct actix_testing::TestServer\">TestServer</a>","synthetic":true,"types":["actix_testing::TestServer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_testing/struct.TestServerRuntime.html\" title=\"struct actix_testing::TestServerRuntime\">TestServerRuntime</a>","synthetic":true,"types":["actix_testing::TestServerRuntime"]}];
implementors["actix_threadpool"] = [{"text":"impl&lt;I, E&gt; Freeze for <a class=\"struct\" href=\"actix_threadpool/struct.CpuFuture.html\" title=\"struct actix_threadpool::CpuFuture\">CpuFuture</a>&lt;I, E&gt;","synthetic":true,"types":["actix_threadpool::CpuFuture"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"enum\" href=\"actix_threadpool/enum.BlockingError.html\" title=\"enum actix_threadpool::BlockingError\">BlockingError</a>&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_threadpool::BlockingError"]}];
implementors["actix_tls"] = [{"text":"impl&lt;E1, E2&gt; Freeze for <a class=\"enum\" href=\"actix_tls/enum.SslError.html\" title=\"enum actix_tls::SslError\">SslError</a>&lt;E1, E2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;E2: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_tls::SslError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_tls/rustls/struct.Acceptor.html\" title=\"struct actix_tls::rustls::Acceptor\">Acceptor</a>&lt;T&gt;","synthetic":true,"types":["actix_tls::rustls::Acceptor"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_tls/rustls/struct.AcceptorService.html\" title=\"struct actix_tls::rustls::AcceptorService\">AcceptorService</a>&lt;T&gt;","synthetic":true,"types":["actix_tls::rustls::AcceptorService"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_tls/rustls/struct.AcceptorServiceFut.html\" title=\"struct actix_tls::rustls::AcceptorServiceFut\">AcceptorServiceFut</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_tls::rustls::AcceptorServiceFut"]}];
implementors["actix_utils"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"actix_utils/condition/struct.Condition.html\" title=\"struct actix_utils::condition::Condition\">Condition</a>","synthetic":true,"types":["actix_utils::condition::Condition"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_utils/condition/struct.Waiter.html\" title=\"struct actix_utils::condition::Waiter\">Waiter</a>","synthetic":true,"types":["actix_utils::condition::Waiter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_utils/counter/struct.Counter.html\" title=\"struct actix_utils::counter::Counter\">Counter</a>","synthetic":true,"types":["actix_utils::counter::Counter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_utils/counter/struct.CounterGuard.html\" title=\"struct actix_utils::counter::CounterGuard\">CounterGuard</a>","synthetic":true,"types":["actix_utils::counter::CounterGuard"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"actix_utils/either/struct.EitherService.html\" title=\"struct actix_utils::either::EitherService\">EitherService</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_utils::either::EitherService"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"actix_utils/either/struct.Either.html\" title=\"struct actix_utils::either::Either\">Either</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_utils::either::Either"]},{"text":"impl&lt;S, T, U&gt; Freeze for <a class=\"struct\" href=\"actix_utils/framed/struct.Dispatcher.html\" title=\"struct actix_utils::framed::Dispatcher\">Dispatcher</a>&lt;S, T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"actix_service/trait.Service.html\" title=\"trait actix_service::Service\">Service</a>&gt;::<a class=\"type\" href=\"actix_service/trait.Service.html#associatedtype.Error\" title=\"type actix_service::Service::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as <a class=\"trait\" href=\"tokio_util/codec/decoder/trait.Decoder.html\" title=\"trait tokio_util::codec::decoder::Decoder\">Decoder</a>&gt;::<a class=\"type\" href=\"tokio_util/codec/decoder/trait.Decoder.html#associatedtype.Error\" title=\"type tokio_util::codec::decoder::Decoder::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as <a class=\"trait\" href=\"tokio_util/codec/encoder/trait.Encoder.html\" title=\"trait tokio_util::codec::encoder::Encoder\">Encoder</a>&gt;::<a class=\"type\" href=\"tokio_util/codec/encoder/trait.Encoder.html#associatedtype.Error\" title=\"type tokio_util::codec::encoder::Encoder::Error\">Error</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_utils::framed::Dispatcher"]},{"text":"impl&lt;E, U&gt; Freeze for <a class=\"enum\" href=\"actix_utils/framed/enum.DispatcherError.html\" title=\"enum actix_utils::framed::DispatcherError\">DispatcherError</a>&lt;E, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as <a class=\"trait\" href=\"tokio_util/codec/decoder/trait.Decoder.html\" title=\"trait tokio_util::codec::decoder::Decoder\">Decoder</a>&gt;::<a class=\"type\" href=\"tokio_util/codec/decoder/trait.Decoder.html#associatedtype.Error\" title=\"type tokio_util::codec::decoder::Decoder::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as <a class=\"trait\" href=\"tokio_util/codec/encoder/trait.Encoder.html\" title=\"trait tokio_util::codec::encoder::Encoder\">Encoder</a>&gt;::<a class=\"type\" href=\"tokio_util/codec/encoder/trait.Encoder.html#associatedtype.Error\" title=\"type tokio_util::codec::encoder::Encoder::Error\">Error</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_utils::framed::DispatcherError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"actix_utils/framed/enum.Message.html\" title=\"enum actix_utils::framed::Message\">Message</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_utils::framed::Message"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_utils/inflight/struct.InFlight.html\" title=\"struct actix_utils::inflight::InFlight\">InFlight</a>","synthetic":true,"types":["actix_utils::inflight::InFlight"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"actix_utils/inflight/struct.InFlightService.html\" title=\"struct actix_utils::inflight::InFlightService\">InFlightService</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_utils::inflight::InFlightService"]},{"text":"impl&lt;R, E, F&gt; Freeze for <a class=\"struct\" href=\"actix_utils/keepalive/struct.KeepAlive.html\" title=\"struct actix_utils::keepalive::KeepAlive\">KeepAlive</a>&lt;R, E, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_utils::keepalive::KeepAlive"]},{"text":"impl&lt;R, E, F&gt; Freeze for <a class=\"struct\" href=\"actix_utils/keepalive/struct.KeepAliveService.html\" title=\"struct actix_utils::keepalive::KeepAliveService\">KeepAliveService</a>&lt;R, E, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_utils::keepalive::KeepAliveService"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_utils/mpsc/struct.Sender.html\" title=\"struct actix_utils::mpsc::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["actix_utils::mpsc::Sender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_utils/mpsc/struct.Receiver.html\" title=\"struct actix_utils::mpsc::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["actix_utils::mpsc::Receiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_utils/mpsc/struct.SendError.html\" title=\"struct actix_utils::mpsc::SendError\">SendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_utils::mpsc::SendError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_utils/oneshot/struct.Sender.html\" title=\"struct actix_utils::oneshot::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["actix_utils::oneshot::Sender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_utils/oneshot/struct.Receiver.html\" title=\"struct actix_utils::oneshot::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["actix_utils::oneshot::Receiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_utils/oneshot/struct.Pool.html\" title=\"struct actix_utils::oneshot::Pool\">Pool</a>&lt;T&gt;","synthetic":true,"types":["actix_utils::oneshot::Pool"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_utils/oneshot/struct.Flags.html\" title=\"struct actix_utils::oneshot::Flags\">Flags</a>","synthetic":true,"types":["actix_utils::oneshot::Flags"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_utils/oneshot/struct.PSender.html\" title=\"struct actix_utils::oneshot::PSender\">PSender</a>&lt;T&gt;","synthetic":true,"types":["actix_utils::oneshot::PSender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_utils/oneshot/struct.PReceiver.html\" title=\"struct actix_utils::oneshot::PReceiver\">PReceiver</a>&lt;T&gt;","synthetic":true,"types":["actix_utils::oneshot::PReceiver"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"actix_utils/order/struct.InOrder.html\" title=\"struct actix_utils::order::InOrder\">InOrder</a>&lt;S&gt;","synthetic":true,"types":["actix_utils::order::InOrder"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"actix_utils/order/struct.InOrderService.html\" title=\"struct actix_utils::order::InOrderService\">InOrderService</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_utils::order::InOrderService"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"enum\" href=\"actix_utils/order/enum.InOrderError.html\" title=\"enum actix_utils::order::InOrderError\">InOrderError</a>&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_utils::order::InOrderError"]},{"text":"impl&lt;S, T&gt; Freeze for <a class=\"struct\" href=\"actix_utils/stream/struct.Dispatcher.html\" title=\"struct actix_utils::stream::Dispatcher\">Dispatcher</a>&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_utils::stream::Dispatcher"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"actix_utils/task/struct.LocalWaker.html\" title=\"struct actix_utils::task::LocalWaker\">LocalWaker</a>","synthetic":true,"types":["actix_utils::task::LocalWaker"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_utils/time/struct.LowResTime.html\" title=\"struct actix_utils::time::LowResTime\">LowResTime</a>","synthetic":true,"types":["actix_utils::time::LowResTime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_utils/time/struct.LowResTimeService.html\" title=\"struct actix_utils::time::LowResTimeService\">LowResTimeService</a>","synthetic":true,"types":["actix_utils::time::LowResTimeService"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_utils/time/struct.SystemTime.html\" title=\"struct actix_utils::time::SystemTime\">SystemTime</a>","synthetic":true,"types":["actix_utils::time::SystemTime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_utils/time/struct.SystemTimeService.html\" title=\"struct actix_utils::time::SystemTimeService\">SystemTimeService</a>","synthetic":true,"types":["actix_utils::time::SystemTimeService"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"actix_utils/timeout/struct.Timeout.html\" title=\"struct actix_utils::timeout::Timeout\">Timeout</a>&lt;E&gt;","synthetic":true,"types":["actix_utils::timeout::Timeout"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"actix_utils/timeout/struct.TimeoutService.html\" title=\"struct actix_utils::timeout::TimeoutService\">TimeoutService</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_utils::timeout::TimeoutService"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_utils/timeout/struct.TimeoutServiceResponse.html\" title=\"struct actix_utils::timeout::TimeoutServiceResponse\">TimeoutServiceResponse</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as <a class=\"trait\" href=\"actix_service/trait.Service.html\" title=\"trait actix_service::Service\">Service</a>&gt;::<a class=\"type\" href=\"actix_service/trait.Service.html#associatedtype.Future\" title=\"type actix_service::Service::Future\">Future</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_utils::timeout::TimeoutServiceResponse"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"enum\" href=\"actix_utils/timeout/enum.TimeoutError.html\" title=\"enum actix_utils::timeout::TimeoutError\">TimeoutError</a>&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_utils::timeout::TimeoutError"]}];
implementors["actix_web"] = [{"text":"impl&lt;T, B&gt; Freeze for <a class=\"struct\" href=\"actix_web/struct.App.html\" title=\"struct actix_web::App\">App</a>&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_web::app::App"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/struct.HttpRequest.html\" title=\"struct actix_web::HttpRequest\">HttpRequest</a>","synthetic":true,"types":["actix_web::request::HttpRequest"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_web/struct.Resource.html\" title=\"struct actix_web::Resource\">Resource</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_web::resource::Resource"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/struct.Route.html\" title=\"struct actix_web::Route\">Route</a>","synthetic":true,"types":["actix_web::route::Route"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_web/struct.Scope.html\" title=\"struct actix_web::Scope\">Scope</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_web::scope::Scope"]},{"text":"impl&lt;F, I, S, B&gt; !Freeze for <a class=\"struct\" href=\"actix_web/struct.HttpServer.html\" title=\"struct actix_web::HttpServer\">HttpServer</a>&lt;F, I, S, B&gt;","synthetic":true,"types":["actix_web::server::HttpServer"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"enum\" href=\"actix_web/enum.Either.html\" title=\"enum actix_web::Either\">Either</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_web::responder::Either"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/dev/struct.AppService.html\" title=\"struct actix_web::dev::AppService\">AppService</a>","synthetic":true,"types":["actix_web::config::AppService"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/dev/struct.AppConfig.html\" title=\"struct actix_web::dev::AppConfig\">AppConfig</a>","synthetic":true,"types":["actix_web::config::AppConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/web/struct.ServiceConfig.html\" title=\"struct actix_web::web::ServiceConfig\">ServiceConfig</a>","synthetic":true,"types":["actix_web::config::ServiceConfig"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_web/web/struct.Data.html\" title=\"struct actix_web::web::Data\">Data</a>&lt;T&gt;","synthetic":true,"types":["actix_web::data::Data"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_web/error/enum.UrlGenerationError.html\" title=\"enum actix_web::error::UrlGenerationError\">UrlGenerationError</a>","synthetic":true,"types":["actix_web::error::UrlGenerationError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_web/error/enum.UrlencodedError.html\" title=\"enum actix_web::error::UrlencodedError\">UrlencodedError</a>","synthetic":true,"types":["actix_web::error::UrlencodedError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_web/error/enum.JsonPayloadError.html\" title=\"enum actix_web::error::JsonPayloadError\">JsonPayloadError</a>","synthetic":true,"types":["actix_web::error::JsonPayloadError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_web/error/enum.PathError.html\" title=\"enum actix_web::error::PathError\">PathError</a>","synthetic":true,"types":["actix_web::error::PathError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_web/error/enum.QueryPayloadError.html\" title=\"enum actix_web::error::QueryPayloadError\">QueryPayloadError</a>","synthetic":true,"types":["actix_web::error::QueryPayloadError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_web/error/enum.ReadlinesError.html\" title=\"enum actix_web::error::ReadlinesError\">ReadlinesError</a>","synthetic":true,"types":["actix_web::error::ReadlinesError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/guard/struct.AnyGuard.html\" title=\"struct actix_web::guard::AnyGuard\">AnyGuard</a>","synthetic":true,"types":["actix_web::guard::AnyGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/guard/struct.AllGuard.html\" title=\"struct actix_web::guard::AllGuard\">AllGuard</a>","synthetic":true,"types":["actix_web::guard::AllGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/dev/struct.ConnectionInfo.html\" title=\"struct actix_web::dev::ConnectionInfo\">ConnectionInfo</a>","synthetic":true,"types":["actix_web::info::ConnectionInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/middleware/struct.Compress.html\" title=\"struct actix_web::middleware::Compress\">Compress</a>","synthetic":true,"types":["actix_web::middleware::compress::Compress"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_web/middleware/struct.Condition.html\" title=\"struct actix_web::middleware::Condition\">Condition</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_web::middleware::condition::Condition"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/middleware/struct.DefaultHeaders.html\" title=\"struct actix_web::middleware::DefaultHeaders\">DefaultHeaders</a>","synthetic":true,"types":["actix_web::middleware::defaultheaders::DefaultHeaders"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/middleware/struct.Logger.html\" title=\"struct actix_web::middleware::Logger\">Logger</a>","synthetic":true,"types":["actix_web::middleware::logger::Logger"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/middleware/struct.NormalizePath.html\" title=\"struct actix_web::middleware::NormalizePath\">NormalizePath</a>","synthetic":true,"types":["actix_web::middleware::normalize::NormalizePath"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"actix_web/middleware/errhandlers/struct.ErrorHandlers.html\" title=\"struct actix_web::middleware::errhandlers::ErrorHandlers\">ErrorHandlers</a>&lt;B&gt;","synthetic":true,"types":["actix_web::middleware::errhandlers::ErrorHandlers"]},{"text":"impl&lt;B&gt; !Freeze for <a class=\"enum\" href=\"actix_web/middleware/errhandlers/enum.ErrorHandlerResponse.html\" title=\"enum actix_web::middleware::errhandlers::ErrorHandlerResponse\">ErrorHandlerResponse</a>&lt;B&gt;","synthetic":true,"types":["actix_web::middleware::errhandlers::ErrorHandlerResponse"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"actix_web/dev/struct.ResourceMap.html\" title=\"struct actix_web::dev::ResourceMap\">ResourceMap</a>","synthetic":true,"types":["actix_web::rmap::ResourceMap"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/dev/struct.ServiceRequest.html\" title=\"struct actix_web::dev::ServiceRequest\">ServiceRequest</a>","synthetic":true,"types":["actix_web::service::ServiceRequest"]},{"text":"impl&lt;B&nbsp;=&nbsp;<a class=\"enum\" href=\"actix_web/dev/enum.Body.html\" title=\"enum actix_web::dev::Body\">Body</a>&gt; !Freeze for <a class=\"struct\" href=\"actix_web/dev/struct.ServiceResponse.html\" title=\"struct actix_web::dev::ServiceResponse\">ServiceResponse</a>&lt;B&gt;","synthetic":true,"types":["actix_web::service::ServiceResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/dev/struct.WebService.html\" title=\"struct actix_web::dev::WebService\">WebService</a>","synthetic":true,"types":["actix_web::service::WebService"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"actix_web/test/struct.TestRequest.html\" title=\"struct actix_web::test::TestRequest\">TestRequest</a>","synthetic":true,"types":["actix_web::test::TestRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/test/struct.TestServerConfig.html\" title=\"struct actix_web::test::TestServerConfig\">TestServerConfig</a>","synthetic":true,"types":["actix_web::test::TestServerConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/test/struct.TestServer.html\" title=\"struct actix_web::test::TestServer\">TestServer</a>","synthetic":true,"types":["actix_web::test::TestServer"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_web/web/struct.Form.html\" title=\"struct actix_web::web::Form\">Form</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_web::types::form::Form"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/web/struct.FormConfig.html\" title=\"struct actix_web::web::FormConfig\">FormConfig</a>","synthetic":true,"types":["actix_web::types::form::FormConfig"]},{"text":"impl&lt;U&gt; Freeze for <a class=\"struct\" href=\"actix_web/dev/struct.UrlEncoded.html\" title=\"struct actix_web::dev::UrlEncoded\">UrlEncoded</a>&lt;U&gt;","synthetic":true,"types":["actix_web::types::form::UrlEncoded"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_web/web/struct.Json.html\" title=\"struct actix_web::web::Json\">Json</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_web::types::json::Json"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/web/struct.JsonConfig.html\" title=\"struct actix_web::web::JsonConfig\">JsonConfig</a>","synthetic":true,"types":["actix_web::types::json::JsonConfig"]},{"text":"impl&lt;U&gt; Freeze for <a class=\"struct\" href=\"actix_web/dev/struct.JsonBody.html\" title=\"struct actix_web::dev::JsonBody\">JsonBody</a>&lt;U&gt;","synthetic":true,"types":["actix_web::types::json::JsonBody"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_web/web/struct.Path.html\" title=\"struct actix_web::web::Path\">Path</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_web::types::path::Path"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/web/struct.PathConfig.html\" title=\"struct actix_web::web::PathConfig\">PathConfig</a>","synthetic":true,"types":["actix_web::types::path::PathConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/web/struct.Payload.html\" title=\"struct actix_web::web::Payload\">Payload</a>","synthetic":true,"types":["actix_web::types::payload::Payload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/web/struct.PayloadConfig.html\" title=\"struct actix_web::web::PayloadConfig\">PayloadConfig</a>","synthetic":true,"types":["actix_web::types::payload::PayloadConfig"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_web/web/struct.Query.html\" title=\"struct actix_web::web::Query\">Query</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_web::types::query::Query"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/web/struct.QueryConfig.html\" title=\"struct actix_web::web::QueryConfig\">QueryConfig</a>","synthetic":true,"types":["actix_web::types::query::QueryConfig"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_web/web/struct.Readlines.html\" title=\"struct actix_web::web::Readlines\">Readlines</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as <a class=\"trait\" href=\"actix_web/trait.HttpMessage.html\" title=\"trait actix_web::HttpMessage\">HttpMessage</a>&gt;::<a class=\"type\" href=\"actix_web/trait.HttpMessage.html#associatedtype.Stream\" title=\"type actix_web::HttpMessage::Stream\">Stream</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_web::types::readlines::Readlines"]}];
implementors["actix_web_httpauth"] = [{"text":"impl&lt;C&gt; Freeze for <a class=\"struct\" href=\"actix_web_httpauth/extractors/struct.AuthenticationError.html\" title=\"struct actix_web_httpauth::extractors::AuthenticationError\">AuthenticationError</a>&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_web_httpauth::extractors::errors::AuthenticationError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web_httpauth/extractors/basic/struct.Config.html\" title=\"struct actix_web_httpauth::extractors::basic::Config\">Config</a>","synthetic":true,"types":["actix_web_httpauth::extractors::basic::Config"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web_httpauth/extractors/basic/struct.BasicAuth.html\" title=\"struct actix_web_httpauth::extractors::basic::BasicAuth\">BasicAuth</a>","synthetic":true,"types":["actix_web_httpauth::extractors::basic::BasicAuth"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web_httpauth/extractors/bearer/struct.Config.html\" title=\"struct actix_web_httpauth::extractors::bearer::Config\">Config</a>","synthetic":true,"types":["actix_web_httpauth::extractors::bearer::Config"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web_httpauth/extractors/bearer/struct.BearerAuth.html\" title=\"struct actix_web_httpauth::extractors::bearer::BearerAuth\">BearerAuth</a>","synthetic":true,"types":["actix_web_httpauth::extractors::bearer::BearerAuth"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_web_httpauth/extractors/bearer/enum.Error.html\" title=\"enum actix_web_httpauth::extractors::bearer::Error\">Error</a>","synthetic":true,"types":["actix_web_httpauth::headers::www_authenticate::challenge::bearer::errors::Error"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"actix_web_httpauth/headers/authorization/struct.Authorization.html\" title=\"struct actix_web_httpauth::headers::authorization::Authorization\">Authorization</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_web_httpauth::headers::authorization::header::Authorization"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web_httpauth/headers/authorization/struct.Basic.html\" title=\"struct actix_web_httpauth::headers::authorization::Basic\">Basic</a>","synthetic":true,"types":["actix_web_httpauth::headers::authorization::scheme::basic::Basic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web_httpauth/headers/authorization/struct.Bearer.html\" title=\"struct actix_web_httpauth::headers::authorization::Bearer\">Bearer</a>","synthetic":true,"types":["actix_web_httpauth::headers::authorization::scheme::bearer::Bearer"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_web_httpauth/headers/authorization/enum.ParseError.html\" title=\"enum actix_web_httpauth::headers::authorization::ParseError\">ParseError</a>","synthetic":true,"types":["actix_web_httpauth::headers::authorization::errors::ParseError"]},{"text":"impl&lt;C&gt; Freeze for <a class=\"struct\" href=\"actix_web_httpauth/headers/www_authenticate/struct.WwwAuthenticate.html\" title=\"struct actix_web_httpauth::headers::www_authenticate::WwwAuthenticate\">WwwAuthenticate</a>&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_web_httpauth::headers::www_authenticate::header::WwwAuthenticate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web_httpauth/headers/www_authenticate/basic/struct.Basic.html\" title=\"struct actix_web_httpauth::headers::www_authenticate::basic::Basic\">Basic</a>","synthetic":true,"types":["actix_web_httpauth::headers::www_authenticate::challenge::basic::Basic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web_httpauth/headers/www_authenticate/bearer/struct.BearerBuilder.html\" title=\"struct actix_web_httpauth::headers::www_authenticate::bearer::BearerBuilder\">BearerBuilder</a>","synthetic":true,"types":["actix_web_httpauth::headers::www_authenticate::challenge::bearer::builder::BearerBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web_httpauth/headers/www_authenticate/bearer/struct.Bearer.html\" title=\"struct actix_web_httpauth::headers::www_authenticate::bearer::Bearer\">Bearer</a>","synthetic":true,"types":["actix_web_httpauth::headers::www_authenticate::challenge::bearer::challenge::Bearer"]},{"text":"impl&lt;T, F&gt; Freeze for <a class=\"struct\" href=\"actix_web_httpauth/middleware/struct.HttpAuthentication.html\" title=\"struct actix_web_httpauth::middleware::HttpAuthentication\">HttpAuthentication</a>&lt;T, F&gt;","synthetic":true,"types":["actix_web_httpauth::middleware::HttpAuthentication"]}];
implementors["adler32"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"adler32/struct.RollingAdler32.html\" title=\"struct adler32::RollingAdler32\">RollingAdler32</a>","synthetic":true,"types":["adler32::RollingAdler32"]}];
implementors["ahash"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"ahash/struct.AHasher.html\" title=\"struct ahash::AHasher\">AHasher</a>","synthetic":true,"types":["ahash::fallback_hash::AHasher"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ahash/struct.RandomState.html\" title=\"struct ahash::RandomState\">RandomState</a>","synthetic":true,"types":["ahash::random_state::RandomState"]},{"text":"impl&lt;K, V, S&gt; Freeze for <a class=\"struct\" href=\"ahash/struct.AHashMap.html\" title=\"struct ahash::AHashMap\">AHashMap</a>&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["ahash::hash_map::AHashMap"]},{"text":"impl&lt;T, S&gt; Freeze for <a class=\"struct\" href=\"ahash/struct.AHashSet.html\" title=\"struct ahash::AHashSet\">AHashSet</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["ahash::hash_set::AHashSet"]}];
implementors["aho_corasick"] = [{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/struct.AhoCorasick.html\" title=\"struct aho_corasick::AhoCorasick\">AhoCorasick</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["aho_corasick::ahocorasick::AhoCorasick"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/struct.AhoCorasickBuilder.html\" title=\"struct aho_corasick::AhoCorasickBuilder\">AhoCorasickBuilder</a>","synthetic":true,"types":["aho_corasick::ahocorasick::AhoCorasickBuilder"]},{"text":"impl&lt;'a, 'b, S&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/struct.FindIter.html\" title=\"struct aho_corasick::FindIter\">FindIter</a>&lt;'a, 'b, S&gt;","synthetic":true,"types":["aho_corasick::ahocorasick::FindIter"]},{"text":"impl&lt;'a, 'b, S&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/struct.FindOverlappingIter.html\" title=\"struct aho_corasick::FindOverlappingIter\">FindOverlappingIter</a>&lt;'a, 'b, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["aho_corasick::ahocorasick::FindOverlappingIter"]},{"text":"impl&lt;'a, R, S&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/struct.StreamFindIter.html\" title=\"struct aho_corasick::StreamFindIter\">StreamFindIter</a>&lt;'a, R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["aho_corasick::ahocorasick::StreamFindIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/struct.Error.html\" title=\"struct aho_corasick::Error\">Error</a>","synthetic":true,"types":["aho_corasick::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/struct.Match.html\" title=\"struct aho_corasick::Match\">Match</a>","synthetic":true,"types":["aho_corasick::Match"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aho_corasick/enum.MatchKind.html\" title=\"enum aho_corasick::MatchKind\">MatchKind</a>","synthetic":true,"types":["aho_corasick::ahocorasick::MatchKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aho_corasick/enum.ErrorKind.html\" title=\"enum aho_corasick::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["aho_corasick::error::ErrorKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/packed/struct.Builder.html\" title=\"struct aho_corasick::packed::Builder\">Builder</a>","synthetic":true,"types":["aho_corasick::packed::api::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/packed/struct.Config.html\" title=\"struct aho_corasick::packed::Config\">Config</a>","synthetic":true,"types":["aho_corasick::packed::api::Config"]},{"text":"impl&lt;'s, 'h&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/packed/struct.FindIter.html\" title=\"struct aho_corasick::packed::FindIter\">FindIter</a>&lt;'s, 'h&gt;","synthetic":true,"types":["aho_corasick::packed::api::FindIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/packed/struct.Searcher.html\" title=\"struct aho_corasick::packed::Searcher\">Searcher</a>","synthetic":true,"types":["aho_corasick::packed::api::Searcher"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aho_corasick/packed/enum.MatchKind.html\" title=\"enum aho_corasick::packed::MatchKind\">MatchKind</a>","synthetic":true,"types":["aho_corasick::packed::api::MatchKind"]}];
implementors["arc_swap"] = [{"text":"impl&lt;'l, T&gt; Freeze for <a class=\"struct\" href=\"arc_swap/struct.Guard.html\" title=\"struct arc_swap::Guard\">Guard</a>&lt;'l, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["arc_swap::Guard"]},{"text":"impl&lt;T, S&nbsp;=&nbsp;<a class=\"struct\" href=\"arc_swap/gen_lock/struct.Global.html\" title=\"struct arc_swap::gen_lock::Global\">Global</a>&gt; !Freeze for <a class=\"struct\" href=\"arc_swap/struct.ArcSwapAny.html\" title=\"struct arc_swap::ArcSwapAny\">ArcSwapAny</a>&lt;T, S&gt;","synthetic":true,"types":["arc_swap::ArcSwapAny"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"arc_swap/access/struct.DirectDeref.html\" title=\"struct arc_swap::access::DirectDeref\">DirectDeref</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["arc_swap::access::DirectDeref"]},{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"arc_swap/access/struct.DynGuard.html\" title=\"struct arc_swap::access::DynGuard\">DynGuard</a>&lt;T&gt;","synthetic":true,"types":["arc_swap::access::DynGuard"]},{"text":"impl&lt;G, T&gt; Freeze for <a class=\"struct\" href=\"arc_swap/access/struct.MapGuard.html\" title=\"struct arc_swap::access::MapGuard\">MapGuard</a>&lt;G, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":["arc_swap::access::MapGuard"]},{"text":"impl&lt;A, T, F&gt; Freeze for <a class=\"struct\" href=\"arc_swap/access/struct.Map.html\" title=\"struct arc_swap::access::Map\">Map</a>&lt;A, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["arc_swap::access::Map"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"arc_swap/access/struct.ConstantDeref.html\" title=\"struct arc_swap::access::ConstantDeref\">ConstantDeref</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["arc_swap::access::ConstantDeref"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"arc_swap/access/struct.Constant.html\" title=\"struct arc_swap::access::Constant\">Constant</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["arc_swap::access::Constant"]},{"text":"impl&lt;A, T&gt; Freeze for <a class=\"struct\" href=\"arc_swap/cache/struct.Cache.html\" title=\"struct arc_swap::cache::Cache\">Cache</a>&lt;A, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["arc_swap::cache::Cache"]},{"text":"impl&lt;A, T, F&gt; Freeze for <a class=\"struct\" href=\"arc_swap/cache/struct.MapCache.html\" title=\"struct arc_swap::cache::MapCache\">MapCache</a>&lt;A, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["arc_swap::cache::MapCache"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"arc_swap/gen_lock/struct.Shard.html\" title=\"struct arc_swap::gen_lock::Shard\">Shard</a>","synthetic":true,"types":["arc_swap::gen_lock::Shard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"arc_swap/gen_lock/struct.Global.html\" title=\"struct arc_swap::gen_lock::Global\">Global</a>","synthetic":true,"types":["arc_swap::gen_lock::Global"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"arc_swap/gen_lock/struct.PrivateUnsharded.html\" title=\"struct arc_swap::gen_lock::PrivateUnsharded\">PrivateUnsharded</a>","synthetic":true,"types":["arc_swap::gen_lock::PrivateUnsharded"]},{"text":"impl&lt;S&gt; !Freeze for <a class=\"struct\" href=\"arc_swap/gen_lock/struct.PrivateSharded.html\" title=\"struct arc_swap::gen_lock::PrivateSharded\">PrivateSharded</a>&lt;S&gt;","synthetic":true,"types":["arc_swap::gen_lock::PrivateSharded"]}];
implementors["arrayvec"] = [{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"arrayvec/struct.ArrayString.html\" title=\"struct arrayvec::ArrayString\">ArrayString</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as <a class=\"trait\" href=\"arrayvec/trait.Array.html\" title=\"trait arrayvec::Array\">Array</a>&gt;::<a class=\"type\" href=\"arrayvec/trait.Array.html#associatedtype.Index\" title=\"type arrayvec::Array::Index\">Index</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["arrayvec::array_string::ArrayString"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"arrayvec/struct.CapacityError.html\" title=\"struct arrayvec::CapacityError\">CapacityError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["arrayvec::errors::CapacityError"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"arrayvec/struct.ArrayVec.html\" title=\"struct arrayvec::ArrayVec\">ArrayVec</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as <a class=\"trait\" href=\"arrayvec/trait.Array.html\" title=\"trait arrayvec::Array\">Array</a>&gt;::<a class=\"type\" href=\"arrayvec/trait.Array.html#associatedtype.Index\" title=\"type arrayvec::Array::Index\">Index</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["arrayvec::ArrayVec"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"arrayvec/struct.IntoIter.html\" title=\"struct arrayvec::IntoIter\">IntoIter</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as <a class=\"trait\" href=\"arrayvec/trait.Array.html\" title=\"trait arrayvec::Array\">Array</a>&gt;::<a class=\"type\" href=\"arrayvec/trait.Array.html#associatedtype.Index\" title=\"type arrayvec::Array::Index\">Index</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["arrayvec::IntoIter"]},{"text":"impl&lt;'a, A&gt; Freeze for <a class=\"struct\" href=\"arrayvec/struct.Drain.html\" title=\"struct arrayvec::Drain\">Drain</a>&lt;'a, A&gt;","synthetic":true,"types":["arrayvec::Drain"]}];
implementors["atty"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"atty/enum.Stream.html\" title=\"enum atty::Stream\">Stream</a>","synthetic":true,"types":["atty::Stream"]}];
implementors["awc"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"awc/struct.ClientBuilder.html\" title=\"struct awc::ClientBuilder\">ClientBuilder</a>","synthetic":true,"types":["awc::builder::ClientBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"awc/struct.BoxedSocket.html\" title=\"struct awc::BoxedSocket\">BoxedSocket</a>","synthetic":true,"types":["awc::connect::BoxedSocket"]},{"text":"impl Freeze for <a class=\"struct\" href=\"awc/struct.FrozenClientRequest.html\" title=\"struct awc::FrozenClientRequest\">FrozenClientRequest</a>","synthetic":true,"types":["awc::frozen::FrozenClientRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"awc/struct.FrozenSendBuilder.html\" title=\"struct awc::FrozenSendBuilder\">FrozenSendBuilder</a>","synthetic":true,"types":["awc::frozen::FrozenSendBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"awc/struct.ClientRequest.html\" title=\"struct awc::ClientRequest\">ClientRequest</a>","synthetic":true,"types":["awc::request::ClientRequest"]},{"text":"impl&lt;S&nbsp;=&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"futures_core/stream/trait.Stream.html\" title=\"trait futures_core::stream::Stream\">Stream</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"bytes/bytes/struct.Bytes.html\" title=\"struct bytes::bytes::Bytes\">Bytes</a>, <a class=\"enum\" href=\"awc/error/enum.PayloadError.html\" title=\"enum awc::error::PayloadError\">PayloadError</a>&gt;&gt; + 'static&gt;&gt;&gt; !Freeze for <a class=\"struct\" href=\"awc/struct.ClientResponse.html\" title=\"struct awc::ClientResponse\">ClientResponse</a>&lt;S&gt;","synthetic":true,"types":["awc::response::ClientResponse"]},{"text":"impl&lt;S, U&gt; Freeze for <a class=\"struct\" href=\"awc/struct.JsonBody.html\" title=\"struct awc::JsonBody\">JsonBody</a>&lt;S, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["awc::response::JsonBody"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"awc/struct.MessageBody.html\" title=\"struct awc::MessageBody\">MessageBody</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["awc::response::MessageBody"]},{"text":"impl Freeze for <a class=\"struct\" href=\"awc/struct.Client.html\" title=\"struct awc::Client\">Client</a>","synthetic":true,"types":["awc::Client"]},{"text":"impl !Freeze for <a class=\"enum\" href=\"awc/enum.SendClientRequest.html\" title=\"enum awc::SendClientRequest\">SendClientRequest</a>","synthetic":true,"types":["awc::sender::SendClientRequest"]},{"text":"impl !Freeze for <a class=\"enum\" href=\"awc/error/enum.WsClientError.html\" title=\"enum awc::error::WsClientError\">WsClientError</a>","synthetic":true,"types":["awc::error::WsClientError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"awc/error/enum.JsonPayloadError.html\" title=\"enum awc::error::JsonPayloadError\">JsonPayloadError</a>","synthetic":true,"types":["awc::error::JsonPayloadError"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"awc/test/struct.TestResponse.html\" title=\"struct awc::test::TestResponse\">TestResponse</a>","synthetic":true,"types":["awc::test::TestResponse"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"awc/ws/struct.WebsocketsRequest.html\" title=\"struct awc::ws::WebsocketsRequest\">WebsocketsRequest</a>","synthetic":true,"types":["awc::ws::WebsocketsRequest"]}];
implementors["backtrace"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"backtrace/struct.Frame.html\" title=\"struct backtrace::Frame\">Frame</a>","synthetic":true,"types":["backtrace::backtrace::Frame"]},{"text":"impl Freeze for <a class=\"struct\" href=\"backtrace/struct.Symbol.html\" title=\"struct backtrace::Symbol\">Symbol</a>","synthetic":true,"types":["backtrace::symbolize::Symbol"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"backtrace/struct.SymbolName.html\" title=\"struct backtrace::SymbolName\">SymbolName</a>&lt;'a&gt;","synthetic":true,"types":["backtrace::symbolize::SymbolName"]},{"text":"impl&lt;'a, 'b&gt; Freeze for <a class=\"struct\" href=\"backtrace/struct.BacktraceFmt.html\" title=\"struct backtrace::BacktraceFmt\">BacktraceFmt</a>&lt;'a, 'b&gt;","synthetic":true,"types":["backtrace::print::BacktraceFmt"]},{"text":"impl&lt;'fmt, 'a, 'b&gt; Freeze for <a class=\"struct\" href=\"backtrace/struct.BacktraceFrameFmt.html\" title=\"struct backtrace::BacktraceFrameFmt\">BacktraceFrameFmt</a>&lt;'fmt, 'a, 'b&gt;","synthetic":true,"types":["backtrace::print::BacktraceFrameFmt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"backtrace/struct.Backtrace.html\" title=\"struct backtrace::Backtrace\">Backtrace</a>","synthetic":true,"types":["backtrace::capture::Backtrace"]},{"text":"impl Freeze for <a class=\"struct\" href=\"backtrace/struct.BacktraceFrame.html\" title=\"struct backtrace::BacktraceFrame\">BacktraceFrame</a>","synthetic":true,"types":["backtrace::capture::BacktraceFrame"]},{"text":"impl Freeze for <a class=\"struct\" href=\"backtrace/struct.BacktraceSymbol.html\" title=\"struct backtrace::BacktraceSymbol\">BacktraceSymbol</a>","synthetic":true,"types":["backtrace::capture::BacktraceSymbol"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"backtrace/enum.BytesOrWideString.html\" title=\"enum backtrace::BytesOrWideString\">BytesOrWideString</a>&lt;'a&gt;","synthetic":true,"types":["backtrace::types::BytesOrWideString"]},{"text":"impl Freeze for <a class=\"enum\" href=\"backtrace/enum.PrintFmt.html\" title=\"enum backtrace::PrintFmt\">PrintFmt</a>","synthetic":true,"types":["backtrace::print::PrintFmt"]}];
implementors["backtrace_sys"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"backtrace_sys/enum.backtrace_state.html\" title=\"enum backtrace_sys::backtrace_state\">backtrace_state</a>","synthetic":true,"types":["backtrace_sys::bindings::backtrace_state"]}];
implementors["base64"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"base64/struct.Config.html\" title=\"struct base64::Config\">Config</a>","synthetic":true,"types":["base64::Config"]},{"text":"impl Freeze for <a class=\"enum\" href=\"base64/enum.DecodeError.html\" title=\"enum base64::DecodeError\">DecodeError</a>","synthetic":true,"types":["base64::decode::DecodeError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"base64/enum.CharacterSet.html\" title=\"enum base64::CharacterSet\">CharacterSet</a>","synthetic":true,"types":["base64::CharacterSet"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"base64/display/struct.Base64Display.html\" title=\"struct base64::display::Base64Display\">Base64Display</a>&lt;'a&gt;","synthetic":true,"types":["base64::display::Base64Display"]},{"text":"impl&lt;'a, W&gt; Freeze for <a class=\"struct\" href=\"base64/write/struct.EncoderWriter.html\" title=\"struct base64::write::EncoderWriter\">EncoderWriter</a>&lt;'a, W&gt;","synthetic":true,"types":["base64::write::encoder::EncoderWriter"]}];
implementors["block_buffer"] = [{"text":"impl&lt;BlockSize&gt; Freeze for <a class=\"struct\" href=\"block_buffer/struct.BlockBuffer.html\" title=\"struct block_buffer::BlockBuffer\">BlockBuffer</a>&lt;BlockSize&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;BlockSize as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"type\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["block_buffer::BlockBuffer"]}];
implementors["block_padding"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"block_padding/struct.PadError.html\" title=\"struct block_padding::PadError\">PadError</a>","synthetic":true,"types":["block_padding::PadError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"block_padding/struct.UnpadError.html\" title=\"struct block_padding::UnpadError\">UnpadError</a>","synthetic":true,"types":["block_padding::UnpadError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"block_padding/enum.ZeroPadding.html\" title=\"enum block_padding::ZeroPadding\">ZeroPadding</a>","synthetic":true,"types":["block_padding::ZeroPadding"]},{"text":"impl Freeze for <a class=\"enum\" href=\"block_padding/enum.Pkcs7.html\" title=\"enum block_padding::Pkcs7\">Pkcs7</a>","synthetic":true,"types":["block_padding::Pkcs7"]},{"text":"impl Freeze for <a class=\"enum\" href=\"block_padding/enum.AnsiX923.html\" title=\"enum block_padding::AnsiX923\">AnsiX923</a>","synthetic":true,"types":["block_padding::AnsiX923"]},{"text":"impl Freeze for <a class=\"enum\" href=\"block_padding/enum.Iso7816.html\" title=\"enum block_padding::Iso7816\">Iso7816</a>","synthetic":true,"types":["block_padding::Iso7816"]},{"text":"impl Freeze for <a class=\"enum\" href=\"block_padding/enum.NoPadding.html\" title=\"enum block_padding::NoPadding\">NoPadding</a>","synthetic":true,"types":["block_padding::NoPadding"]}];
implementors["brotli2"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"brotli2/struct.CompressParams.html\" title=\"struct brotli2::CompressParams\">CompressParams</a>","synthetic":true,"types":["brotli2::CompressParams"]},{"text":"impl Freeze for <a class=\"enum\" href=\"brotli2/enum.CompressMode.html\" title=\"enum brotli2::CompressMode\">CompressMode</a>","synthetic":true,"types":["brotli2::CompressMode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli2/raw/struct.Decompress.html\" title=\"struct brotli2::raw::Decompress\">Decompress</a>","synthetic":true,"types":["brotli2::raw::Decompress"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli2/raw/struct.Compress.html\" title=\"struct brotli2::raw::Compress\">Compress</a>","synthetic":true,"types":["brotli2::raw::Compress"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli2/raw/struct.Error.html\" title=\"struct brotli2::raw::Error\">Error</a>","synthetic":true,"types":["brotli2::raw::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"brotli2/raw/enum.CompressOp.html\" title=\"enum brotli2::raw::CompressOp\">CompressOp</a>","synthetic":true,"types":["brotli2::raw::CompressOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"brotli2/raw/enum.CoStatus.html\" title=\"enum brotli2::raw::CoStatus\">CoStatus</a>","synthetic":true,"types":["brotli2::raw::CoStatus"]},{"text":"impl Freeze for <a class=\"enum\" href=\"brotli2/raw/enum.DeStatus.html\" title=\"enum brotli2::raw::DeStatus\">DeStatus</a>","synthetic":true,"types":["brotli2::raw::DeStatus"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"brotli2/bufread/struct.BrotliEncoder.html\" title=\"struct brotli2::bufread::BrotliEncoder\">BrotliEncoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli2::bufread::BrotliEncoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"brotli2/bufread/struct.BrotliDecoder.html\" title=\"struct brotli2::bufread::BrotliDecoder\">BrotliDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli2::bufread::BrotliDecoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"brotli2/read/struct.BrotliEncoder.html\" title=\"struct brotli2::read::BrotliEncoder\">BrotliEncoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli2::read::BrotliEncoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"brotli2/read/struct.BrotliDecoder.html\" title=\"struct brotli2::read::BrotliDecoder\">BrotliDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli2::read::BrotliDecoder"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"brotli2/write/struct.BrotliEncoder.html\" title=\"struct brotli2::write::BrotliEncoder\">BrotliEncoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli2::write::BrotliEncoder"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"brotli2/write/struct.BrotliDecoder.html\" title=\"struct brotli2::write::BrotliDecoder\">BrotliDecoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli2::write::BrotliDecoder"]}];
implementors["brotli_sys"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"brotli_sys/enum.BrotliDecoderState.html\" title=\"enum brotli_sys::BrotliDecoderState\">BrotliDecoderState</a>","synthetic":true,"types":["brotli_sys::BrotliDecoderState"]},{"text":"impl Freeze for <a class=\"enum\" href=\"brotli_sys/enum.BrotliEncoderState.html\" title=\"enum brotli_sys::BrotliEncoderState\">BrotliEncoderState</a>","synthetic":true,"types":["brotli_sys::BrotliEncoderState"]}];
implementors["byteorder"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"byteorder/enum.BigEndian.html\" title=\"enum byteorder::BigEndian\">BigEndian</a>","synthetic":true,"types":["byteorder::BigEndian"]},{"text":"impl Freeze for <a class=\"enum\" href=\"byteorder/enum.LittleEndian.html\" title=\"enum byteorder::LittleEndian\">LittleEndian</a>","synthetic":true,"types":["byteorder::LittleEndian"]}];
implementors["bytes"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"bytes/struct.BytesMut.html\" title=\"struct bytes::BytesMut\">BytesMut</a>","synthetic":true,"types":["bytes::bytes_mut::BytesMut"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"bytes/struct.Bytes.html\" title=\"struct bytes::Bytes\">Bytes</a>","synthetic":true,"types":["bytes::bytes::Bytes"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.IoSliceMut.html\" title=\"struct bytes::buf::IoSliceMut\">IoSliceMut</a>&lt;'a&gt;","synthetic":true,"types":["bytes::buf::buf_mut::IoSliceMut"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.IntoIter.html\" title=\"struct bytes::buf::IntoIter\">IntoIter</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::iter::IntoIter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/ext/struct.Limit.html\" title=\"struct bytes::buf::ext::Limit\">Limit</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::ext::limit::Limit"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/ext/struct.Take.html\" title=\"struct bytes::buf::ext::Take\">Take</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::ext::take::Take"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/ext/struct.Chain.html\" title=\"struct bytes::buf::ext::Chain\">Chain</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::ext::chain::Chain"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/ext/struct.Reader.html\" title=\"struct bytes::buf::ext::Reader\">Reader</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::ext::reader::Reader"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/ext/struct.Writer.html\" title=\"struct bytes::buf::ext::Writer\">Writer</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::ext::writer::Writer"]}];
implementors["bytestring"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"bytestring/struct.ByteString.html\" title=\"struct bytestring::ByteString\">ByteString</a>","synthetic":true,"types":["bytestring::ByteString"]}];
implementors["chrono"] = [{"text":"impl&lt;Tz&gt; Freeze for <a class=\"struct\" href=\"chrono/struct.Date.html\" title=\"struct chrono::Date\">Date</a>&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>&gt;::<a class=\"type\" href=\"chrono/offset/trait.TimeZone.html#associatedtype.Offset\" title=\"type chrono::offset::TimeZone::Offset\">Offset</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["chrono::date::Date"]},{"text":"impl&lt;Tz&gt; Freeze for <a class=\"struct\" href=\"chrono/struct.DateTime.html\" title=\"struct chrono::DateTime\">DateTime</a>&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>&gt;::<a class=\"type\" href=\"chrono/offset/trait.TimeZone.html#associatedtype.Offset\" title=\"type chrono::offset::TimeZone::Offset\">Offset</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["chrono::datetime::DateTime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/struct.ParseWeekdayError.html\" title=\"struct chrono::ParseWeekdayError\">ParseWeekdayError</a>","synthetic":true,"types":["chrono::ParseWeekdayError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/enum.SecondsFormat.html\" title=\"enum chrono::SecondsFormat\">SecondsFormat</a>","synthetic":true,"types":["chrono::datetime::SecondsFormat"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/enum.Weekday.html\" title=\"enum chrono::Weekday\">Weekday</a>","synthetic":true,"types":["chrono::Weekday"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/offset/struct.FixedOffset.html\" title=\"struct chrono::offset::FixedOffset\">FixedOffset</a>","synthetic":true,"types":["chrono::offset::fixed::FixedOffset"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/offset/struct.Local.html\" title=\"struct chrono::offset::Local\">Local</a>","synthetic":true,"types":["chrono::offset::local::Local"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/offset/struct.Utc.html\" title=\"struct chrono::offset::Utc\">Utc</a>","synthetic":true,"types":["chrono::offset::utc::Utc"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"chrono/offset/enum.LocalResult.html\" title=\"enum chrono::offset::LocalResult\">LocalResult</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["chrono::offset::LocalResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/naive/struct.NaiveDate.html\" title=\"struct chrono::naive::NaiveDate\">NaiveDate</a>","synthetic":true,"types":["chrono::naive::date::NaiveDate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/naive/struct.IsoWeek.html\" title=\"struct chrono::naive::IsoWeek\">IsoWeek</a>","synthetic":true,"types":["chrono::naive::isoweek::IsoWeek"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/naive/struct.NaiveTime.html\" title=\"struct chrono::naive::NaiveTime\">NaiveTime</a>","synthetic":true,"types":["chrono::naive::time::NaiveTime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/naive/struct.NaiveDateTime.html\" title=\"struct chrono::naive::NaiveDateTime\">NaiveDateTime</a>","synthetic":true,"types":["chrono::naive::datetime::NaiveDateTime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/format/struct.Parsed.html\" title=\"struct chrono::format::Parsed\">Parsed</a>","synthetic":true,"types":["chrono::format::parsed::Parsed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/format/struct.InternalNumeric.html\" title=\"struct chrono::format::InternalNumeric\">InternalNumeric</a>","synthetic":true,"types":["chrono::format::InternalNumeric"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/format/struct.InternalFixed.html\" title=\"struct chrono::format::InternalFixed\">InternalFixed</a>","synthetic":true,"types":["chrono::format::InternalFixed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/format/struct.ParseError.html\" title=\"struct chrono::format::ParseError\">ParseError</a>","synthetic":true,"types":["chrono::format::ParseError"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"chrono/format/struct.DelayedFormat.html\" title=\"struct chrono::format::DelayedFormat\">DelayedFormat</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["chrono::format::DelayedFormat"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/format/enum.Pad.html\" title=\"enum chrono::format::Pad\">Pad</a>","synthetic":true,"types":["chrono::format::Pad"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/format/enum.Numeric.html\" title=\"enum chrono::format::Numeric\">Numeric</a>","synthetic":true,"types":["chrono::format::Numeric"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/format/enum.Fixed.html\" title=\"enum chrono::format::Fixed\">Fixed</a>","synthetic":true,"types":["chrono::format::Fixed"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"chrono/format/enum.Item.html\" title=\"enum chrono::format::Item\">Item</a>&lt;'a&gt;","synthetic":true,"types":["chrono::format::Item"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"chrono/format/strftime/struct.StrftimeItems.html\" title=\"struct chrono::format::strftime::StrftimeItems\">StrftimeItems</a>&lt;'a&gt;","synthetic":true,"types":["chrono::format::strftime::StrftimeItems"]}];
implementors["color_backtrace"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"color_backtrace/struct.ColorScheme.html\" title=\"struct color_backtrace::ColorScheme\">ColorScheme</a>","synthetic":true,"types":["color_backtrace::ColorScheme"]},{"text":"impl Freeze for <a class=\"struct\" href=\"color_backtrace/struct.Settings.html\" title=\"struct color_backtrace::Settings\">Settings</a>","synthetic":true,"types":["color_backtrace::Settings"]},{"text":"impl Freeze for <a class=\"enum\" href=\"color_backtrace/enum.Verbosity.html\" title=\"enum color_backtrace::Verbosity\">Verbosity</a>","synthetic":true,"types":["color_backtrace::Verbosity"]}];
implementors["config"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"config/struct.Config.html\" title=\"struct config::Config\">Config</a>","synthetic":true,"types":["config::config::Config"]},{"text":"impl Freeze for <a class=\"struct\" href=\"config/struct.Environment.html\" title=\"struct config::Environment\">Environment</a>","synthetic":true,"types":["config::env::Environment"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"config/struct.File.html\" title=\"struct config::File\">File</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["config::file::File"]},{"text":"impl Freeze for <a class=\"struct\" href=\"config/struct.FileSourceFile.html\" title=\"struct config::FileSourceFile\">FileSourceFile</a>","synthetic":true,"types":["config::file::source::file::FileSourceFile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"config/struct.FileSourceString.html\" title=\"struct config::FileSourceString\">FileSourceString</a>","synthetic":true,"types":["config::file::source::string::FileSourceString"]},{"text":"impl Freeze for <a class=\"struct\" href=\"config/struct.Value.html\" title=\"struct config::Value\">Value</a>","synthetic":true,"types":["config::value::Value"]},{"text":"impl Freeze for <a class=\"enum\" href=\"config/enum.ConfigError.html\" title=\"enum config::ConfigError\">ConfigError</a>","synthetic":true,"types":["config::error::ConfigError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"config/enum.FileFormat.html\" title=\"enum config::FileFormat\">FileFormat</a>","synthetic":true,"types":["config::file::format::FileFormat"]}];
implementors["copyless"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"copyless/struct.BoxAllocation.html\" title=\"struct copyless::BoxAllocation\">BoxAllocation</a>&lt;T&gt;","synthetic":true,"types":["copyless::boxed::BoxAllocation"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"copyless/struct.VecAllocation.html\" title=\"struct copyless::VecAllocation\">VecAllocation</a>&lt;'a, T&gt;","synthetic":true,"types":["copyless::vec::VecAllocation"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"enum\" href=\"copyless/enum.VecEntry.html\" title=\"enum copyless::VecEntry\">VecEntry</a>&lt;'a, T&gt;","synthetic":true,"types":["copyless::vec::VecEntry"]}];
implementors["crc32fast"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"crc32fast/struct.Hasher.html\" title=\"struct crc32fast::Hasher\">Hasher</a>","synthetic":true,"types":["crc32fast::Hasher"]}];
implementors["crossbeam_channel"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.IntoIter.html\" title=\"struct crossbeam_channel::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_channel::channel::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.Iter.html\" title=\"struct crossbeam_channel::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["crossbeam_channel::channel::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.TryIter.html\" title=\"struct crossbeam_channel::TryIter\">TryIter</a>&lt;'a, T&gt;","synthetic":true,"types":["crossbeam_channel::channel::TryIter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.Receiver.html\" title=\"struct crossbeam_channel::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_channel::channel::Receiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.Sender.html\" title=\"struct crossbeam_channel::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_channel::channel::Sender"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.Select.html\" title=\"struct crossbeam_channel::Select\">Select</a>&lt;'a&gt;","synthetic":true,"types":["crossbeam_channel::select::Select"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.SelectedOperation.html\" title=\"struct crossbeam_channel::SelectedOperation\">SelectedOperation</a>&lt;'a&gt;","synthetic":true,"types":["crossbeam_channel::select::SelectedOperation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.ReadyTimeoutError.html\" title=\"struct crossbeam_channel::ReadyTimeoutError\">ReadyTimeoutError</a>","synthetic":true,"types":["crossbeam_channel::err::ReadyTimeoutError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.SelectTimeoutError.html\" title=\"struct crossbeam_channel::SelectTimeoutError\">SelectTimeoutError</a>","synthetic":true,"types":["crossbeam_channel::err::SelectTimeoutError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.TryReadyError.html\" title=\"struct crossbeam_channel::TryReadyError\">TryReadyError</a>","synthetic":true,"types":["crossbeam_channel::err::TryReadyError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.TrySelectError.html\" title=\"struct crossbeam_channel::TrySelectError\">TrySelectError</a>","synthetic":true,"types":["crossbeam_channel::err::TrySelectError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.RecvError.html\" title=\"struct crossbeam_channel::RecvError\">RecvError</a>","synthetic":true,"types":["crossbeam_channel::err::RecvError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.SendError.html\" title=\"struct crossbeam_channel::SendError\">SendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["crossbeam_channel::err::SendError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"crossbeam_channel/enum.RecvTimeoutError.html\" title=\"enum crossbeam_channel::RecvTimeoutError\">RecvTimeoutError</a>","synthetic":true,"types":["crossbeam_channel::err::RecvTimeoutError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"crossbeam_channel/enum.TryRecvError.html\" title=\"enum crossbeam_channel::TryRecvError\">TryRecvError</a>","synthetic":true,"types":["crossbeam_channel::err::TryRecvError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"crossbeam_channel/enum.SendTimeoutError.html\" title=\"enum crossbeam_channel::SendTimeoutError\">SendTimeoutError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["crossbeam_channel::err::SendTimeoutError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"crossbeam_channel/enum.TrySendError.html\" title=\"enum crossbeam_channel::TrySendError\">TrySendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["crossbeam_channel::err::TrySendError"]}];
implementors["crossbeam_queue"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_queue/struct.ArrayQueue.html\" title=\"struct crossbeam_queue::ArrayQueue\">ArrayQueue</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_queue::array_queue::ArrayQueue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_queue/struct.PopError.html\" title=\"struct crossbeam_queue::PopError\">PopError</a>","synthetic":true,"types":["crossbeam_queue::err::PopError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_queue/struct.PushError.html\" title=\"struct crossbeam_queue::PushError\">PushError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["crossbeam_queue::err::PushError"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_queue/struct.SegQueue.html\" title=\"struct crossbeam_queue::SegQueue\">SegQueue</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_queue::seg_queue::SegQueue"]}];
implementors["crossbeam_utils"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/struct.CachePadded.html\" title=\"struct crossbeam_utils::CachePadded\">CachePadded</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["crossbeam_utils::cache_padded::CachePadded"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"crossbeam_utils/struct.Backoff.html\" title=\"struct crossbeam_utils::Backoff\">Backoff</a>","synthetic":true,"types":["crossbeam_utils::backoff::Backoff"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_utils/atomic/struct.AtomicCell.html\" title=\"struct crossbeam_utils::atomic::AtomicCell\">AtomicCell</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_utils::atomic::atomic_cell::AtomicCell"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.Parker.html\" title=\"struct crossbeam_utils::sync::Parker\">Parker</a>","synthetic":true,"types":["crossbeam_utils::sync::parker::Parker"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.Unparker.html\" title=\"struct crossbeam_utils::sync::Unparker\">Unparker</a>","synthetic":true,"types":["crossbeam_utils::sync::parker::Unparker"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.ShardedLock.html\" title=\"struct crossbeam_utils::sync::ShardedLock\">ShardedLock</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_utils::sync::sharded_lock::ShardedLock"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.ShardedLockReadGuard.html\" title=\"struct crossbeam_utils::sync::ShardedLockReadGuard\">ShardedLockReadGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["crossbeam_utils::sync::sharded_lock::ShardedLockReadGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.ShardedLockWriteGuard.html\" title=\"struct crossbeam_utils::sync::ShardedLockWriteGuard\">ShardedLockWriteGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["crossbeam_utils::sync::sharded_lock::ShardedLockWriteGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.WaitGroup.html\" title=\"struct crossbeam_utils::sync::WaitGroup\">WaitGroup</a>","synthetic":true,"types":["crossbeam_utils::sync::wait_group::WaitGroup"]},{"text":"impl&lt;'env&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/thread/struct.Scope.html\" title=\"struct crossbeam_utils::thread::Scope\">Scope</a>&lt;'env&gt;","synthetic":true,"types":["crossbeam_utils::thread::Scope"]},{"text":"impl&lt;'scope, 'env&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/thread/struct.ScopedThreadBuilder.html\" title=\"struct crossbeam_utils::thread::ScopedThreadBuilder\">ScopedThreadBuilder</a>&lt;'scope, 'env&gt;","synthetic":true,"types":["crossbeam_utils::thread::ScopedThreadBuilder"]},{"text":"impl&lt;'scope, T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/thread/struct.ScopedJoinHandle.html\" title=\"struct crossbeam_utils::thread::ScopedJoinHandle\">ScopedJoinHandle</a>&lt;'scope, T&gt;","synthetic":true,"types":["crossbeam_utils::thread::ScopedJoinHandle"]}];
implementors["crypto_mac"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"crypto_mac/struct.InvalidKeyLength.html\" title=\"struct crypto_mac::InvalidKeyLength\">InvalidKeyLength</a>","synthetic":true,"types":["crypto_mac::errors::InvalidKeyLength"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto_mac/struct.MacError.html\" title=\"struct crypto_mac::MacError\">MacError</a>","synthetic":true,"types":["crypto_mac::errors::MacError"]},{"text":"impl&lt;N&gt; Freeze for <a class=\"struct\" href=\"crypto_mac/struct.MacResult.html\" title=\"struct crypto_mac::MacResult\">MacResult</a>&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;N as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;u8&gt;&gt;::<a class=\"type\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["crypto_mac::MacResult"]}];
implementors["dashmap"] = [{"text":"impl&lt;K, V, S&gt; Freeze for <a class=\"struct\" href=\"dashmap/struct.DashMap.html\" title=\"struct dashmap::DashMap\">DashMap</a>&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["dashmap::DashMap"]},{"text":"impl&lt;K, V, S&gt; Freeze for <a class=\"struct\" href=\"dashmap/iter/struct.OwningIter.html\" title=\"struct dashmap::iter::OwningIter\">OwningIter</a>&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["dashmap::iter::OwningIter"]},{"text":"impl&lt;'a, K, V, S, M&gt; Freeze for <a class=\"struct\" href=\"dashmap/iter/struct.Iter.html\" title=\"struct dashmap::iter::Iter\">Iter</a>&lt;'a, K, V, S, M&gt;","synthetic":true,"types":["dashmap::iter::Iter"]},{"text":"impl&lt;'a, K, V, S, M&gt; Freeze for <a class=\"struct\" href=\"dashmap/iter/struct.IterMut.html\" title=\"struct dashmap::iter::IterMut\">IterMut</a>&lt;'a, K, V, S, M&gt;","synthetic":true,"types":["dashmap::iter::IterMut"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"dashmap/lock/struct.RwLock.html\" title=\"struct dashmap::lock::RwLock\">RwLock</a>&lt;T&gt;","synthetic":true,"types":["dashmap::lock::RwLock"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"dashmap/lock/struct.RwLockReadGuard.html\" title=\"struct dashmap::lock::RwLockReadGuard\">RwLockReadGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["dashmap::lock::RwLockReadGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"dashmap/lock/struct.RwLockWriteGuard.html\" title=\"struct dashmap::lock::RwLockWriteGuard\">RwLockWriteGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["dashmap::lock::RwLockWriteGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"dashmap/lock/struct.RwLockUpgradeableGuard.html\" title=\"struct dashmap::lock::RwLockUpgradeableGuard\">RwLockUpgradeableGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["dashmap::lock::RwLockUpgradeableGuard"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"dashmap/mapref/entry/struct.VacantEntry.html\" title=\"struct dashmap::mapref::entry::VacantEntry\">VacantEntry</a>&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["dashmap::mapref::entry::VacantEntry"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"dashmap/mapref/entry/struct.OccupiedEntry.html\" title=\"struct dashmap::mapref::entry::OccupiedEntry\">OccupiedEntry</a>&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["dashmap::mapref::entry::OccupiedEntry"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"enum\" href=\"dashmap/mapref/entry/enum.Entry.html\" title=\"enum dashmap::mapref::entry::Entry\">Entry</a>&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["dashmap::mapref::entry::Entry"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"dashmap/mapref/multiple/struct.RefMulti.html\" title=\"struct dashmap::mapref::multiple::RefMulti\">RefMulti</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["dashmap::mapref::multiple::RefMulti"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"dashmap/mapref/multiple/struct.RefMutMulti.html\" title=\"struct dashmap::mapref::multiple::RefMutMulti\">RefMutMulti</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["dashmap::mapref::multiple::RefMutMulti"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"dashmap/mapref/one/struct.Ref.html\" title=\"struct dashmap::mapref::one::Ref\">Ref</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["dashmap::mapref::one::Ref"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"dashmap/mapref/one/struct.RefMut.html\" title=\"struct dashmap::mapref::one::RefMut\">RefMut</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["dashmap::mapref::one::RefMut"]}];
implementors["deadpool"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"deadpool/struct.Status.html\" title=\"struct deadpool::Status\">Status</a>","synthetic":true,"types":["deadpool::Status"]},{"text":"impl Freeze for <a class=\"struct\" href=\"deadpool/managed/struct.PoolConfig.html\" title=\"struct deadpool::managed::PoolConfig\">PoolConfig</a>","synthetic":true,"types":["deadpool::managed::config::PoolConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"deadpool/managed/struct.Timeouts.html\" title=\"struct deadpool::managed::Timeouts\">Timeouts</a>","synthetic":true,"types":["deadpool::managed::config::Timeouts"]},{"text":"impl&lt;T, E&gt; Freeze for <a class=\"struct\" href=\"deadpool/managed/struct.Object.html\" title=\"struct deadpool::managed::Object\">Object</a>&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["deadpool::managed::Object"]},{"text":"impl&lt;T, E&gt; Freeze for <a class=\"struct\" href=\"deadpool/managed/struct.Pool.html\" title=\"struct deadpool::managed::Pool\">Pool</a>&lt;T, E&gt;","synthetic":true,"types":["deadpool::managed::Pool"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"enum\" href=\"deadpool/managed/enum.PoolError.html\" title=\"enum deadpool::managed::PoolError\">PoolError</a>&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":["deadpool::managed::errors::PoolError"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"enum\" href=\"deadpool/managed/enum.RecycleError.html\" title=\"enum deadpool::managed::RecycleError\">RecycleError</a>&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":["deadpool::managed::errors::RecycleError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"deadpool/managed/enum.TimeoutType.html\" title=\"enum deadpool::managed::TimeoutType\">TimeoutType</a>","synthetic":true,"types":["deadpool::managed::errors::TimeoutType"]}];
implementors["deadpool_postgres"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"deadpool_postgres/struct.Manager.html\" title=\"struct deadpool_postgres::Manager\">Manager</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["deadpool_postgres::Manager"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"deadpool_postgres/struct.StatementCache.html\" title=\"struct deadpool_postgres::StatementCache\">StatementCache</a>","synthetic":true,"types":["deadpool_postgres::StatementCache"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"deadpool_postgres/struct.ClientWrapper.html\" title=\"struct deadpool_postgres::ClientWrapper\">ClientWrapper</a>","synthetic":true,"types":["deadpool_postgres::ClientWrapper"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"deadpool_postgres/struct.Transaction.html\" title=\"struct deadpool_postgres::Transaction\">Transaction</a>&lt;'a&gt;","synthetic":true,"types":["deadpool_postgres::Transaction"]},{"text":"impl Freeze for <a class=\"struct\" href=\"deadpool_postgres/config/struct.ManagerConfig.html\" title=\"struct deadpool_postgres::config::ManagerConfig\">ManagerConfig</a>","synthetic":true,"types":["deadpool_postgres::config::ManagerConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"deadpool_postgres/config/struct.Config.html\" title=\"struct deadpool_postgres::config::Config\">Config</a>","synthetic":true,"types":["deadpool_postgres::config::Config"]},{"text":"impl Freeze for <a class=\"enum\" href=\"deadpool_postgres/config/enum.ConfigError.html\" title=\"enum deadpool_postgres::config::ConfigError\">ConfigError</a>","synthetic":true,"types":["deadpool_postgres::config::ConfigError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"deadpool_postgres/config/enum.TargetSessionAttrs.html\" title=\"enum deadpool_postgres::config::TargetSessionAttrs\">TargetSessionAttrs</a>","synthetic":true,"types":["deadpool_postgres::config::TargetSessionAttrs"]},{"text":"impl Freeze for <a class=\"enum\" href=\"deadpool_postgres/config/enum.SslMode.html\" title=\"enum deadpool_postgres::config::SslMode\">SslMode</a>","synthetic":true,"types":["deadpool_postgres::config::SslMode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"deadpool_postgres/config/enum.ChannelBinding.html\" title=\"enum deadpool_postgres::config::ChannelBinding\">ChannelBinding</a>","synthetic":true,"types":["deadpool_postgres::config::ChannelBinding"]},{"text":"impl Freeze for <a class=\"enum\" href=\"deadpool_postgres/config/enum.RecyclingMethod.html\" title=\"enum deadpool_postgres::config::RecyclingMethod\">RecyclingMethod</a>","synthetic":true,"types":["deadpool_postgres::config::RecyclingMethod"]}];
implementors["digest"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"digest/struct.InvalidOutputSize.html\" title=\"struct digest::InvalidOutputSize\">InvalidOutputSize</a>","synthetic":true,"types":["digest::errors::InvalidOutputSize"]}];
implementors["either"] = [{"text":"impl&lt;L, R&gt; Freeze for <a class=\"enum\" href=\"either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["either::Either"]}];
implementors["encoding_rs"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"encoding_rs/struct.Encoding.html\" title=\"struct encoding_rs::Encoding\">Encoding</a>","synthetic":true,"types":["encoding_rs::Encoding"]},{"text":"impl Freeze for <a class=\"struct\" href=\"encoding_rs/struct.Decoder.html\" title=\"struct encoding_rs::Decoder\">Decoder</a>","synthetic":true,"types":["encoding_rs::Decoder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"encoding_rs/struct.Encoder.html\" title=\"struct encoding_rs::Encoder\">Encoder</a>","synthetic":true,"types":["encoding_rs::Encoder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"encoding_rs/enum.CoderResult.html\" title=\"enum encoding_rs::CoderResult\">CoderResult</a>","synthetic":true,"types":["encoding_rs::CoderResult"]},{"text":"impl Freeze for <a class=\"enum\" href=\"encoding_rs/enum.DecoderResult.html\" title=\"enum encoding_rs::DecoderResult\">DecoderResult</a>","synthetic":true,"types":["encoding_rs::DecoderResult"]},{"text":"impl Freeze for <a class=\"enum\" href=\"encoding_rs/enum.EncoderResult.html\" title=\"enum encoding_rs::EncoderResult\">EncoderResult</a>","synthetic":true,"types":["encoding_rs::EncoderResult"]},{"text":"impl Freeze for <a class=\"enum\" href=\"encoding_rs/mem/enum.Latin1Bidi.html\" title=\"enum encoding_rs::mem::Latin1Bidi\">Latin1Bidi</a>","synthetic":true,"types":["encoding_rs::mem::Latin1Bidi"]}];
implementors["env_logger"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"env_logger/struct.Env.html\" title=\"struct env_logger::Env\">Env</a>&lt;'a&gt;","synthetic":true,"types":["env_logger::Env"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"env_logger/struct.Logger.html\" title=\"struct env_logger::Logger\">Logger</a>","synthetic":true,"types":["env_logger::Logger"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"env_logger/struct.Builder.html\" title=\"struct env_logger::Builder\">Builder</a>","synthetic":true,"types":["env_logger::Builder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"env_logger/enum.Target.html\" title=\"enum env_logger::Target\">Target</a>","synthetic":true,"types":["env_logger::fmt::writer::Target"]},{"text":"impl Freeze for <a class=\"enum\" href=\"env_logger/enum.WriteStyle.html\" title=\"enum env_logger::WriteStyle\">WriteStyle</a>","synthetic":true,"types":["env_logger::fmt::writer::WriteStyle"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"env_logger/filter/struct.Filter.html\" title=\"struct env_logger::filter::Filter\">Filter</a>","synthetic":true,"types":["env_logger::filter::Filter"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"env_logger/filter/struct.Builder.html\" title=\"struct env_logger::filter::Builder\">Builder</a>","synthetic":true,"types":["env_logger::filter::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"env_logger/fmt/struct.Timestamp.html\" title=\"struct env_logger::fmt::Timestamp\">Timestamp</a>","synthetic":true,"types":["env_logger::fmt::humantime::imp::Timestamp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"env_logger/fmt/struct.Style.html\" title=\"struct env_logger::fmt::Style\">Style</a>","synthetic":true,"types":["env_logger::fmt::writer::termcolor::imp::Style"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"env_logger/fmt/struct.StyledValue.html\" title=\"struct env_logger::fmt::StyledValue\">StyledValue</a>&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["env_logger::fmt::writer::termcolor::imp::StyledValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"env_logger/fmt/struct.Formatter.html\" title=\"struct env_logger::fmt::Formatter\">Formatter</a>","synthetic":true,"types":["env_logger::fmt::Formatter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"env_logger/fmt/enum.Color.html\" title=\"enum env_logger::fmt::Color\">Color</a>","synthetic":true,"types":["env_logger::fmt::writer::termcolor::imp::Color"]},{"text":"impl Freeze for <a class=\"enum\" href=\"env_logger/fmt/enum.TimestampPrecision.html\" title=\"enum env_logger::fmt::TimestampPrecision\">TimestampPrecision</a>","synthetic":true,"types":["env_logger::fmt::TimestampPrecision"]}];
implementors["envy"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"envy/struct.Prefixed.html\" title=\"struct envy::Prefixed\">Prefixed</a>&lt;'a&gt;","synthetic":true,"types":["envy::Prefixed"]},{"text":"impl Freeze for <a class=\"enum\" href=\"envy/enum.Error.html\" title=\"enum envy::Error\">Error</a>","synthetic":true,"types":["envy::error::Error"]}];
implementors["evmap"] = [{"text":"impl&lt;T, S&gt; Freeze for <a class=\"struct\" href=\"evmap/struct.Values.html\" title=\"struct evmap::Values\">Values</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["evmap::values::Values"]},{"text":"impl&lt;V&gt; Freeze for <a class=\"struct\" href=\"evmap/struct.Predicate.html\" title=\"struct evmap::Predicate\">Predicate</a>&lt;V&gt;","synthetic":true,"types":["evmap::Predicate"]},{"text":"impl&lt;K, V, M&nbsp;=&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, S&nbsp;=&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/collections/hash/map/struct.RandomState.html\" title=\"struct std::collections::hash::map::RandomState\">RandomState</a>&gt; !Freeze for <a class=\"struct\" href=\"evmap/struct.WriteHandle.html\" title=\"struct evmap::WriteHandle\">WriteHandle</a>&lt;K, V, M, S&gt;","synthetic":true,"types":["evmap::write::WriteHandle"]},{"text":"impl&lt;'rh, K, V, M, S&gt; Freeze for <a class=\"struct\" href=\"evmap/struct.MapReadRef.html\" title=\"struct evmap::MapReadRef\">MapReadRef</a>&lt;'rh, K, V, M, S&gt;","synthetic":true,"types":["evmap::read::read_ref::MapReadRef"]},{"text":"impl&lt;'rh, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"evmap/struct.ReadGuard.html\" title=\"struct evmap::ReadGuard\">ReadGuard</a>&lt;'rh, T&gt;","synthetic":true,"types":["evmap::read::guard::ReadGuard"]},{"text":"impl&lt;'rg, K, V, S&gt; Freeze for <a class=\"struct\" href=\"evmap/struct.ReadGuardIter.html\" title=\"struct evmap::ReadGuardIter\">ReadGuardIter</a>&lt;'rg, K, V, S&gt;","synthetic":true,"types":["evmap::read::read_ref::ReadGuardIter"]},{"text":"impl&lt;K, V, M&nbsp;=&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, S&nbsp;=&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/collections/hash/map/struct.RandomState.html\" title=\"struct std::collections::hash::map::RandomState\">RandomState</a>&gt; !Freeze for <a class=\"struct\" href=\"evmap/struct.ReadHandle.html\" title=\"struct evmap::ReadHandle\">ReadHandle</a>&lt;K, V, M, S&gt;","synthetic":true,"types":["evmap::read::ReadHandle"]},{"text":"impl&lt;K, V, M, S&gt; Freeze for <a class=\"struct\" href=\"evmap/struct.ReadHandleFactory.html\" title=\"struct evmap::ReadHandleFactory\">ReadHandleFactory</a>&lt;K, V, M, S&gt;","synthetic":true,"types":["evmap::read::factory::ReadHandleFactory"]},{"text":"impl&lt;M, S&gt; Freeze for <a class=\"struct\" href=\"evmap/struct.Options.html\" title=\"struct evmap::Options\">Options</a>&lt;M, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["evmap::Options"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"enum\" href=\"evmap/enum.Operation.html\" title=\"enum evmap::Operation\">Operation</a>&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Freeze,&nbsp;</span>","synthetic":true,"types":["evmap::Operation"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"evmap/shallow_copy/struct.CopyValue.html\" title=\"struct evmap::shallow_copy::CopyValue\">CopyValue</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["evmap::shallow_copy::CopyValue"]}];
implementors["failure"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"failure/struct.Backtrace.html\" title=\"struct failure::Backtrace\">Backtrace</a>","synthetic":true,"types":["failure::backtrace::Backtrace"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"failure/struct.Compat.html\" title=\"struct failure::Compat\">Compat</a>&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":["failure::compat::Compat"]},{"text":"impl&lt;D&gt; !Freeze for <a class=\"struct\" href=\"failure/struct.Context.html\" title=\"struct failure::Context\">Context</a>&lt;D&gt;","synthetic":true,"types":["failure::context::Context"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"failure/struct.SyncFailure.html\" title=\"struct failure::SyncFailure\">SyncFailure</a>&lt;T&gt;","synthetic":true,"types":["failure::sync_failure::SyncFailure"]},{"text":"impl Freeze for <a class=\"struct\" href=\"failure/struct.Error.html\" title=\"struct failure::Error\">Error</a>","synthetic":true,"types":["failure::error::Error"]},{"text":"impl&lt;'f&gt; Freeze for <a class=\"struct\" href=\"failure/struct.Causes.html\" title=\"struct failure::Causes\">Causes</a>&lt;'f&gt;","synthetic":true,"types":["failure::Causes"]}];
implementors["fake_simd"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"fake_simd/struct.u32x4.html\" title=\"struct fake_simd::u32x4\">u32x4</a>","synthetic":true,"types":["fake_simd::u32x4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"fake_simd/struct.u64x2.html\" title=\"struct fake_simd::u64x2\">u64x2</a>","synthetic":true,"types":["fake_simd::u64x2"]}];
implementors["fallible_iterator"] = [{"text":"impl&lt;T, F&gt; Freeze for <a class=\"struct\" href=\"fallible_iterator/struct.Map.html\" title=\"struct fallible_iterator::Map\">Map</a>&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["fallible_iterator::Map"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"fallible_iterator/struct.Chain.html\" title=\"struct fallible_iterator::Chain\">Chain</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["fallible_iterator::Chain"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"fallible_iterator/struct.Cloned.html\" title=\"struct fallible_iterator::Cloned\">Cloned</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["fallible_iterator::Cloned"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"fallible_iterator/struct.Convert.html\" title=\"struct fallible_iterator::Convert\">Convert</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["fallible_iterator::Convert"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"fallible_iterator/struct.Enumerate.html\" title=\"struct fallible_iterator::Enumerate\">Enumerate</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["fallible_iterator::Enumerate"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"fallible_iterator/struct.Filter.html\" title=\"struct fallible_iterator::Filter\">Filter</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["fallible_iterator::Filter"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"fallible_iterator/struct.FilterMap.html\" title=\"struct fallible_iterator::FilterMap\">FilterMap</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["fallible_iterator::FilterMap"]},{"text":"impl&lt;I, U, F&gt; Freeze for <a class=\"struct\" href=\"fallible_iterator/struct.FlatMap.html\" title=\"struct fallible_iterator::FlatMap\">FlatMap</a>&lt;I, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as <a class=\"trait\" href=\"fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&gt;::<a class=\"type\" href=\"fallible_iterator/trait.IntoFallibleIterator.html#associatedtype.IntoFallibleIter\" title=\"type fallible_iterator::IntoFallibleIterator::IntoFallibleIter\">IntoFallibleIter</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["fallible_iterator::FlatMap"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"fallible_iterator/struct.Flatten.html\" title=\"struct fallible_iterator::Flatten\">Flatten</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as <a class=\"trait\" href=\"fallible_iterator/trait.FallibleIterator.html\" title=\"trait fallible_iterator::FallibleIterator\">FallibleIterator</a>&gt;::<a class=\"type\" href=\"fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a> as <a class=\"trait\" href=\"fallible_iterator/trait.IntoFallibleIterator.html\" title=\"trait fallible_iterator::IntoFallibleIterator\">IntoFallibleIterator</a>&gt;::<a class=\"type\" href=\"fallible_iterator/trait.IntoFallibleIterator.html#associatedtype.IntoFallibleIter\" title=\"type fallible_iterator::IntoFallibleIterator::IntoFallibleIter\">IntoFallibleIter</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["fallible_iterator::Flatten"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"fallible_iterator/struct.Fuse.html\" title=\"struct fallible_iterator::Fuse\">Fuse</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["fallible_iterator::Fuse"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"fallible_iterator/struct.Inspect.html\" title=\"struct fallible_iterator::Inspect\">Inspect</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["fallible_iterator::Inspect"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"fallible_iterator/struct.Iterator.html\" title=\"struct fallible_iterator::Iterator\">Iterator</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["fallible_iterator::Iterator"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"fallible_iterator/struct.MapErr.html\" title=\"struct fallible_iterator::MapErr\">MapErr</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["fallible_iterator::MapErr"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"fallible_iterator/struct.Peekable.html\" title=\"struct fallible_iterator::Peekable\">Peekable</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"fallible_iterator/trait.FallibleIterator.html\" title=\"trait fallible_iterator::FallibleIterator\">FallibleIterator</a>&gt;::<a class=\"type\" href=\"fallible_iterator/trait.FallibleIterator.html#associatedtype.Item\" title=\"type fallible_iterator::FallibleIterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["fallible_iterator::Peekable"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"fallible_iterator/struct.Rev.html\" title=\"struct fallible_iterator::Rev\">Rev</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["fallible_iterator::Rev"]},{"text":"impl&lt;I, St, F&gt; Freeze for <a class=\"struct\" href=\"fallible_iterator/struct.Scan.html\" title=\"struct fallible_iterator::Scan\">Scan</a>&lt;I, St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["fallible_iterator::Scan"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"fallible_iterator/struct.Skip.html\" title=\"struct fallible_iterator::Skip\">Skip</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["fallible_iterator::Skip"]},{"text":"impl&lt;I, P&gt; Freeze for <a class=\"struct\" href=\"fallible_iterator/struct.SkipWhile.html\" title=\"struct fallible_iterator::SkipWhile\">SkipWhile</a>&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["fallible_iterator::SkipWhile"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"fallible_iterator/struct.StepBy.html\" title=\"struct fallible_iterator::StepBy\">StepBy</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["fallible_iterator::StepBy"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"fallible_iterator/struct.Take.html\" title=\"struct fallible_iterator::Take\">Take</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["fallible_iterator::Take"]},{"text":"impl&lt;I, P&gt; Freeze for <a class=\"struct\" href=\"fallible_iterator/struct.TakeWhile.html\" title=\"struct fallible_iterator::TakeWhile\">TakeWhile</a>&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["fallible_iterator::TakeWhile"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"fallible_iterator/struct.Cycle.html\" title=\"struct fallible_iterator::Cycle\">Cycle</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["fallible_iterator::Cycle"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"fallible_iterator/struct.Zip.html\" title=\"struct fallible_iterator::Zip\">Zip</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["fallible_iterator::Zip"]}];
implementors["flate2"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"flate2/struct.Crc.html\" title=\"struct flate2::Crc\">Crc</a>","synthetic":true,"types":["flate2::crc::Crc"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/struct.CrcReader.html\" title=\"struct flate2::CrcReader\">CrcReader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::crc::CrcReader"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"flate2/struct.CrcWriter.html\" title=\"struct flate2::CrcWriter\">CrcWriter</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::crc::CrcWriter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"flate2/struct.GzBuilder.html\" title=\"struct flate2::GzBuilder\">GzBuilder</a>","synthetic":true,"types":["flate2::gz::GzBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"flate2/struct.GzHeader.html\" title=\"struct flate2::GzHeader\">GzHeader</a>","synthetic":true,"types":["flate2::gz::GzHeader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"flate2/struct.Compress.html\" title=\"struct flate2::Compress\">Compress</a>","synthetic":true,"types":["flate2::mem::Compress"]},{"text":"impl Freeze for <a class=\"struct\" href=\"flate2/struct.CompressError.html\" title=\"struct flate2::CompressError\">CompressError</a>","synthetic":true,"types":["flate2::mem::CompressError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"flate2/struct.Decompress.html\" title=\"struct flate2::Decompress\">Decompress</a>","synthetic":true,"types":["flate2::mem::Decompress"]},{"text":"impl Freeze for <a class=\"struct\" href=\"flate2/struct.DecompressError.html\" title=\"struct flate2::DecompressError\">DecompressError</a>","synthetic":true,"types":["flate2::mem::DecompressError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"flate2/struct.Compression.html\" title=\"struct flate2::Compression\">Compression</a>","synthetic":true,"types":["flate2::Compression"]},{"text":"impl Freeze for <a class=\"enum\" href=\"flate2/enum.Status.html\" title=\"enum flate2::Status\">Status</a>","synthetic":true,"types":["flate2::mem::Status"]},{"text":"impl Freeze for <a class=\"enum\" href=\"flate2/enum.FlushCompress.html\" title=\"enum flate2::FlushCompress\">FlushCompress</a>","synthetic":true,"types":["flate2::mem::FlushCompress"]},{"text":"impl Freeze for <a class=\"enum\" href=\"flate2/enum.FlushDecompress.html\" title=\"enum flate2::FlushDecompress\">FlushDecompress</a>","synthetic":true,"types":["flate2::mem::FlushDecompress"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/bufread/struct.DeflateEncoder.html\" title=\"struct flate2::bufread::DeflateEncoder\">DeflateEncoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::deflate::bufread::DeflateEncoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/bufread/struct.DeflateDecoder.html\" title=\"struct flate2::bufread::DeflateDecoder\">DeflateDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::deflate::bufread::DeflateDecoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/read/struct.DeflateEncoder.html\" title=\"struct flate2::read::DeflateEncoder\">DeflateEncoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::deflate::read::DeflateEncoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/read/struct.DeflateDecoder.html\" title=\"struct flate2::read::DeflateDecoder\">DeflateDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::deflate::read::DeflateDecoder"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"flate2/write/struct.DeflateEncoder.html\" title=\"struct flate2::write::DeflateEncoder\">DeflateEncoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::deflate::write::DeflateEncoder"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"flate2/write/struct.DeflateDecoder.html\" title=\"struct flate2::write::DeflateDecoder\">DeflateDecoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::deflate::write::DeflateDecoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/bufread/struct.GzEncoder.html\" title=\"struct flate2::bufread::GzEncoder\">GzEncoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::gz::bufread::GzEncoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/bufread/struct.GzDecoder.html\" title=\"struct flate2::bufread::GzDecoder\">GzDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::gz::bufread::GzDecoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/bufread/struct.MultiGzDecoder.html\" title=\"struct flate2::bufread::MultiGzDecoder\">MultiGzDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::gz::bufread::MultiGzDecoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/read/struct.GzEncoder.html\" title=\"struct flate2::read::GzEncoder\">GzEncoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::gz::read::GzEncoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/read/struct.GzDecoder.html\" title=\"struct flate2::read::GzDecoder\">GzDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::gz::read::GzDecoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/read/struct.MultiGzDecoder.html\" title=\"struct flate2::read::MultiGzDecoder\">MultiGzDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::gz::read::MultiGzDecoder"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"flate2/write/struct.GzEncoder.html\" title=\"struct flate2::write::GzEncoder\">GzEncoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::gz::write::GzEncoder"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"flate2/write/struct.GzDecoder.html\" title=\"struct flate2::write::GzDecoder\">GzDecoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::gz::write::GzDecoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/bufread/struct.ZlibEncoder.html\" title=\"struct flate2::bufread::ZlibEncoder\">ZlibEncoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::zlib::bufread::ZlibEncoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/bufread/struct.ZlibDecoder.html\" title=\"struct flate2::bufread::ZlibDecoder\">ZlibDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::zlib::bufread::ZlibDecoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/read/struct.ZlibEncoder.html\" title=\"struct flate2::read::ZlibEncoder\">ZlibEncoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::zlib::read::ZlibEncoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/read/struct.ZlibDecoder.html\" title=\"struct flate2::read::ZlibDecoder\">ZlibDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::zlib::read::ZlibDecoder"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"flate2/write/struct.ZlibEncoder.html\" title=\"struct flate2::write::ZlibEncoder\">ZlibEncoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::zlib::write::ZlibEncoder"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"flate2/write/struct.ZlibDecoder.html\" title=\"struct flate2::write::ZlibDecoder\">ZlibDecoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::zlib::write::ZlibDecoder"]}];
implementors["fnv"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"fnv/struct.FnvHasher.html\" title=\"struct fnv::FnvHasher\">FnvHasher</a>","synthetic":true,"types":["fnv::FnvHasher"]}];
implementors["futures_channel"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_channel/mpsc/struct.Sender.html\" title=\"struct futures_channel::mpsc::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["futures_channel::mpsc::Sender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_channel/mpsc/struct.UnboundedSender.html\" title=\"struct futures_channel::mpsc::UnboundedSender\">UnboundedSender</a>&lt;T&gt;","synthetic":true,"types":["futures_channel::mpsc::UnboundedSender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_channel/mpsc/struct.Receiver.html\" title=\"struct futures_channel::mpsc::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["futures_channel::mpsc::Receiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_channel/mpsc/struct.UnboundedReceiver.html\" title=\"struct futures_channel::mpsc::UnboundedReceiver\">UnboundedReceiver</a>&lt;T&gt;","synthetic":true,"types":["futures_channel::mpsc::UnboundedReceiver"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_channel/mpsc/struct.SendError.html\" title=\"struct futures_channel::mpsc::SendError\">SendError</a>","synthetic":true,"types":["futures_channel::mpsc::SendError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_channel/mpsc/struct.TrySendError.html\" title=\"struct futures_channel::mpsc::TrySendError\">TrySendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_channel::mpsc::TrySendError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_channel/mpsc/struct.TryRecvError.html\" title=\"struct futures_channel::mpsc::TryRecvError\">TryRecvError</a>","synthetic":true,"types":["futures_channel::mpsc::TryRecvError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_channel/oneshot/struct.Receiver.html\" title=\"struct futures_channel::oneshot::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["futures_channel::oneshot::Receiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_channel/oneshot/struct.Sender.html\" title=\"struct futures_channel::oneshot::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["futures_channel::oneshot::Sender"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_channel/oneshot/struct.Canceled.html\" title=\"struct futures_channel::oneshot::Canceled\">Canceled</a>","synthetic":true,"types":["futures_channel::oneshot::Canceled"]}];
implementors["futures_executor"] = [{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures_executor/struct.BlockingStream.html\" title=\"struct futures_executor::BlockingStream\">BlockingStream</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_executor::local_pool::BlockingStream"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"futures_executor/struct.LocalPool.html\" title=\"struct futures_executor::LocalPool\">LocalPool</a>","synthetic":true,"types":["futures_executor::local_pool::LocalPool"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_executor/struct.LocalSpawner.html\" title=\"struct futures_executor::LocalSpawner\">LocalSpawner</a>","synthetic":true,"types":["futures_executor::local_pool::LocalSpawner"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_executor/struct.Enter.html\" title=\"struct futures_executor::Enter\">Enter</a>","synthetic":true,"types":["futures_executor::enter::Enter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_executor/struct.EnterError.html\" title=\"struct futures_executor::EnterError\">EnterError</a>","synthetic":true,"types":["futures_executor::enter::EnterError"]}];
implementors["futures_task"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"futures_task/struct.SpawnError.html\" title=\"struct futures_task::SpawnError\">SpawnError</a>","synthetic":true,"types":["futures_task::spawn::SpawnError"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"futures_task/struct.WakerRef.html\" title=\"struct futures_task::WakerRef\">WakerRef</a>&lt;'a&gt;","synthetic":true,"types":["futures_task::waker_ref::WakerRef"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"futures_task/struct.FutureObj.html\" title=\"struct futures_task::FutureObj\">FutureObj</a>&lt;'a, T&gt;","synthetic":true,"types":["futures_task::future_obj::FutureObj"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"futures_task/struct.LocalFutureObj.html\" title=\"struct futures_task::LocalFutureObj\">LocalFutureObj</a>&lt;'a, T&gt;","synthetic":true,"types":["futures_task::future_obj::LocalFutureObj"]}];
implementors["futures_util"] = [{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Flatten.html\" title=\"struct futures_util::future::Flatten\">Flatten</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::flatten::Flatten"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.FlattenStream.html\" title=\"struct futures_util::future::FlattenStream\">FlattenStream</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::flatten_stream::FlattenStream"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Fuse.html\" title=\"struct futures_util::future::Fuse\">Fuse</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::fuse::Fuse"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Inspect.html\" title=\"struct futures_util::future::Inspect\">Inspect</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::inspect::Inspect"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.IntoStream.html\" title=\"struct futures_util::future::IntoStream\">IntoStream</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::into_stream::IntoStream"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Map.html\" title=\"struct futures_util::future::Map\">Map</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::map::Map"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.NeverError.html\" title=\"struct futures_util::future::NeverError\">NeverError</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::never_error::NeverError"]},{"text":"impl&lt;Fut1, Fut2, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Then.html\" title=\"struct futures_util::future::Then\">Then</a>&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::then::Then"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.UnitError.html\" title=\"struct futures_util::future::UnitError\">UnitError</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::unit_error::UnitError"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.CatchUnwind.html\" title=\"struct futures_util::future::CatchUnwind\">CatchUnwind</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::catch_unwind::CatchUnwind"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Remote.html\" title=\"struct futures_util::future::Remote\">Remote</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::remote_handle::Remote"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.RemoteHandle.html\" title=\"struct futures_util::future::RemoteHandle\">RemoteHandle</a>&lt;T&gt;","synthetic":true,"types":["futures_util::future::future::remote_handle::RemoteHandle"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Shared.html\" title=\"struct futures_util::future::Shared\">Shared</a>&lt;Fut&gt;","synthetic":true,"types":["futures_util::future::future::shared::Shared"]},{"text":"impl&lt;Fut1, Fut2, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.AndThen.html\" title=\"struct futures_util::future::AndThen\">AndThen</a>&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::and_then::AndThen"]},{"text":"impl&lt;Fut, E&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.ErrInto.html\" title=\"struct futures_util::future::ErrInto\">ErrInto</a>&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::err_into::ErrInto"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.InspectErr.html\" title=\"struct futures_util::future::InspectErr\">InspectErr</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::inspect_err::InspectErr"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.InspectOk.html\" title=\"struct futures_util::future::InspectOk\">InspectOk</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::inspect_ok::InspectOk"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.IntoFuture.html\" title=\"struct futures_util::future::IntoFuture\">IntoFuture</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::into_future::IntoFuture"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.MapErr.html\" title=\"struct futures_util::future::MapErr\">MapErr</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::map_err::MapErr"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.MapOk.html\" title=\"struct futures_util::future::MapOk\">MapOk</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::map_ok::MapOk"]},{"text":"impl&lt;Fut1, Fut2, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.OrElse.html\" title=\"struct futures_util::future::OrElse\">OrElse</a>&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::or_else::OrElse"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryFlattenStream.html\" title=\"struct futures_util::future::TryFlattenStream\">TryFlattenStream</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::try_flatten_stream::TryFlattenStream"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.UnwrapOrElse.html\" title=\"struct futures_util::future::UnwrapOrElse\">UnwrapOrElse</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::unwrap_or_else::UnwrapOrElse"]},{"text":"impl&lt;Fut, Si&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.FlattenSink.html\" title=\"struct futures_util::future::FlattenSink\">FlattenSink</a>&lt;Fut, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::flatten_sink::FlattenSink"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Lazy.html\" title=\"struct futures_util::future::Lazy\">Lazy</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::lazy::Lazy"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Pending.html\" title=\"struct futures_util::future::Pending\">Pending</a>&lt;T&gt;","synthetic":true,"types":["futures_util::future::pending::Pending"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.OptionFuture.html\" title=\"struct futures_util::future::OptionFuture\">OptionFuture</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::option::OptionFuture"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.PollFn.html\" title=\"struct futures_util::future::PollFn\">PollFn</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::poll_fn::PollFn"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Ready.html\" title=\"struct futures_util::future::Ready\">Ready</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::ready::Ready"]},{"text":"impl&lt;Fut1, Fut2&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Join.html\" title=\"struct futures_util::future::Join\">Join</a>&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::join::Join"]},{"text":"impl&lt;Fut1, Fut2, Fut3&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Join3.html\" title=\"struct futures_util::future::Join3\">Join3</a>&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::join::Join3"]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Join4.html\" title=\"struct futures_util::future::Join4\">Join4</a>&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::join::Join4"]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Join5.html\" title=\"struct futures_util::future::Join5\">Join5</a>&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::join::Join5"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.JoinAll.html\" title=\"struct futures_util::future::JoinAll\">JoinAll</a>&lt;F&gt;","synthetic":true,"types":["futures_util::future::join_all::JoinAll"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Select.html\" title=\"struct futures_util::future::Select\">Select</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::select::Select"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.SelectAll.html\" title=\"struct futures_util::future::SelectAll\">SelectAll</a>&lt;Fut&gt;","synthetic":true,"types":["futures_util::future::select_all::SelectAll"]},{"text":"impl&lt;Fut1, Fut2&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryJoin.html\" title=\"struct futures_util::future::TryJoin\">TryJoin</a>&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::future::TryFuture::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::future::TryFuture::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_join::TryJoin"]},{"text":"impl&lt;Fut1, Fut2, Fut3&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryJoin3.html\" title=\"struct futures_util::future::TryJoin3\">TryJoin3</a>&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::future::TryFuture::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::future::TryFuture::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::future::TryFuture::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_join::TryJoin3"]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryJoin4.html\" title=\"struct futures_util::future::TryJoin4\">TryJoin4</a>&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::future::TryFuture::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::future::TryFuture::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::future::TryFuture::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::future::TryFuture::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_join::TryJoin4"]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryJoin5.html\" title=\"struct futures_util::future::TryJoin5\">TryJoin5</a>&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::future::TryFuture::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::future::TryFuture::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::future::TryFuture::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::future::TryFuture::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::future::TryFuture::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_join::TryJoin5"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryJoinAll.html\" title=\"struct futures_util::future::TryJoinAll\">TryJoinAll</a>&lt;F&gt;","synthetic":true,"types":["futures_util::future::try_join_all::TryJoinAll"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TrySelect.html\" title=\"struct futures_util::future::TrySelect\">TrySelect</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_select::TrySelect"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.SelectOk.html\" title=\"struct futures_util::future::SelectOk\">SelectOk</a>&lt;Fut&gt;","synthetic":true,"types":["futures_util::future::select_ok::SelectOk"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Abortable.html\" title=\"struct futures_util::future::Abortable\">Abortable</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::abortable::Abortable"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_util/future/struct.AbortHandle.html\" title=\"struct futures_util::future::AbortHandle\">AbortHandle</a>","synthetic":true,"types":["futures_util::future::abortable::AbortHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_util/future/struct.AbortRegistration.html\" title=\"struct futures_util::future::AbortRegistration\">AbortRegistration</a>","synthetic":true,"types":["futures_util::future::abortable::AbortRegistration"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Aborted.html\" title=\"struct futures_util::future::Aborted\">Aborted</a>","synthetic":true,"types":["futures_util::future::abortable::Aborted"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"enum\" href=\"futures_util/future/enum.MaybeDone.html\" title=\"enum futures_util::future::MaybeDone\">MaybeDone</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::maybe_done::MaybeDone"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"enum\" href=\"futures_util/future/enum.Either.html\" title=\"enum futures_util::future::Either\">Either</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::either::Either"]},{"text":"impl&lt;St1, St2&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Chain.html\" title=\"struct futures_util::stream::Chain\">Chain</a>&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::chain::Chain"]},{"text":"impl&lt;St, C&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Collect.html\" title=\"struct futures_util::stream::Collect\">Collect</a>&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::collect::Collect"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Concat.html\" title=\"struct futures_util::stream::Concat\">Concat</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::concat::Concat"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Enumerate.html\" title=\"struct futures_util::stream::Enumerate\">Enumerate</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::enumerate::Enumerate"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Filter.html\" title=\"struct futures_util::stream::Filter\">Filter</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::filter::Filter"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.FilterMap.html\" title=\"struct futures_util::stream::FilterMap\">FilterMap</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::filter_map::FilterMap"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Flatten.html\" title=\"struct futures_util::stream::Flatten\">Flatten</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::flatten::Flatten"]},{"text":"impl&lt;St, Fut, T, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Fold.html\" title=\"struct futures_util::stream::Fold\">Fold</a>&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::fold::Fold"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.ForEach.html\" title=\"struct futures_util::stream::ForEach\">ForEach</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::for_each::ForEach"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Fuse.html\" title=\"struct futures_util::stream::Fuse\">Fuse</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::fuse::Fuse"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Inspect.html\" title=\"struct futures_util::stream::Inspect\">Inspect</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::inspect::Inspect"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Map.html\" title=\"struct futures_util::stream::Map\">Map</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::map::Map"]},{"text":"impl&lt;'a, St:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Next.html\" title=\"struct futures_util::stream::Next\">Next</a>&lt;'a, St&gt;","synthetic":true,"types":["futures_util::stream::stream::next::Next"]},{"text":"impl&lt;'a, St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Peek.html\" title=\"struct futures_util::stream::Peek\">Peek</a>&lt;'a, St&gt;","synthetic":true,"types":["futures_util::stream::stream::peek::Peek"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Peekable.html\" title=\"struct futures_util::stream::Peekable\">Peekable</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::peek::Peekable"]},{"text":"impl&lt;St, S, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Scan.html\" title=\"struct futures_util::stream::Scan\">Scan</a>&lt;St, S, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::scan::Scan"]},{"text":"impl&lt;'a, St:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.SelectNextSome.html\" title=\"struct futures_util::stream::SelectNextSome\">SelectNextSome</a>&lt;'a, St&gt;","synthetic":true,"types":["futures_util::stream::stream::select_next_some::SelectNextSome"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Skip.html\" title=\"struct futures_util::stream::Skip\">Skip</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::skip::Skip"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.SkipWhile.html\" title=\"struct futures_util::stream::SkipWhile\">SkipWhile</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::skip_while::SkipWhile"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.StreamFuture.html\" title=\"struct futures_util::stream::StreamFuture\">StreamFuture</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::into_future::StreamFuture"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Take.html\" title=\"struct futures_util::stream::Take\">Take</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::take::Take"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TakeWhile.html\" title=\"struct futures_util::stream::TakeWhile\">TakeWhile</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::take_while::TakeWhile"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Then.html\" title=\"struct futures_util::stream::Then\">Then</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::then::Then"]},{"text":"impl&lt;St1, St2&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Zip.html\" title=\"struct futures_util::stream::Zip\">Zip</a>&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St1 as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St2 as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::zip::Zip"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.CatchUnwind.html\" title=\"struct futures_util::stream::CatchUnwind\">CatchUnwind</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::catch_unwind::CatchUnwind"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Chunks.html\" title=\"struct futures_util::stream::Chunks\">Chunks</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::chunks::Chunks"]},{"text":"impl&lt;St, Si&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Forward.html\" title=\"struct futures_util::stream::Forward\">Forward</a>&lt;St, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::forward::Forward"]},{"text":"impl&lt;St&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.BufferUnordered.html\" title=\"struct futures_util::stream::BufferUnordered\">BufferUnordered</a>&lt;St&gt;","synthetic":true,"types":["futures_util::stream::stream::buffer_unordered::BufferUnordered"]},{"text":"impl&lt;St&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Buffered.html\" title=\"struct futures_util::stream::Buffered\">Buffered</a>&lt;St&gt;","synthetic":true,"types":["futures_util::stream::stream::buffered::Buffered"]},{"text":"impl&lt;St, Fut, F&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.ForEachConcurrent.html\" title=\"struct futures_util::stream::ForEachConcurrent\">ForEachConcurrent</a>&lt;St, Fut, F&gt;","synthetic":true,"types":["futures_util::stream::stream::for_each_concurrent::ForEachConcurrent"]},{"text":"impl&lt;T, Item&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.ReuniteError.html\" title=\"struct futures_util::stream::ReuniteError\">ReuniteError</a>&lt;T, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::split::ReuniteError"]},{"text":"impl&lt;S, Item&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.SplitSink.html\" title=\"struct futures_util::stream::SplitSink\">SplitSink</a>&lt;S, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::split::SplitSink"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.SplitStream.html\" title=\"struct futures_util::stream::SplitStream\">SplitStream</a>&lt;S&gt;","synthetic":true,"types":["futures_util::stream::stream::split::SplitStream"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.AndThen.html\" title=\"struct futures_util::stream::AndThen\">AndThen</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::and_then::AndThen"]},{"text":"impl&lt;St, E&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.ErrInto.html\" title=\"struct futures_util::stream::ErrInto\">ErrInto</a>&lt;St, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::err_into::ErrInto"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.InspectErr.html\" title=\"struct futures_util::stream::InspectErr\">InspectErr</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::inspect_err::InspectErr"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.InspectOk.html\" title=\"struct futures_util::stream::InspectOk\">InspectOk</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::inspect_ok::InspectOk"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.IntoStream.html\" title=\"struct futures_util::stream::IntoStream\">IntoStream</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::into_stream::IntoStream"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.MapErr.html\" title=\"struct futures_util::stream::MapErr\">MapErr</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::map_err::MapErr"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.MapOk.html\" title=\"struct futures_util::stream::MapOk\">MapOk</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::map_ok::MapOk"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.OrElse.html\" title=\"struct futures_util::stream::OrElse\">OrElse</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::or_else::OrElse"]},{"text":"impl&lt;St, C&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryCollect.html\" title=\"struct futures_util::stream::TryCollect\">TryCollect</a>&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_collect::TryCollect"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryConcat.html\" title=\"struct futures_util::stream::TryConcat\">TryConcat</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_concat::TryConcat"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryFilter.html\" title=\"struct futures_util::stream::TryFilter\">TryFilter</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_filter::TryFilter"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryFilterMap.html\" title=\"struct futures_util::stream::TryFilterMap\">TryFilterMap</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_filter_map::TryFilterMap"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryFlatten.html\" title=\"struct futures_util::stream::TryFlatten\">TryFlatten</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_flatten::TryFlatten"]},{"text":"impl&lt;St, Fut, T, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryFold.html\" title=\"struct futures_util::stream::TryFold\">TryFold</a>&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_fold::TryFold"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryForEach.html\" title=\"struct futures_util::stream::TryForEach\">TryForEach</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_for_each::TryForEach"]},{"text":"impl&lt;'a, St:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryNext.html\" title=\"struct futures_util::stream::TryNext\">TryNext</a>&lt;'a, St&gt;","synthetic":true,"types":["futures_util::stream::try_stream::try_next::TryNext"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TrySkipWhile.html\" title=\"struct futures_util::stream::TrySkipWhile\">TrySkipWhile</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_skip_while::TrySkipWhile"]},{"text":"impl&lt;T, F, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryUnfold.html\" title=\"struct futures_util::stream::TryUnfold\">TryUnfold</a>&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_unfold::TryUnfold"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.IntoAsyncRead.html\" title=\"struct futures_util::stream::IntoAsyncRead\">IntoAsyncRead</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::into_async_read::IntoAsyncRead"]},{"text":"impl&lt;St&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryBufferUnordered.html\" title=\"struct futures_util::stream::TryBufferUnordered\">TryBufferUnordered</a>&lt;St&gt;","synthetic":true,"types":["futures_util::stream::try_stream::try_buffer_unordered::TryBufferUnordered"]},{"text":"impl&lt;St, Fut, F&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryForEachConcurrent.html\" title=\"struct futures_util::stream::TryForEachConcurrent\">TryForEachConcurrent</a>&lt;St, Fut, F&gt;","synthetic":true,"types":["futures_util::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Iter.html\" title=\"struct futures_util::stream::Iter\">Iter</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::iter::Iter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Repeat.html\" title=\"struct futures_util::stream::Repeat\">Repeat</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::repeat::Repeat"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Empty.html\" title=\"struct futures_util::stream::Empty\">Empty</a>&lt;T&gt;","synthetic":true,"types":["futures_util::stream::empty::Empty"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Once.html\" title=\"struct futures_util::stream::Once\">Once</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::once::Once"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Pending.html\" title=\"struct futures_util::stream::Pending\">Pending</a>&lt;T&gt;","synthetic":true,"types":["futures_util::stream::pending::Pending"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.PollFn.html\" title=\"struct futures_util::stream::PollFn\">PollFn</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::poll_fn::PollFn"]},{"text":"impl&lt;St1, St2&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Select.html\" title=\"struct futures_util::stream::Select\">Select</a>&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::select::Select"]},{"text":"impl&lt;T, F, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Unfold.html\" title=\"struct futures_util::stream::Unfold\">Unfold</a>&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::unfold::Unfold"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.FuturesOrdered.html\" title=\"struct futures_util::stream::FuturesOrdered\">FuturesOrdered</a>&lt;T&gt;","synthetic":true,"types":["futures_util::stream::futures_ordered::FuturesOrdered"]},{"text":"impl&lt;Fut&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/futures_unordered/struct.FuturesUnordered.html\" title=\"struct futures_util::stream::futures_unordered::FuturesUnordered\">FuturesUnordered</a>&lt;Fut&gt;","synthetic":true,"types":["futures_util::stream::futures_unordered::FuturesUnordered"]},{"text":"impl&lt;St&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.SelectAll.html\" title=\"struct futures_util::stream::SelectAll\">SelectAll</a>&lt;St&gt;","synthetic":true,"types":["futures_util::stream::select_all::SelectAll"]},{"text":"impl&lt;'a, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/futures_unordered/struct.Iter.html\" title=\"struct futures_util::stream::futures_unordered::Iter\">Iter</a>&lt;'a, Fut&gt;","synthetic":true,"types":["futures_util::stream::futures_unordered::iter::Iter"]},{"text":"impl&lt;'a, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/futures_unordered/struct.IterMut.html\" title=\"struct futures_util::stream::futures_unordered::IterMut\">IterMut</a>&lt;'a, Fut&gt;","synthetic":true,"types":["futures_util::stream::futures_unordered::iter::IterMut"]},{"text":"impl&lt;'a, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/futures_unordered/struct.IterPinMut.html\" title=\"struct futures_util::stream::futures_unordered::IterPinMut\">IterPinMut</a>&lt;'a, Fut&gt;","synthetic":true,"types":["futures_util::stream::futures_unordered::iter::IterPinMut"]},{"text":"impl&lt;'a, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/futures_unordered/struct.IterPinRef.html\" title=\"struct futures_util::stream::futures_unordered::IterPinRef\">IterPinRef</a>&lt;'a, Fut&gt;","synthetic":true,"types":["futures_util::stream::futures_unordered::iter::IterPinRef"]},{"text":"impl&lt;'a, Si:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, Item&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.Close.html\" title=\"struct futures_util::sink::Close\">Close</a>&lt;'a, Si, Item&gt;","synthetic":true,"types":["futures_util::sink::close::Close"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.Drain.html\" title=\"struct futures_util::sink::Drain\">Drain</a>&lt;T&gt;","synthetic":true,"types":["futures_util::sink::drain::Drain"]},{"text":"impl&lt;Si1, Si2&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.Fanout.html\" title=\"struct futures_util::sink::Fanout\">Fanout</a>&lt;Si1, Si2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::sink::fanout::Fanout"]},{"text":"impl&lt;'a, Si:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, Item&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.Flush.html\" title=\"struct futures_util::sink::Flush\">Flush</a>&lt;'a, Si, Item&gt;","synthetic":true,"types":["futures_util::sink::flush::Flush"]},{"text":"impl&lt;Si, Item, E&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.SinkErrInto.html\" title=\"struct futures_util::sink::SinkErrInto\">SinkErrInto</a>&lt;Si, Item, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::sink::err_into::SinkErrInto"]},{"text":"impl&lt;Si, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.SinkMapErr.html\" title=\"struct futures_util::sink::SinkMapErr\">SinkMapErr</a>&lt;Si, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::sink::map_err::SinkMapErr"]},{"text":"impl&lt;'a, Si:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, Item&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.Send.html\" title=\"struct futures_util::sink::Send\">Send</a>&lt;'a, Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::sink::send::Send"]},{"text":"impl&lt;'a, Si:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, St:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.SendAll.html\" title=\"struct futures_util::sink::SendAll\">SendAll</a>&lt;'a, Si, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::sink::send_all::SendAll"]},{"text":"impl&lt;Si, Item, U, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.With.html\" title=\"struct futures_util::sink::With\">With</a>&lt;Si, Item, U, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::sink::with::With"]},{"text":"impl&lt;Si, Item, U, St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.WithFlatMap.html\" title=\"struct futures_util::sink::WithFlatMap\">WithFlatMap</a>&lt;Si, Item, U, St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::sink::with_flat_map::WithFlatMap"]},{"text":"impl&lt;Si, Item&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.Buffer.html\" title=\"struct futures_util::sink::Buffer\">Buffer</a>&lt;Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::sink::buffer::Buffer"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.AllowStdIo.html\" title=\"struct futures_util::io::AllowStdIo\">AllowStdIo</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::allow_std::AllowStdIo"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.BufReader.html\" title=\"struct futures_util::io::BufReader\">BufReader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::buf_reader::BufReader"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.BufWriter.html\" title=\"struct futures_util::io::BufWriter\">BufWriter</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::buf_writer::BufWriter"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Chain.html\" title=\"struct futures_util::io::Chain\">Chain</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::chain::Chain"]},{"text":"impl&lt;'a, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Close.html\" title=\"struct futures_util::io::Close\">Close</a>&lt;'a, W&gt;","synthetic":true,"types":["futures_util::io::close::Close"]},{"text":"impl&lt;'a, R, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Copy.html\" title=\"struct futures_util::io::Copy\">Copy</a>&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::copy::Copy"]},{"text":"impl&lt;'a, R, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.CopyBuf.html\" title=\"struct futures_util::io::CopyBuf\">CopyBuf</a>&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::copy_buf::CopyBuf"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Cursor.html\" title=\"struct futures_util::io::Cursor\">Cursor</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::cursor::Cursor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Empty.html\" title=\"struct futures_util::io::Empty\">Empty</a>","synthetic":true,"types":["futures_util::io::empty::Empty"]},{"text":"impl&lt;'a, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Flush.html\" title=\"struct futures_util::io::Flush\">Flush</a>&lt;'a, W&gt;","synthetic":true,"types":["futures_util::io::flush::Flush"]},{"text":"impl&lt;W, Item&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.IntoSink.html\" title=\"struct futures_util::io::IntoSink\">IntoSink</a>&lt;W, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::into_sink::IntoSink"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Lines.html\" title=\"struct futures_util::io::Lines\">Lines</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::lines::Lines"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Read.html\" title=\"struct futures_util::io::Read\">Read</a>&lt;'a, R&gt;","synthetic":true,"types":["futures_util::io::read::Read"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadVectored.html\" title=\"struct futures_util::io::ReadVectored\">ReadVectored</a>&lt;'a, R&gt;","synthetic":true,"types":["futures_util::io::read_vectored::ReadVectored"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadExact.html\" title=\"struct futures_util::io::ReadExact\">ReadExact</a>&lt;'a, R&gt;","synthetic":true,"types":["futures_util::io::read_exact::ReadExact"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadLine.html\" title=\"struct futures_util::io::ReadLine\">ReadLine</a>&lt;'a, R&gt;","synthetic":true,"types":["futures_util::io::read_line::ReadLine"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadToEnd.html\" title=\"struct futures_util::io::ReadToEnd\">ReadToEnd</a>&lt;'a, R&gt;","synthetic":true,"types":["futures_util::io::read_to_end::ReadToEnd"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadToString.html\" title=\"struct futures_util::io::ReadToString\">ReadToString</a>&lt;'a, R&gt;","synthetic":true,"types":["futures_util::io::read_to_string::ReadToString"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadUntil.html\" title=\"struct futures_util::io::ReadUntil\">ReadUntil</a>&lt;'a, R&gt;","synthetic":true,"types":["futures_util::io::read_until::ReadUntil"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Repeat.html\" title=\"struct futures_util::io::Repeat\">Repeat</a>","synthetic":true,"types":["futures_util::io::repeat::Repeat"]},{"text":"impl&lt;'a, S:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Seek.html\" title=\"struct futures_util::io::Seek\">Seek</a>&lt;'a, S&gt;","synthetic":true,"types":["futures_util::io::seek::Seek"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Sink.html\" title=\"struct futures_util::io::Sink\">Sink</a>","synthetic":true,"types":["futures_util::io::sink::Sink"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadHalf.html\" title=\"struct futures_util::io::ReadHalf\">ReadHalf</a>&lt;T&gt;","synthetic":true,"types":["futures_util::io::split::ReadHalf"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.WriteHalf.html\" title=\"struct futures_util::io::WriteHalf\">WriteHalf</a>&lt;T&gt;","synthetic":true,"types":["futures_util::io::split::WriteHalf"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Take.html\" title=\"struct futures_util::io::Take\">Take</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::take::Take"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Window.html\" title=\"struct futures_util::io::Window\">Window</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::window::Window"]},{"text":"impl&lt;'a, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Write.html\" title=\"struct futures_util::io::Write\">Write</a>&lt;'a, W&gt;","synthetic":true,"types":["futures_util::io::write::Write"]},{"text":"impl&lt;'a, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.WriteVectored.html\" title=\"struct futures_util::io::WriteVectored\">WriteVectored</a>&lt;'a, W&gt;","synthetic":true,"types":["futures_util::io::write_vectored::WriteVectored"]},{"text":"impl&lt;'a, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.WriteAll.html\" title=\"struct futures_util::io::WriteAll\">WriteAll</a>&lt;'a, W&gt;","synthetic":true,"types":["futures_util::io::write_all::WriteAll"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, U:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/lock/struct.MappedMutexGuard.html\" title=\"struct futures_util::lock::MappedMutexGuard\">MappedMutexGuard</a>&lt;'a, T, U&gt;","synthetic":true,"types":["futures_util::lock::mutex::MappedMutexGuard"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"futures_util/lock/struct.Mutex.html\" title=\"struct futures_util::lock::Mutex\">Mutex</a>&lt;T&gt;","synthetic":true,"types":["futures_util::lock::mutex::Mutex"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/lock/struct.MutexLockFuture.html\" title=\"struct futures_util::lock::MutexLockFuture\">MutexLockFuture</a>&lt;'a, T&gt;","synthetic":true,"types":["futures_util::lock::mutex::MutexLockFuture"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/lock/struct.MutexGuard.html\" title=\"struct futures_util::lock::MutexGuard\">MutexGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["futures_util::lock::mutex::MutexGuard"]}];
implementors["fxhash"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"fxhash/struct.FxHasher.html\" title=\"struct fxhash::FxHasher\">FxHasher</a>","synthetic":true,"types":["fxhash::FxHasher"]},{"text":"impl Freeze for <a class=\"struct\" href=\"fxhash/struct.FxHasher64.html\" title=\"struct fxhash::FxHasher64\">FxHasher64</a>","synthetic":true,"types":["fxhash::FxHasher64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"fxhash/struct.FxHasher32.html\" title=\"struct fxhash::FxHasher32\">FxHasher32</a>","synthetic":true,"types":["fxhash::FxHasher32"]}];
implementors["generic_array"] = [{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;T&gt;&gt;::<a class=\"type\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T, N&gt; Freeze for <a class=\"struct\" href=\"generic_array/iter/struct.GenericArrayIter.html\" title=\"struct generic_array::iter::GenericArrayIter\">GenericArrayIter</a>&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;N as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;T&gt;&gt;::<a class=\"type\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["generic_array::iter::GenericArrayIter"]}];
implementors["getrandom"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"getrandom/struct.Error.html\" title=\"struct getrandom::Error\">Error</a>","synthetic":true,"types":["getrandom::error::Error"]}];
implementors["h2"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"h2/struct.Error.html\" title=\"struct h2::Error\">Error</a>","synthetic":true,"types":["h2::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/struct.Reason.html\" title=\"struct h2::Reason\">Reason</a>","synthetic":true,"types":["h2::frame::reason::Reason"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/struct.FlowControl.html\" title=\"struct h2::FlowControl\">FlowControl</a>","synthetic":true,"types":["h2::share::FlowControl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/struct.Ping.html\" title=\"struct h2::Ping\">Ping</a>","synthetic":true,"types":["h2::share::Ping"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/struct.PingPong.html\" title=\"struct h2::PingPong\">PingPong</a>","synthetic":true,"types":["h2::share::PingPong"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/struct.Pong.html\" title=\"struct h2::Pong\">Pong</a>","synthetic":true,"types":["h2::share::Pong"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/struct.RecvStream.html\" title=\"struct h2::RecvStream\">RecvStream</a>","synthetic":true,"types":["h2::share::RecvStream"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"h2/struct.SendStream.html\" title=\"struct h2::SendStream\">SendStream</a>&lt;B&gt;","synthetic":true,"types":["h2::share::SendStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/struct.StreamId.html\" title=\"struct h2::StreamId\">StreamId</a>","synthetic":true,"types":["h2::share::StreamId"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"h2/client/struct.SendRequest.html\" title=\"struct h2::client::SendRequest\">SendRequest</a>&lt;B&gt;","synthetic":true,"types":["h2::client::SendRequest"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"h2/client/struct.ReadySendRequest.html\" title=\"struct h2::client::ReadySendRequest\">ReadySendRequest</a>&lt;B&gt;","synthetic":true,"types":["h2::client::ReadySendRequest"]},{"text":"impl&lt;T, B&nbsp;=&nbsp;<a class=\"struct\" href=\"bytes/bytes/struct.Bytes.html\" title=\"struct bytes::bytes::Bytes\">Bytes</a>&gt; !Freeze for <a class=\"struct\" href=\"h2/client/struct.Connection.html\" title=\"struct h2::client::Connection\">Connection</a>&lt;T, B&gt;","synthetic":true,"types":["h2::client::Connection"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/client/struct.ResponseFuture.html\" title=\"struct h2::client::ResponseFuture\">ResponseFuture</a>","synthetic":true,"types":["h2::client::ResponseFuture"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/client/struct.PushedResponseFuture.html\" title=\"struct h2::client::PushedResponseFuture\">PushedResponseFuture</a>","synthetic":true,"types":["h2::client::PushedResponseFuture"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"h2/client/struct.PushPromise.html\" title=\"struct h2::client::PushPromise\">PushPromise</a>","synthetic":true,"types":["h2::client::PushPromise"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/client/struct.PushPromises.html\" title=\"struct h2::client::PushPromises\">PushPromises</a>","synthetic":true,"types":["h2::client::PushPromises"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/client/struct.Builder.html\" title=\"struct h2::client::Builder\">Builder</a>","synthetic":true,"types":["h2::client::Builder"]},{"text":"impl&lt;T, B&nbsp;=&nbsp;<a class=\"struct\" href=\"bytes/bytes/struct.Bytes.html\" title=\"struct bytes::bytes::Bytes\">Bytes</a>&gt; !Freeze for <a class=\"struct\" href=\"h2/server/struct.Handshake.html\" title=\"struct h2::server::Handshake\">Handshake</a>&lt;T, B&gt;","synthetic":true,"types":["h2::server::Handshake"]},{"text":"impl&lt;T, B&gt; !Freeze for <a class=\"struct\" href=\"h2/server/struct.Connection.html\" title=\"struct h2::server::Connection\">Connection</a>&lt;T, B&gt;","synthetic":true,"types":["h2::server::Connection"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/server/struct.Builder.html\" title=\"struct h2::server::Builder\">Builder</a>","synthetic":true,"types":["h2::server::Builder"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"h2/server/struct.SendResponse.html\" title=\"struct h2::server::SendResponse\">SendResponse</a>&lt;B&gt;","synthetic":true,"types":["h2::server::SendResponse"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"h2/server/struct.SendPushedResponse.html\" title=\"struct h2::server::SendPushedResponse\">SendPushedResponse</a>&lt;B&gt;","synthetic":true,"types":["h2::server::SendPushedResponse"]}];
implementors["hashbag"] = [{"text":"impl&lt;T, S&gt; Freeze for <a class=\"struct\" href=\"hashbag/struct.HashBag.html\" title=\"struct hashbag::HashBag\">HashBag</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbag::HashBag"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"hashbag/struct.Iter.html\" title=\"struct hashbag::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["hashbag::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"hashbag/struct.SetIter.html\" title=\"struct hashbag::SetIter\">SetIter</a>&lt;'a, T&gt;","synthetic":true,"types":["hashbag::SetIter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"hashbag/struct.IntoIter.html\" title=\"struct hashbag::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["hashbag::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"hashbag/struct.Drain.html\" title=\"struct hashbag::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["hashbag::Drain"]}];
implementors["hmac"] = [{"text":"impl&lt;D&gt; Freeze for <a class=\"struct\" href=\"hmac/struct.Hmac.html\" title=\"struct hmac::Hmac\">Hmac</a>&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;D as <a class=\"trait\" href=\"digest/trait.BlockInput.html\" title=\"trait digest::BlockInput\">BlockInput</a>&gt;::<a class=\"type\" href=\"digest/trait.BlockInput.html#associatedtype.BlockSize\" title=\"type digest::BlockInput::BlockSize\">BlockSize</a> as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"type\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["hmac::Hmac"]}];
implementors["http"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"http/struct.Error.html\" title=\"struct http::Error\">Error</a>","synthetic":true,"types":["http::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/struct.Extensions.html\" title=\"struct http::Extensions\">Extensions</a>","synthetic":true,"types":["http::extensions::Extensions"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.Drain.html\" title=\"struct http::header::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::Drain"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.GetAll.html\" title=\"struct http::header::GetAll\">GetAll</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::GetAll"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.HeaderMap.html\" title=\"struct http::header::HeaderMap\">HeaderMap</a>&lt;T&gt;","synthetic":true,"types":["http::header::map::HeaderMap"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.IntoIter.html\" title=\"struct http::header::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["http::header::map::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.Iter.html\" title=\"struct http::header::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.IterMut.html\" title=\"struct http::header::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::IterMut"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.Keys.html\" title=\"struct http::header::Keys\">Keys</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::Keys"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.OccupiedEntry.html\" title=\"struct http::header::OccupiedEntry\">OccupiedEntry</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::OccupiedEntry"]},{"text":"impl&lt;'a, T&gt; !Freeze for <a class=\"struct\" href=\"http/header/struct.VacantEntry.html\" title=\"struct http::header::VacantEntry\">VacantEntry</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::VacantEntry"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.ValueDrain.html\" title=\"struct http::header::ValueDrain\">ValueDrain</a>&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["http::header::map::ValueDrain"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.ValueIter.html\" title=\"struct http::header::ValueIter\">ValueIter</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::ValueIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.ValueIterMut.html\" title=\"struct http::header::ValueIterMut\">ValueIterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::ValueIterMut"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.Values.html\" title=\"struct http::header::Values\">Values</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::Values"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.ValuesMut.html\" title=\"struct http::header::ValuesMut\">ValuesMut</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::ValuesMut"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/header/struct.HeaderName.html\" title=\"struct http::header::HeaderName\">HeaderName</a>","synthetic":true,"types":["http::header::name::HeaderName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/header/struct.InvalidHeaderName.html\" title=\"struct http::header::InvalidHeaderName\">InvalidHeaderName</a>","synthetic":true,"types":["http::header::name::InvalidHeaderName"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/header/struct.HeaderValue.html\" title=\"struct http::header::HeaderValue\">HeaderValue</a>","synthetic":true,"types":["http::header::value::HeaderValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/header/struct.InvalidHeaderValue.html\" title=\"struct http::header::InvalidHeaderValue\">InvalidHeaderValue</a>","synthetic":true,"types":["http::header::value::InvalidHeaderValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/header/struct.ToStrError.html\" title=\"struct http::header::ToStrError\">ToStrError</a>","synthetic":true,"types":["http::header::value::ToStrError"]},{"text":"impl&lt;'a, T&gt; !Freeze for <a class=\"enum\" href=\"http/header/enum.Entry.html\" title=\"enum http::header::Entry\">Entry</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::Entry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/method/struct.Method.html\" title=\"struct http::method::Method\">Method</a>","synthetic":true,"types":["http::method::Method"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/method/struct.InvalidMethod.html\" title=\"struct http::method::InvalidMethod\">InvalidMethod</a>","synthetic":true,"types":["http::method::InvalidMethod"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;T&gt;","synthetic":true,"types":["http::request::Request"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/request/struct.Parts.html\" title=\"struct http::request::Parts\">Parts</a>","synthetic":true,"types":["http::request::Parts"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/request/struct.Builder.html\" title=\"struct http::request::Builder\">Builder</a>","synthetic":true,"types":["http::request::Builder"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["http::response::Response"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/response/struct.Parts.html\" title=\"struct http::response::Parts\">Parts</a>","synthetic":true,"types":["http::response::Parts"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/response/struct.Builder.html\" title=\"struct http::response::Builder\">Builder</a>","synthetic":true,"types":["http::response::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/status/struct.StatusCode.html\" title=\"struct http::status::StatusCode\">StatusCode</a>","synthetic":true,"types":["http::status::StatusCode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/status/struct.InvalidStatusCode.html\" title=\"struct http::status::InvalidStatusCode\">InvalidStatusCode</a>","synthetic":true,"types":["http::status::InvalidStatusCode"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/uri/struct.Authority.html\" title=\"struct http::uri::Authority\">Authority</a>","synthetic":true,"types":["http::uri::authority::Authority"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/uri/struct.Builder.html\" title=\"struct http::uri::Builder\">Builder</a>","synthetic":true,"types":["http::uri::builder::Builder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/uri/struct.PathAndQuery.html\" title=\"struct http::uri::PathAndQuery\">PathAndQuery</a>","synthetic":true,"types":["http::uri::path::PathAndQuery"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"http/uri/struct.Port.html\" title=\"struct http::uri::Port\">Port</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["http::uri::port::Port"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/uri/struct.Scheme.html\" title=\"struct http::uri::Scheme\">Scheme</a>","synthetic":true,"types":["http::uri::scheme::Scheme"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/uri/struct.Uri.html\" title=\"struct http::uri::Uri\">Uri</a>","synthetic":true,"types":["http::uri::Uri"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/uri/struct.Parts.html\" title=\"struct http::uri::Parts\">Parts</a>","synthetic":true,"types":["http::uri::Parts"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/uri/struct.InvalidUri.html\" title=\"struct http::uri::InvalidUri\">InvalidUri</a>","synthetic":true,"types":["http::uri::InvalidUri"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/uri/struct.InvalidUriParts.html\" title=\"struct http::uri::InvalidUriParts\">InvalidUriParts</a>","synthetic":true,"types":["http::uri::InvalidUriParts"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/version/struct.Version.html\" title=\"struct http::version::Version\">Version</a>","synthetic":true,"types":["http::version::Version"]}];
implementors["httparse"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"httparse/struct.InvalidChunkSize.html\" title=\"struct httparse::InvalidChunkSize\">InvalidChunkSize</a>","synthetic":true,"types":["httparse::InvalidChunkSize"]},{"text":"impl&lt;'headers, 'buf&gt; Freeze for <a class=\"struct\" href=\"httparse/struct.Request.html\" title=\"struct httparse::Request\">Request</a>&lt;'headers, 'buf&gt;","synthetic":true,"types":["httparse::Request"]},{"text":"impl&lt;'headers, 'buf&gt; Freeze for <a class=\"struct\" href=\"httparse/struct.Response.html\" title=\"struct httparse::Response\">Response</a>&lt;'headers, 'buf&gt;","synthetic":true,"types":["httparse::Response"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"httparse/struct.Header.html\" title=\"struct httparse::Header\">Header</a>&lt;'a&gt;","synthetic":true,"types":["httparse::Header"]},{"text":"impl Freeze for <a class=\"enum\" href=\"httparse/enum.Error.html\" title=\"enum httparse::Error\">Error</a>","synthetic":true,"types":["httparse::Error"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"httparse/enum.Status.html\" title=\"enum httparse::Status\">Status</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["httparse::Status"]}];
implementors["human_panic"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"human_panic/struct.Metadata.html\" title=\"struct human_panic::Metadata\">Metadata</a>","synthetic":true,"types":["human_panic::Metadata"]},{"text":"impl Freeze for <a class=\"struct\" href=\"human_panic/report/struct.Report.html\" title=\"struct human_panic::report::Report\">Report</a>","synthetic":true,"types":["human_panic::report::Report"]},{"text":"impl Freeze for <a class=\"enum\" href=\"human_panic/report/enum.Method.html\" title=\"enum human_panic::report::Method\">Method</a>","synthetic":true,"types":["human_panic::report::Method"]}];
implementors["humantime"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"humantime/struct.FormattedDuration.html\" title=\"struct humantime::FormattedDuration\">FormattedDuration</a>","synthetic":true,"types":["humantime::duration::FormattedDuration"]},{"text":"impl Freeze for <a class=\"struct\" href=\"humantime/struct.Duration.html\" title=\"struct humantime::Duration\">Duration</a>","synthetic":true,"types":["humantime::wrapper::Duration"]},{"text":"impl Freeze for <a class=\"struct\" href=\"humantime/struct.Timestamp.html\" title=\"struct humantime::Timestamp\">Timestamp</a>","synthetic":true,"types":["humantime::wrapper::Timestamp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"humantime/struct.Rfc3339Timestamp.html\" title=\"struct humantime::Rfc3339Timestamp\">Rfc3339Timestamp</a>","synthetic":true,"types":["humantime::date::Rfc3339Timestamp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"humantime/enum.DurationError.html\" title=\"enum humantime::DurationError\">Error</a>","synthetic":true,"types":["humantime::duration::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"humantime/enum.TimestampError.html\" title=\"enum humantime::TimestampError\">Error</a>","synthetic":true,"types":["humantime::date::Error"]}];
implementors["idna"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"idna/struct.Config.html\" title=\"struct idna::Config\">Config</a>","synthetic":true,"types":["idna::uts46::Config"]},{"text":"impl Freeze for <a class=\"struct\" href=\"idna/struct.Errors.html\" title=\"struct idna::Errors\">Errors</a>","synthetic":true,"types":["idna::uts46::Errors"]}];
implementors["indexmap"] = [{"text":"impl&lt;K, V, S&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.IndexMap.html\" title=\"struct indexmap::map::IndexMap\">IndexMap</a>&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["indexmap::map::IndexMap"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.OccupiedEntry.html\" title=\"struct indexmap::map::OccupiedEntry\">OccupiedEntry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["indexmap::map::OccupiedEntry"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.VacantEntry.html\" title=\"struct indexmap::map::VacantEntry\">VacantEntry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["indexmap::map::VacantEntry"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.Keys.html\" title=\"struct indexmap::map::Keys\">Keys</a>&lt;'a, K, V&gt;","synthetic":true,"types":["indexmap::map::Keys"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.Values.html\" title=\"struct indexmap::map::Values\">Values</a>&lt;'a, K, V&gt;","synthetic":true,"types":["indexmap::map::Values"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.ValuesMut.html\" title=\"struct indexmap::map::ValuesMut\">ValuesMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["indexmap::map::ValuesMut"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.Iter.html\" title=\"struct indexmap::map::Iter\">Iter</a>&lt;'a, K, V&gt;","synthetic":true,"types":["indexmap::map::Iter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.IterMut.html\" title=\"struct indexmap::map::IterMut\">IterMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["indexmap::map::IterMut"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.IntoIter.html\" title=\"struct indexmap::map::IntoIter\">IntoIter</a>&lt;K, V&gt;","synthetic":true,"types":["indexmap::map::IntoIter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.Drain.html\" title=\"struct indexmap::map::Drain\">Drain</a>&lt;'a, K, V&gt;","synthetic":true,"types":["indexmap::map::Drain"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"enum\" href=\"indexmap/map/enum.Entry.html\" title=\"enum indexmap::map::Entry\">Entry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["indexmap::map::Entry"]},{"text":"impl&lt;T, S&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["indexmap::set::IndexSet"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.IntoIter.html\" title=\"struct indexmap::set::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["indexmap::set::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.Iter.html\" title=\"struct indexmap::set::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["indexmap::set::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.Drain.html\" title=\"struct indexmap::set::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["indexmap::set::Drain"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.Difference.html\" title=\"struct indexmap::set::Difference\">Difference</a>&lt;'a, T, S&gt;","synthetic":true,"types":["indexmap::set::Difference"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.Intersection.html\" title=\"struct indexmap::set::Intersection\">Intersection</a>&lt;'a, T, S&gt;","synthetic":true,"types":["indexmap::set::Intersection"]},{"text":"impl&lt;'a, T, S1, S2&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.SymmetricDifference.html\" title=\"struct indexmap::set::SymmetricDifference\">SymmetricDifference</a>&lt;'a, T, S1, S2&gt;","synthetic":true,"types":["indexmap::set::SymmetricDifference"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.Union.html\" title=\"struct indexmap::set::Union\">Union</a>&lt;'a, T, S&gt;","synthetic":true,"types":["indexmap::set::Union"]}];
implementors["ini"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"ini/ini/struct.ParseOption.html\" title=\"struct ini::ini::ParseOption\">ParseOption</a>","synthetic":true,"types":["ini::ini::ParseOption"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"ini/ini/struct.SectionSetter.html\" title=\"struct ini::ini::SectionSetter\">SectionSetter</a>&lt;'a&gt;","synthetic":true,"types":["ini::ini::SectionSetter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ini/ini/struct.Ini.html\" title=\"struct ini::ini::Ini\">Ini</a>","synthetic":true,"types":["ini::ini::Ini"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"ini/ini/struct.SectionIterator.html\" title=\"struct ini::ini::SectionIterator\">SectionIterator</a>&lt;'a&gt;","synthetic":true,"types":["ini::ini::SectionIterator"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"ini/ini/struct.SectionMutIterator.html\" title=\"struct ini::ini::SectionMutIterator\">SectionMutIterator</a>&lt;'a&gt;","synthetic":true,"types":["ini::ini::SectionMutIterator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ini/ini/struct.SectionIntoIter.html\" title=\"struct ini::ini::SectionIntoIter\">SectionIntoIter</a>","synthetic":true,"types":["ini::ini::SectionIntoIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ini/ini/struct.ParseError.html\" title=\"struct ini::ini::ParseError\">ParseError</a>","synthetic":true,"types":["ini::ini::ParseError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"ini/ini/enum.EscapePolicy.html\" title=\"enum ini::ini::EscapePolicy\">EscapePolicy</a>","synthetic":true,"types":["ini::ini::EscapePolicy"]},{"text":"impl Freeze for <a class=\"enum\" href=\"ini/ini/enum.Error.html\" title=\"enum ini::ini::Error\">Error</a>","synthetic":true,"types":["ini::ini::Error"]}];
implementors["iovec"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"iovec/struct.IoVec.html\" title=\"struct iovec::IoVec\">IoVec</a>","synthetic":true,"types":["iovec::IoVec"]}];
implementors["itoa"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"itoa/struct.Buffer.html\" title=\"struct itoa::Buffer\">Buffer</a>","synthetic":true,"types":["itoa::Buffer"]}];
implementors["language_tags"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"language_tags/struct.LanguageTag.html\" title=\"struct language_tags::LanguageTag\">LanguageTag</a>","synthetic":true,"types":["language_tags::LanguageTag"]},{"text":"impl Freeze for <a class=\"enum\" href=\"language_tags/enum.Error.html\" title=\"enum language_tags::Error\">Error</a>","synthetic":true,"types":["language_tags::Error"]}];
implementors["lexical_core"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"lexical_core/struct.Error.html\" title=\"struct lexical_core::Error\">Error</a>","synthetic":true,"types":["lexical_core::util::error::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"lexical_core/enum.ErrorCode.html\" title=\"enum lexical_core::ErrorCode\">ErrorCode</a>","synthetic":true,"types":["lexical_core::util::error::ErrorCode"]}];
implementors["libc"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.group.html\" title=\"struct libc::group\">group</a>","synthetic":true,"types":["libc::unix::group"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.utimbuf.html\" title=\"struct libc::utimbuf\">utimbuf</a>","synthetic":true,"types":["libc::unix::utimbuf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.timeval.html\" title=\"struct libc::timeval\">timeval</a>","synthetic":true,"types":["libc::unix::timeval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.timespec.html\" title=\"struct libc::timespec\">timespec</a>","synthetic":true,"types":["libc::unix::timespec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rlimit.html\" title=\"struct libc::rlimit\">rlimit</a>","synthetic":true,"types":["libc::unix::rlimit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rusage.html\" title=\"struct libc::rusage\">rusage</a>","synthetic":true,"types":["libc::unix::rusage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ipv6_mreq.html\" title=\"struct libc::ipv6_mreq\">ipv6_mreq</a>","synthetic":true,"types":["libc::unix::ipv6_mreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.hostent.html\" title=\"struct libc::hostent\">hostent</a>","synthetic":true,"types":["libc::unix::hostent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.iovec.html\" title=\"struct libc::iovec\">iovec</a>","synthetic":true,"types":["libc::unix::iovec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pollfd.html\" title=\"struct libc::pollfd\">pollfd</a>","synthetic":true,"types":["libc::unix::pollfd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.winsize.html\" title=\"struct libc::winsize\">winsize</a>","synthetic":true,"types":["libc::unix::winsize"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.linger.html\" title=\"struct libc::linger\">linger</a>","synthetic":true,"types":["libc::unix::linger"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigval.html\" title=\"struct libc::sigval\">sigval</a>","synthetic":true,"types":["libc::unix::sigval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.itimerval.html\" title=\"struct libc::itimerval\">itimerval</a>","synthetic":true,"types":["libc::unix::itimerval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.tms.html\" title=\"struct libc::tms\">tms</a>","synthetic":true,"types":["libc::unix::tms"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.servent.html\" title=\"struct libc::servent\">servent</a>","synthetic":true,"types":["libc::unix::servent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.protoent.html\" title=\"struct libc::protoent\">protoent</a>","synthetic":true,"types":["libc::unix::protoent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr.html\" title=\"struct libc::sockaddr\">sockaddr</a>","synthetic":true,"types":["libc::unix::bsd::sockaddr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_in6.html\" title=\"struct libc::sockaddr_in6\">sockaddr_in6</a>","synthetic":true,"types":["libc::unix::bsd::sockaddr_in6"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.passwd.html\" title=\"struct libc::passwd\">passwd</a>","synthetic":true,"types":["libc::unix::bsd::passwd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ifaddrs.html\" title=\"struct libc::ifaddrs\">ifaddrs</a>","synthetic":true,"types":["libc::unix::bsd::ifaddrs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.fd_set.html\" title=\"struct libc::fd_set\">fd_set</a>","synthetic":true,"types":["libc::unix::bsd::fd_set"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.tm.html\" title=\"struct libc::tm\">tm</a>","synthetic":true,"types":["libc::unix::bsd::tm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.msghdr.html\" title=\"struct libc::msghdr\">msghdr</a>","synthetic":true,"types":["libc::unix::bsd::msghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.cmsghdr.html\" title=\"struct libc::cmsghdr\">cmsghdr</a>","synthetic":true,"types":["libc::unix::bsd::cmsghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.fsid_t.html\" title=\"struct libc::fsid_t\">fsid_t</a>","synthetic":true,"types":["libc::unix::bsd::fsid_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.if_nameindex.html\" title=\"struct libc::if_nameindex\">if_nameindex</a>","synthetic":true,"types":["libc::unix::bsd::if_nameindex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_un.html\" title=\"struct libc::sockaddr_un\">sockaddr_un</a>","synthetic":true,"types":["libc::unix::bsd::sockaddr_un"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.utsname.html\" title=\"struct libc::utsname\">utsname</a>","synthetic":true,"types":["libc::unix::bsd::utsname"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ip_mreq.html\" title=\"struct libc::ip_mreq\">ip_mreq</a>","synthetic":true,"types":["libc::unix::bsd::apple::ip_mreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.aiocb.html\" title=\"struct libc::aiocb\">aiocb</a>","synthetic":true,"types":["libc::unix::bsd::apple::aiocb"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.glob_t.html\" title=\"struct libc::glob_t\">glob_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::glob_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.addrinfo.html\" title=\"struct libc::addrinfo\">addrinfo</a>","synthetic":true,"types":["libc::unix::bsd::apple::addrinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mach_timebase_info.html\" title=\"struct libc::mach_timebase_info\">mach_timebase_info</a>","synthetic":true,"types":["libc::unix::bsd::apple::mach_timebase_info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.stat.html\" title=\"struct libc::stat\">stat</a>","synthetic":true,"types":["libc::unix::bsd::apple::stat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_mutexattr_t.html\" title=\"struct libc::pthread_mutexattr_t\">pthread_mutexattr_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::pthread_mutexattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_condattr_t.html\" title=\"struct libc::pthread_condattr_t\">pthread_condattr_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::pthread_condattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_rwlockattr_t.html\" title=\"struct libc::pthread_rwlockattr_t\">pthread_rwlockattr_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::pthread_rwlockattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.siginfo_t.html\" title=\"struct libc::siginfo_t\">siginfo_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::siginfo_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigaction.html\" title=\"struct libc::sigaction\">sigaction</a>","synthetic":true,"types":["libc::unix::bsd::apple::sigaction"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.stack_t.html\" title=\"struct libc::stack_t\">stack_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::stack_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.fstore_t.html\" title=\"struct libc::fstore_t\">fstore_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::fstore_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.radvisory.html\" title=\"struct libc::radvisory\">radvisory</a>","synthetic":true,"types":["libc::unix::bsd::apple::radvisory"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statvfs.html\" title=\"struct libc::statvfs\">statvfs</a>","synthetic":true,"types":["libc::unix::bsd::apple::statvfs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Dl_info.html\" title=\"struct libc::Dl_info\">Dl_info</a>","synthetic":true,"types":["libc::unix::bsd::apple::Dl_info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_in.html\" title=\"struct libc::sockaddr_in\">sockaddr_in</a>","synthetic":true,"types":["libc::unix::bsd::apple::sockaddr_in"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.kevent64_s.html\" title=\"struct libc::kevent64_s\">kevent64_s</a>","synthetic":true,"types":["libc::unix::bsd::apple::kevent64_s"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.dqblk.html\" title=\"struct libc::dqblk\">dqblk</a>","synthetic":true,"types":["libc::unix::bsd::apple::dqblk"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.if_msghdr.html\" title=\"struct libc::if_msghdr\">if_msghdr</a>","synthetic":true,"types":["libc::unix::bsd::apple::if_msghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.termios.html\" title=\"struct libc::termios\">termios</a>","synthetic":true,"types":["libc::unix::bsd::apple::termios"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.flock.html\" title=\"struct libc::flock\">flock</a>","synthetic":true,"types":["libc::unix::bsd::apple::flock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sf_hdtr.html\" title=\"struct libc::sf_hdtr\">sf_hdtr</a>","synthetic":true,"types":["libc::unix::bsd::apple::sf_hdtr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.lconv.html\" title=\"struct libc::lconv\">lconv</a>","synthetic":true,"types":["libc::unix::bsd::apple::lconv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.proc_taskinfo.html\" title=\"struct libc::proc_taskinfo\">proc_taskinfo</a>","synthetic":true,"types":["libc::unix::bsd::apple::proc_taskinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.proc_bsdinfo.html\" title=\"struct libc::proc_bsdinfo\">proc_bsdinfo</a>","synthetic":true,"types":["libc::unix::bsd::apple::proc_bsdinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.proc_taskallinfo.html\" title=\"struct libc::proc_taskallinfo\">proc_taskallinfo</a>","synthetic":true,"types":["libc::unix::bsd::apple::proc_taskallinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.xsw_usage.html\" title=\"struct libc::xsw_usage\">xsw_usage</a>","synthetic":true,"types":["libc::unix::bsd::apple::xsw_usage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.xucred.html\" title=\"struct libc::xucred\">xucred</a>","synthetic":true,"types":["libc::unix::bsd::apple::xucred"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mach_header.html\" title=\"struct libc::mach_header\">mach_header</a>","synthetic":true,"types":["libc::unix::bsd::apple::mach_header"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mach_header_64.html\" title=\"struct libc::mach_header_64\">mach_header_64</a>","synthetic":true,"types":["libc::unix::bsd::apple::mach_header_64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.segment_command.html\" title=\"struct libc::segment_command\">segment_command</a>","synthetic":true,"types":["libc::unix::bsd::apple::segment_command"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.segment_command_64.html\" title=\"struct libc::segment_command_64\">segment_command_64</a>","synthetic":true,"types":["libc::unix::bsd::apple::segment_command_64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.load_command.html\" title=\"struct libc::load_command\">load_command</a>","synthetic":true,"types":["libc::unix::bsd::apple::load_command"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_dl.html\" title=\"struct libc::sockaddr_dl\">sockaddr_dl</a>","synthetic":true,"types":["libc::unix::bsd::apple::sockaddr_dl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_inarp.html\" title=\"struct libc::sockaddr_inarp\">sockaddr_inarp</a>","synthetic":true,"types":["libc::unix::bsd::apple::sockaddr_inarp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_ctl.html\" title=\"struct libc::sockaddr_ctl\">sockaddr_ctl</a>","synthetic":true,"types":["libc::unix::bsd::apple::sockaddr_ctl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in_pktinfo.html\" title=\"struct libc::in_pktinfo\">in_pktinfo</a>","synthetic":true,"types":["libc::unix::bsd::apple::in_pktinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in6_pktinfo.html\" title=\"struct libc::in6_pktinfo\">in6_pktinfo</a>","synthetic":true,"types":["libc::unix::bsd::apple::in6_pktinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ipc_perm.html\" title=\"struct libc::ipc_perm\">ipc_perm</a>","synthetic":true,"types":["libc::unix::bsd::apple::ipc_perm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sembuf.html\" title=\"struct libc::sembuf\">sembuf</a>","synthetic":true,"types":["libc::unix::bsd::apple::sembuf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.arphdr.html\" title=\"struct libc::arphdr\">arphdr</a>","synthetic":true,"types":["libc::unix::bsd::apple::arphdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in_addr.html\" title=\"struct libc::in_addr\">in_addr</a>","synthetic":true,"types":["libc::unix::bsd::apple::in_addr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.kevent.html\" title=\"struct libc::kevent\">kevent</a>","synthetic":true,"types":["libc::unix::bsd::apple::kevent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.semid_ds.html\" title=\"struct libc::semid_ds\">semid_ds</a>","synthetic":true,"types":["libc::unix::bsd::apple::semid_ds"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.shmid_ds.html\" title=\"struct libc::shmid_ds\">shmid_ds</a>","synthetic":true,"types":["libc::unix::bsd::apple::shmid_ds"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.proc_threadinfo.html\" title=\"struct libc::proc_threadinfo\">proc_threadinfo</a>","synthetic":true,"types":["libc::unix::bsd::apple::proc_threadinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statfs.html\" title=\"struct libc::statfs\">statfs</a>","synthetic":true,"types":["libc::unix::bsd::apple::statfs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.dirent.html\" title=\"struct libc::dirent\">dirent</a>","synthetic":true,"types":["libc::unix::bsd::apple::dirent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_rwlock_t.html\" title=\"struct libc::pthread_rwlock_t\">pthread_rwlock_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::pthread_rwlock_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_mutex_t.html\" title=\"struct libc::pthread_mutex_t\">pthread_mutex_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::pthread_mutex_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_cond_t.html\" title=\"struct libc::pthread_cond_t\">pthread_cond_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::pthread_cond_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_storage.html\" title=\"struct libc::sockaddr_storage\">sockaddr_storage</a>","synthetic":true,"types":["libc::unix::bsd::apple::sockaddr_storage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.utmpx.html\" title=\"struct libc::utmpx\">utmpx</a>","synthetic":true,"types":["libc::unix::bsd::apple::utmpx"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigevent.html\" title=\"struct libc::sigevent\">sigevent</a>","synthetic":true,"types":["libc::unix::bsd::apple::sigevent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.timeval32.html\" title=\"struct libc::timeval32\">timeval32</a>","synthetic":true,"types":["libc::unix::bsd::apple::b64::timeval32"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.if_data.html\" title=\"struct libc::if_data\">if_data</a>","synthetic":true,"types":["libc::unix::bsd::apple::b64::if_data"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.bpf_hdr.html\" title=\"struct libc::bpf_hdr\">bpf_hdr</a>","synthetic":true,"types":["libc::unix::bsd::apple::b64::bpf_hdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_attr_t.html\" title=\"struct libc::pthread_attr_t\">pthread_attr_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::b64::pthread_attr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.max_align_t.html\" title=\"struct libc::max_align_t\">max_align_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::b64::align::max_align_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in6_addr.html\" title=\"struct libc::in6_addr\">in6_addr</a>","synthetic":true,"types":["libc::unix::align::in6_addr"]},{"text":"impl Freeze for <a class=\"union\" href=\"libc/union.semun.html\" title=\"union libc::semun\">semun</a>","synthetic":true,"types":["libc::unix::bsd::apple::semun"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.DIR.html\" title=\"enum libc::DIR\">DIR</a>","synthetic":true,"types":["libc::unix::DIR"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.FILE.html\" title=\"enum libc::FILE\">FILE</a>","synthetic":true,"types":["libc::unix::FILE"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.fpos_t.html\" title=\"enum libc::fpos_t\">fpos_t</a>","synthetic":true,"types":["libc::unix::fpos_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.timezone.html\" title=\"enum libc::timezone\">timezone</a>","synthetic":true,"types":["libc::unix::bsd::apple::timezone"]}];
implementors["linked_hash_map"] = [{"text":"impl&lt;K, V, S&gt; Freeze for <a class=\"struct\" href=\"linked_hash_map/struct.LinkedHashMap.html\" title=\"struct linked_hash_map::LinkedHashMap\">LinkedHashMap</a>&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["linked_hash_map::LinkedHashMap"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"linked_hash_map/struct.Iter.html\" title=\"struct linked_hash_map::Iter\">Iter</a>&lt;'a, K, V&gt;","synthetic":true,"types":["linked_hash_map::Iter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"linked_hash_map/struct.IterMut.html\" title=\"struct linked_hash_map::IterMut\">IterMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["linked_hash_map::IterMut"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"linked_hash_map/struct.IntoIter.html\" title=\"struct linked_hash_map::IntoIter\">IntoIter</a>&lt;K, V&gt;","synthetic":true,"types":["linked_hash_map::IntoIter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"linked_hash_map/struct.Keys.html\" title=\"struct linked_hash_map::Keys\">Keys</a>&lt;'a, K, V&gt;","synthetic":true,"types":["linked_hash_map::Keys"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"linked_hash_map/struct.Values.html\" title=\"struct linked_hash_map::Values\">Values</a>&lt;'a, K, V&gt;","synthetic":true,"types":["linked_hash_map::Values"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"linked_hash_map/serde/struct.LinkedHashMapVisitor.html\" title=\"struct linked_hash_map::serde::LinkedHashMapVisitor\">LinkedHashMapVisitor</a>&lt;K, V&gt;","synthetic":true,"types":["linked_hash_map::serde::LinkedHashMapVisitor"]}];
implementors["lock_api"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"lock_api/struct.GuardSend.html\" title=\"struct lock_api::GuardSend\">GuardSend</a>","synthetic":true,"types":["lock_api::GuardSend"]},{"text":"impl Freeze for <a class=\"struct\" href=\"lock_api/struct.GuardNoSend.html\" title=\"struct lock_api::GuardNoSend\">GuardNoSend</a>","synthetic":true,"types":["lock_api::GuardNoSend"]},{"text":"impl&lt;R, T&gt; !Freeze for <a class=\"struct\" href=\"lock_api/struct.Mutex.html\" title=\"struct lock_api::Mutex\">Mutex</a>&lt;R, T&gt;","synthetic":true,"types":["lock_api::mutex::Mutex"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MutexGuard.html\" title=\"struct lock_api::MutexGuard\">MutexGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::mutex::MutexGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MappedMutexGuard.html\" title=\"struct lock_api::MappedMutexGuard\">MappedMutexGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::mutex::MappedMutexGuard"]},{"text":"impl&lt;R, G, T&gt; !Freeze for <a class=\"struct\" href=\"lock_api/struct.ReentrantMutex.html\" title=\"struct lock_api::ReentrantMutex\">ReentrantMutex</a>&lt;R, G, T&gt;","synthetic":true,"types":["lock_api::remutex::ReentrantMutex"]},{"text":"impl&lt;'a, R, G, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.ReentrantMutexGuard.html\" title=\"struct lock_api::ReentrantMutexGuard\">ReentrantMutexGuard</a>&lt;'a, R, G, T&gt;","synthetic":true,"types":["lock_api::remutex::ReentrantMutexGuard"]},{"text":"impl&lt;'a, R, G, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MappedReentrantMutexGuard.html\" title=\"struct lock_api::MappedReentrantMutexGuard\">MappedReentrantMutexGuard</a>&lt;'a, R, G, T&gt;","synthetic":true,"types":["lock_api::remutex::MappedReentrantMutexGuard"]},{"text":"impl&lt;R, T&gt; !Freeze for <a class=\"struct\" href=\"lock_api/struct.RwLock.html\" title=\"struct lock_api::RwLock\">RwLock</a>&lt;R, T&gt;","synthetic":true,"types":["lock_api::rwlock::RwLock"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.RwLockReadGuard.html\" title=\"struct lock_api::RwLockReadGuard\">RwLockReadGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::RwLockReadGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.RwLockWriteGuard.html\" title=\"struct lock_api::RwLockWriteGuard\">RwLockWriteGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::RwLockWriteGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.RwLockUpgradableReadGuard.html\" title=\"struct lock_api::RwLockUpgradableReadGuard\">RwLockUpgradableReadGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::RwLockUpgradableReadGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MappedRwLockReadGuard.html\" title=\"struct lock_api::MappedRwLockReadGuard\">MappedRwLockReadGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::MappedRwLockReadGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MappedRwLockWriteGuard.html\" title=\"struct lock_api::MappedRwLockWriteGuard\">MappedRwLockWriteGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::MappedRwLockWriteGuard"]}];
implementors["log"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.Record.html\" title=\"struct log::Record\">Record</a>&lt;'a&gt;","synthetic":true,"types":["log::Record"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.RecordBuilder.html\" title=\"struct log::RecordBuilder\">RecordBuilder</a>&lt;'a&gt;","synthetic":true,"types":["log::RecordBuilder"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.Metadata.html\" title=\"struct log::Metadata\">Metadata</a>&lt;'a&gt;","synthetic":true,"types":["log::Metadata"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.MetadataBuilder.html\" title=\"struct log::MetadataBuilder\">MetadataBuilder</a>&lt;'a&gt;","synthetic":true,"types":["log::MetadataBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"log/struct.SetLoggerError.html\" title=\"struct log::SetLoggerError\">SetLoggerError</a>","synthetic":true,"types":["log::SetLoggerError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"log/struct.ParseLevelError.html\" title=\"struct log::ParseLevelError\">ParseLevelError</a>","synthetic":true,"types":["log::ParseLevelError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"log/enum.Level.html\" title=\"enum log::Level\">Level</a>","synthetic":true,"types":["log::Level"]},{"text":"impl Freeze for <a class=\"enum\" href=\"log/enum.LevelFilter.html\" title=\"enum log::LevelFilter\">LevelFilter</a>","synthetic":true,"types":["log::LevelFilter"]}];
implementors["lru_cache"] = [{"text":"impl&lt;K, V, S&gt; Freeze for <a class=\"struct\" href=\"lru_cache/struct.LruCache.html\" title=\"struct lru_cache::LruCache\">LruCache</a>&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["lru_cache::LruCache"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"lru_cache/struct.IntoIter.html\" title=\"struct lru_cache::IntoIter\">IntoIter</a>&lt;K, V&gt;","synthetic":true,"types":["lru_cache::IntoIter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"lru_cache/struct.Iter.html\" title=\"struct lru_cache::Iter\">Iter</a>&lt;'a, K, V&gt;","synthetic":true,"types":["lru_cache::Iter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"lru_cache/struct.IterMut.html\" title=\"struct lru_cache::IterMut\">IterMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["lru_cache::IterMut"]}];
implementors["md5"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"md5/struct.Digest.html\" title=\"struct md5::Digest\">Digest</a>","synthetic":true,"types":["md5::Digest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"md5/struct.Context.html\" title=\"struct md5::Context\">Context</a>","synthetic":true,"types":["md5::Context"]}];
implementors["memchr"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"memchr/struct.Memchr.html\" title=\"struct memchr::Memchr\">Memchr</a>&lt;'a&gt;","synthetic":true,"types":["memchr::iter::Memchr"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"memchr/struct.Memchr2.html\" title=\"struct memchr::Memchr2\">Memchr2</a>&lt;'a&gt;","synthetic":true,"types":["memchr::iter::Memchr2"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"memchr/struct.Memchr3.html\" title=\"struct memchr::Memchr3\">Memchr3</a>&lt;'a&gt;","synthetic":true,"types":["memchr::iter::Memchr3"]}];
implementors["mime"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"mime/struct.Mime.html\" title=\"struct mime::Mime\">Mime</a>","synthetic":true,"types":["mime::Mime"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"mime/struct.Name.html\" title=\"struct mime::Name\">Name</a>&lt;'a&gt;","synthetic":true,"types":["mime::Name"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mime/struct.FromStrError.html\" title=\"struct mime::FromStrError\">FromStrError</a>","synthetic":true,"types":["mime::FromStrError"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"mime/struct.Params.html\" title=\"struct mime::Params\">Params</a>&lt;'a&gt;","synthetic":true,"types":["mime::Params"]}];
implementors["mime_guess"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"mime_guess/struct.MimeGuess.html\" title=\"struct mime_guess::MimeGuess\">MimeGuess</a>","synthetic":true,"types":["mime_guess::MimeGuess"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mime_guess/struct.Iter.html\" title=\"struct mime_guess::Iter\">Iter</a>","synthetic":true,"types":["mime_guess::Iter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mime_guess/struct.IterRaw.html\" title=\"struct mime_guess::IterRaw\">IterRaw</a>","synthetic":true,"types":["mime_guess::IterRaw"]}];
implementors["miniz_oxide"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"miniz_oxide/struct.StreamResult.html\" title=\"struct miniz_oxide::StreamResult\">StreamResult</a>","synthetic":true,"types":["miniz_oxide::StreamResult"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/enum.MZFlush.html\" title=\"enum miniz_oxide::MZFlush\">MZFlush</a>","synthetic":true,"types":["miniz_oxide::MZFlush"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/enum.MZStatus.html\" title=\"enum miniz_oxide::MZStatus\">MZStatus</a>","synthetic":true,"types":["miniz_oxide::MZStatus"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/enum.MZError.html\" title=\"enum miniz_oxide::MZError\">MZError</a>","synthetic":true,"types":["miniz_oxide::MZError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/enum.DataFormat.html\" title=\"enum miniz_oxide::DataFormat\">DataFormat</a>","synthetic":true,"types":["miniz_oxide::DataFormat"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/deflate/enum.CompressionLevel.html\" title=\"enum miniz_oxide::deflate::CompressionLevel\">CompressionLevel</a>","synthetic":true,"types":["miniz_oxide::deflate::CompressionLevel"]},{"text":"impl Freeze for <a class=\"struct\" href=\"miniz_oxide/deflate/core/struct.CompressorOxide.html\" title=\"struct miniz_oxide::deflate::core::CompressorOxide\">CompressorOxide</a>","synthetic":true,"types":["miniz_oxide::deflate::core::CompressorOxide"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"miniz_oxide/deflate/core/struct.CallbackFunc.html\" title=\"struct miniz_oxide::deflate::core::CallbackFunc\">CallbackFunc</a>&lt;'a&gt;","synthetic":true,"types":["miniz_oxide::deflate::core::CallbackFunc"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/deflate/core/enum.CompressionStrategy.html\" title=\"enum miniz_oxide::deflate::core::CompressionStrategy\">CompressionStrategy</a>","synthetic":true,"types":["miniz_oxide::deflate::core::CompressionStrategy"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/deflate/core/enum.TDEFLFlush.html\" title=\"enum miniz_oxide::deflate::core::TDEFLFlush\">TDEFLFlush</a>","synthetic":true,"types":["miniz_oxide::deflate::core::TDEFLFlush"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/deflate/core/enum.TDEFLStatus.html\" title=\"enum miniz_oxide::deflate::core::TDEFLStatus\">TDEFLStatus</a>","synthetic":true,"types":["miniz_oxide::deflate::core::TDEFLStatus"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/inflate/enum.TINFLStatus.html\" title=\"enum miniz_oxide::inflate::TINFLStatus\">TINFLStatus</a>","synthetic":true,"types":["miniz_oxide::inflate::TINFLStatus"]},{"text":"impl Freeze for <a class=\"struct\" href=\"miniz_oxide/inflate/core/struct.DecompressorOxide.html\" title=\"struct miniz_oxide::inflate::core::DecompressorOxide\">DecompressorOxide</a>","synthetic":true,"types":["miniz_oxide::inflate::core::DecompressorOxide"]},{"text":"impl Freeze for <a class=\"struct\" href=\"miniz_oxide/inflate/stream/struct.InflateState.html\" title=\"struct miniz_oxide::inflate::stream::InflateState\">InflateState</a>","synthetic":true,"types":["miniz_oxide::inflate::stream::InflateState"]}];
implementors["mio"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/struct.Poll.html\" title=\"struct mio::Poll\">Poll</a>","synthetic":true,"types":["mio::poll::Poll"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/struct.Registration.html\" title=\"struct mio::Registration\">Registration</a>","synthetic":true,"types":["mio::poll::Registration"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/struct.SetReadiness.html\" title=\"struct mio::SetReadiness\">SetReadiness</a>","synthetic":true,"types":["mio::poll::SetReadiness"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/struct.PollOpt.html\" title=\"struct mio::PollOpt\">PollOpt</a>","synthetic":true,"types":["mio::event_imp::PollOpt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/struct.Ready.html\" title=\"struct mio::Ready\">Ready</a>","synthetic":true,"types":["mio::event_imp::Ready"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/struct.Token.html\" title=\"struct mio::Token\">Token</a>","synthetic":true,"types":["mio::token::Token"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/struct.Events.html\" title=\"struct mio::Events\">Events</a>","synthetic":true,"types":["mio::poll::Events"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/event/struct.Event.html\" title=\"struct mio::event::Event\">Event</a>","synthetic":true,"types":["mio::event_imp::Event"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"mio/event/struct.Iter.html\" title=\"struct mio::event::Iter\">Iter</a>&lt;'a&gt;","synthetic":true,"types":["mio::poll::Iter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"mio/unix/struct.EventedFd.html\" title=\"struct mio::unix::EventedFd\">EventedFd</a>&lt;'a&gt;","synthetic":true,"types":["mio::sys::unix::eventedfd::EventedFd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/unix/struct.UnixReady.html\" title=\"struct mio::unix::UnixReady\">UnixReady</a>","synthetic":true,"types":["mio::sys::unix::ready::UnixReady"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.TcpListener.html\" title=\"struct mio::net::TcpListener\">TcpListener</a>","synthetic":true,"types":["mio::net::tcp::TcpListener"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.TcpStream.html\" title=\"struct mio::net::TcpStream\">TcpStream</a>","synthetic":true,"types":["mio::net::tcp::TcpStream"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.UdpSocket.html\" title=\"struct mio::net::UdpSocket\">UdpSocket</a>","synthetic":true,"types":["mio::net::udp::UdpSocket"]}];
implementors["mio_uds"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"mio_uds/struct.UnixStream.html\" title=\"struct mio_uds::UnixStream\">UnixStream</a>","synthetic":true,"types":["mio_uds::stream::UnixStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio_uds/struct.UnixListener.html\" title=\"struct mio_uds::UnixListener\">UnixListener</a>","synthetic":true,"types":["mio_uds::listener::UnixListener"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio_uds/struct.UnixDatagram.html\" title=\"struct mio_uds::UnixDatagram\">UnixDatagram</a>","synthetic":true,"types":["mio_uds::datagram::UnixDatagram"]}];
implementors["net2"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"net2/struct.TcpBuilder.html\" title=\"struct net2::TcpBuilder\">TcpBuilder</a>","synthetic":true,"types":["net2::tcp::TcpBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"net2/struct.UdpBuilder.html\" title=\"struct net2::UdpBuilder\">UdpBuilder</a>","synthetic":true,"types":["net2::udp::UdpBuilder"]}];
implementors["nodrop"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nodrop/struct.NoDrop.html\" title=\"struct nodrop::NoDrop\">NoDrop</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nodrop::imp::NoDrop"]}];
implementors["nom"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"nom/enum.CompareResult.html\" title=\"enum nom::CompareResult\">CompareResult</a>","synthetic":true,"types":["nom::traits::CompareResult"]},{"text":"impl Freeze for <a class=\"enum\" href=\"nom/enum.Needed.html\" title=\"enum nom::Needed\">Needed</a>","synthetic":true,"types":["nom::internal::Needed"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"enum\" href=\"nom/enum.Err.html\" title=\"enum nom::Err\">Err</a>&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":["nom::internal::Err"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"nom/error/struct.VerboseError.html\" title=\"struct nom::error::VerboseError\">VerboseError</a>&lt;I&gt;","synthetic":true,"types":["nom::error::VerboseError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"nom/error/enum.VerboseErrorKind.html\" title=\"enum nom::error::VerboseErrorKind\">VerboseErrorKind</a>","synthetic":true,"types":["nom::error::VerboseErrorKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"nom/error/enum.ErrorKind.html\" title=\"enum nom::error::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["nom::error::ErrorKind"]},{"text":"impl&lt;I, E, F&gt; Freeze for <a class=\"struct\" href=\"nom/combinator/struct.ParserIterator.html\" title=\"struct nom::combinator::ParserIterator\">ParserIterator</a>&lt;I, E, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["nom::combinator::ParserIterator"]},{"text":"impl Freeze for <a class=\"enum\" href=\"nom/number/enum.Endianness.html\" title=\"enum nom::number::Endianness\">Endianness</a>","synthetic":true,"types":["nom::number::Endianness"]}];
implementors["num_integer"] = [{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"num_integer/struct.ExtendedGcd.html\" title=\"struct num_integer::ExtendedGcd\">ExtendedGcd</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["num_integer::ExtendedGcd"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"num_integer/struct.IterBinomial.html\" title=\"struct num_integer::IterBinomial\">IterBinomial</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["num_integer::IterBinomial"]}];
implementors["num_traits"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"num_traits/struct.ParseFloatError.html\" title=\"struct num_traits::ParseFloatError\">ParseFloatError</a>","synthetic":true,"types":["num_traits::ParseFloatError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"num_traits/enum.FloatErrorKind.html\" title=\"enum num_traits::FloatErrorKind\">FloatErrorKind</a>","synthetic":true,"types":["num_traits::FloatErrorKind"]}];
implementors["os_type"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"os_type/struct.OSInformation.html\" title=\"struct os_type::OSInformation\">OSInformation</a>","synthetic":true,"types":["os_type::OSInformation"]},{"text":"impl Freeze for <a class=\"enum\" href=\"os_type/enum.OSType.html\" title=\"enum os_type::OSType\">OSType</a>","synthetic":true,"types":["os_type::OSType"]}];
implementors["parking_lot"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"parking_lot/struct.Condvar.html\" title=\"struct parking_lot::Condvar\">Condvar</a>","synthetic":true,"types":["parking_lot::condvar::Condvar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"parking_lot/struct.WaitTimeoutResult.html\" title=\"struct parking_lot::WaitTimeoutResult\">WaitTimeoutResult</a>","synthetic":true,"types":["parking_lot::condvar::WaitTimeoutResult"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"parking_lot/struct.Once.html\" title=\"struct parking_lot::Once\">Once</a>","synthetic":true,"types":["parking_lot::once::Once"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"parking_lot/struct.RawMutex.html\" title=\"struct parking_lot::RawMutex\">RawMutex</a>","synthetic":true,"types":["parking_lot::raw_mutex::RawMutex"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"parking_lot/struct.RawRwLock.html\" title=\"struct parking_lot::RawRwLock\">RawRwLock</a>","synthetic":true,"types":["parking_lot::raw_rwlock::RawRwLock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"parking_lot/struct.RawThreadId.html\" title=\"struct parking_lot::RawThreadId\">RawThreadId</a>","synthetic":true,"types":["parking_lot::remutex::RawThreadId"]},{"text":"impl Freeze for <a class=\"enum\" href=\"parking_lot/enum.OnceState.html\" title=\"enum parking_lot::OnceState\">OnceState</a>","synthetic":true,"types":["parking_lot::once::OnceState"]}];
implementors["parking_lot_core"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"parking_lot_core/struct.ParkToken.html\" title=\"struct parking_lot_core::ParkToken\">ParkToken</a>","synthetic":true,"types":["parking_lot_core::parking_lot::ParkToken"]},{"text":"impl Freeze for <a class=\"struct\" href=\"parking_lot_core/struct.UnparkResult.html\" title=\"struct parking_lot_core::UnparkResult\">UnparkResult</a>","synthetic":true,"types":["parking_lot_core::parking_lot::UnparkResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"parking_lot_core/struct.UnparkToken.html\" title=\"struct parking_lot_core::UnparkToken\">UnparkToken</a>","synthetic":true,"types":["parking_lot_core::parking_lot::UnparkToken"]},{"text":"impl Freeze for <a class=\"struct\" href=\"parking_lot_core/struct.SpinWait.html\" title=\"struct parking_lot_core::SpinWait\">SpinWait</a>","synthetic":true,"types":["parking_lot_core::spinwait::SpinWait"]},{"text":"impl Freeze for <a class=\"enum\" href=\"parking_lot_core/enum.FilterOp.html\" title=\"enum parking_lot_core::FilterOp\">FilterOp</a>","synthetic":true,"types":["parking_lot_core::parking_lot::FilterOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"parking_lot_core/enum.ParkResult.html\" title=\"enum parking_lot_core::ParkResult\">ParkResult</a>","synthetic":true,"types":["parking_lot_core::parking_lot::ParkResult"]},{"text":"impl Freeze for <a class=\"enum\" href=\"parking_lot_core/enum.RequeueOp.html\" title=\"enum parking_lot_core::RequeueOp\">RequeueOp</a>","synthetic":true,"types":["parking_lot_core::parking_lot::RequeueOp"]}];
implementors["percent_encoding"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"percent_encoding/struct.AsciiSet.html\" title=\"struct percent_encoding::AsciiSet\">AsciiSet</a>","synthetic":true,"types":["percent_encoding::AsciiSet"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"percent_encoding/struct.PercentEncode.html\" title=\"struct percent_encoding::PercentEncode\">PercentEncode</a>&lt;'a&gt;","synthetic":true,"types":["percent_encoding::PercentEncode"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"percent_encoding/struct.PercentDecode.html\" title=\"struct percent_encoding::PercentDecode\">PercentDecode</a>&lt;'a&gt;","synthetic":true,"types":["percent_encoding::PercentDecode"]}];
implementors["phf"] = [{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"phf/map/struct.Map.html\" title=\"struct phf::map::Map\">Map</a>&lt;K, V&gt;","synthetic":true,"types":["phf::map::Map"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"phf/set/struct.Set.html\" title=\"struct phf::set::Set\">Set</a>&lt;T&gt;","synthetic":true,"types":["phf::set::Set"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"phf/map/struct.Entries.html\" title=\"struct phf::map::Entries\">Entries</a>&lt;'a, K, V&gt;","synthetic":true,"types":["phf::map::Entries"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"phf/map/struct.Keys.html\" title=\"struct phf::map::Keys\">Keys</a>&lt;'a, K, V&gt;","synthetic":true,"types":["phf::map::Keys"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"phf/map/struct.Values.html\" title=\"struct phf::map::Values\">Values</a>&lt;'a, K, V&gt;","synthetic":true,"types":["phf::map::Values"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"phf/set/struct.Iter.html\" title=\"struct phf::set::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["phf::set::Iter"]}];
implementors["phf_shared"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"phf_shared/struct.Hashes.html\" title=\"struct phf_shared::Hashes\">Hashes</a>","synthetic":true,"types":["phf_shared::Hashes"]}];
implementors["postgres_protocol"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"postgres_protocol/enum.IsNull.html\" title=\"enum postgres_protocol::IsNull\">IsNull</a>","synthetic":true,"types":["postgres_protocol::IsNull"]},{"text":"impl Freeze for <a class=\"struct\" href=\"postgres_protocol/authentication/sasl/struct.ChannelBinding.html\" title=\"struct postgres_protocol::authentication::sasl::ChannelBinding\">ChannelBinding</a>","synthetic":true,"types":["postgres_protocol::authentication::sasl::ChannelBinding"]},{"text":"impl Freeze for <a class=\"struct\" href=\"postgres_protocol/authentication/sasl/struct.ScramSha256.html\" title=\"struct postgres_protocol::authentication::sasl::ScramSha256\">ScramSha256</a>","synthetic":true,"types":["postgres_protocol::authentication::sasl::ScramSha256"]},{"text":"impl Freeze for <a class=\"struct\" href=\"postgres_protocol/message/backend/struct.Header.html\" title=\"struct postgres_protocol::message::backend::Header\">Header</a>","synthetic":true,"types":["postgres_protocol::message::backend::Header"]},{"text":"impl Freeze for <a class=\"struct\" href=\"postgres_protocol/message/backend/struct.AuthenticationMd5PasswordBody.html\" title=\"struct postgres_protocol::message::backend::AuthenticationMd5PasswordBody\">AuthenticationMd5PasswordBody</a>","synthetic":true,"types":["postgres_protocol::message::backend::AuthenticationMd5PasswordBody"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"postgres_protocol/message/backend/struct.AuthenticationGssContinueBody.html\" title=\"struct postgres_protocol::message::backend::AuthenticationGssContinueBody\">AuthenticationGssContinueBody</a>","synthetic":true,"types":["postgres_protocol::message::backend::AuthenticationGssContinueBody"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"postgres_protocol/message/backend/struct.AuthenticationSaslBody.html\" title=\"struct postgres_protocol::message::backend::AuthenticationSaslBody\">AuthenticationSaslBody</a>","synthetic":true,"types":["postgres_protocol::message::backend::AuthenticationSaslBody"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"postgres_protocol/message/backend/struct.SaslMechanisms.html\" title=\"struct postgres_protocol::message::backend::SaslMechanisms\">SaslMechanisms</a>&lt;'a&gt;","synthetic":true,"types":["postgres_protocol::message::backend::SaslMechanisms"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"postgres_protocol/message/backend/struct.AuthenticationSaslContinueBody.html\" title=\"struct postgres_protocol::message::backend::AuthenticationSaslContinueBody\">AuthenticationSaslContinueBody</a>","synthetic":true,"types":["postgres_protocol::message::backend::AuthenticationSaslContinueBody"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"postgres_protocol/message/backend/struct.AuthenticationSaslFinalBody.html\" title=\"struct postgres_protocol::message::backend::AuthenticationSaslFinalBody\">AuthenticationSaslFinalBody</a>","synthetic":true,"types":["postgres_protocol::message::backend::AuthenticationSaslFinalBody"]},{"text":"impl Freeze for <a class=\"struct\" href=\"postgres_protocol/message/backend/struct.BackendKeyDataBody.html\" title=\"struct postgres_protocol::message::backend::BackendKeyDataBody\">BackendKeyDataBody</a>","synthetic":true,"types":["postgres_protocol::message::backend::BackendKeyDataBody"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"postgres_protocol/message/backend/struct.CommandCompleteBody.html\" title=\"struct postgres_protocol::message::backend::CommandCompleteBody\">CommandCompleteBody</a>","synthetic":true,"types":["postgres_protocol::message::backend::CommandCompleteBody"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"postgres_protocol/message/backend/struct.CopyDataBody.html\" title=\"struct postgres_protocol::message::backend::CopyDataBody\">CopyDataBody</a>","synthetic":true,"types":["postgres_protocol::message::backend::CopyDataBody"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"postgres_protocol/message/backend/struct.CopyInResponseBody.html\" title=\"struct postgres_protocol::message::backend::CopyInResponseBody\">CopyInResponseBody</a>","synthetic":true,"types":["postgres_protocol::message::backend::CopyInResponseBody"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"postgres_protocol/message/backend/struct.ColumnFormats.html\" title=\"struct postgres_protocol::message::backend::ColumnFormats\">ColumnFormats</a>&lt;'a&gt;","synthetic":true,"types":["postgres_protocol::message::backend::ColumnFormats"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"postgres_protocol/message/backend/struct.CopyOutResponseBody.html\" title=\"struct postgres_protocol::message::backend::CopyOutResponseBody\">CopyOutResponseBody</a>","synthetic":true,"types":["postgres_protocol::message::backend::CopyOutResponseBody"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"postgres_protocol/message/backend/struct.DataRowBody.html\" title=\"struct postgres_protocol::message::backend::DataRowBody\">DataRowBody</a>","synthetic":true,"types":["postgres_protocol::message::backend::DataRowBody"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"postgres_protocol/message/backend/struct.DataRowRanges.html\" title=\"struct postgres_protocol::message::backend::DataRowRanges\">DataRowRanges</a>&lt;'a&gt;","synthetic":true,"types":["postgres_protocol::message::backend::DataRowRanges"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"postgres_protocol/message/backend/struct.ErrorResponseBody.html\" title=\"struct postgres_protocol::message::backend::ErrorResponseBody\">ErrorResponseBody</a>","synthetic":true,"types":["postgres_protocol::message::backend::ErrorResponseBody"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"postgres_protocol/message/backend/struct.ErrorFields.html\" title=\"struct postgres_protocol::message::backend::ErrorFields\">ErrorFields</a>&lt;'a&gt;","synthetic":true,"types":["postgres_protocol::message::backend::ErrorFields"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"postgres_protocol/message/backend/struct.ErrorField.html\" title=\"struct postgres_protocol::message::backend::ErrorField\">ErrorField</a>&lt;'a&gt;","synthetic":true,"types":["postgres_protocol::message::backend::ErrorField"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"postgres_protocol/message/backend/struct.NoticeResponseBody.html\" title=\"struct postgres_protocol::message::backend::NoticeResponseBody\">NoticeResponseBody</a>","synthetic":true,"types":["postgres_protocol::message::backend::NoticeResponseBody"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"postgres_protocol/message/backend/struct.NotificationResponseBody.html\" title=\"struct postgres_protocol::message::backend::NotificationResponseBody\">NotificationResponseBody</a>","synthetic":true,"types":["postgres_protocol::message::backend::NotificationResponseBody"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"postgres_protocol/message/backend/struct.ParameterDescriptionBody.html\" title=\"struct postgres_protocol::message::backend::ParameterDescriptionBody\">ParameterDescriptionBody</a>","synthetic":true,"types":["postgres_protocol::message::backend::ParameterDescriptionBody"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"postgres_protocol/message/backend/struct.Parameters.html\" title=\"struct postgres_protocol::message::backend::Parameters\">Parameters</a>&lt;'a&gt;","synthetic":true,"types":["postgres_protocol::message::backend::Parameters"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"postgres_protocol/message/backend/struct.ParameterStatusBody.html\" title=\"struct postgres_protocol::message::backend::ParameterStatusBody\">ParameterStatusBody</a>","synthetic":true,"types":["postgres_protocol::message::backend::ParameterStatusBody"]},{"text":"impl Freeze for <a class=\"struct\" href=\"postgres_protocol/message/backend/struct.ReadyForQueryBody.html\" title=\"struct postgres_protocol::message::backend::ReadyForQueryBody\">ReadyForQueryBody</a>","synthetic":true,"types":["postgres_protocol::message::backend::ReadyForQueryBody"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"postgres_protocol/message/backend/struct.RowDescriptionBody.html\" title=\"struct postgres_protocol::message::backend::RowDescriptionBody\">RowDescriptionBody</a>","synthetic":true,"types":["postgres_protocol::message::backend::RowDescriptionBody"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"postgres_protocol/message/backend/struct.Fields.html\" title=\"struct postgres_protocol::message::backend::Fields\">Fields</a>&lt;'a&gt;","synthetic":true,"types":["postgres_protocol::message::backend::Fields"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"postgres_protocol/message/backend/struct.Field.html\" title=\"struct postgres_protocol::message::backend::Field\">Field</a>&lt;'a&gt;","synthetic":true,"types":["postgres_protocol::message::backend::Field"]},{"text":"impl !Freeze for <a class=\"enum\" href=\"postgres_protocol/message/backend/enum.Message.html\" title=\"enum postgres_protocol::message::backend::Message\">Message</a>","synthetic":true,"types":["postgres_protocol::message::backend::Message"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"postgres_protocol/message/frontend/struct.CopyData.html\" title=\"struct postgres_protocol::message::frontend::CopyData\">CopyData</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["postgres_protocol::message::frontend::CopyData"]},{"text":"impl Freeze for <a class=\"enum\" href=\"postgres_protocol/message/frontend/enum.BindError.html\" title=\"enum postgres_protocol::message::frontend::BindError\">BindError</a>","synthetic":true,"types":["postgres_protocol::message::frontend::BindError"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"postgres_protocol/types/struct.HstoreEntries.html\" title=\"struct postgres_protocol::types::HstoreEntries\">HstoreEntries</a>&lt;'a&gt;","synthetic":true,"types":["postgres_protocol::types::HstoreEntries"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"postgres_protocol/types/struct.Varbit.html\" title=\"struct postgres_protocol::types::Varbit\">Varbit</a>&lt;'a&gt;","synthetic":true,"types":["postgres_protocol::types::Varbit"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"postgres_protocol/types/struct.Array.html\" title=\"struct postgres_protocol::types::Array\">Array</a>&lt;'a&gt;","synthetic":true,"types":["postgres_protocol::types::Array"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"postgres_protocol/types/struct.ArrayDimensions.html\" title=\"struct postgres_protocol::types::ArrayDimensions\">ArrayDimensions</a>&lt;'a&gt;","synthetic":true,"types":["postgres_protocol::types::ArrayDimensions"]},{"text":"impl Freeze for <a class=\"struct\" href=\"postgres_protocol/types/struct.ArrayDimension.html\" title=\"struct postgres_protocol::types::ArrayDimension\">ArrayDimension</a>","synthetic":true,"types":["postgres_protocol::types::ArrayDimension"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"postgres_protocol/types/struct.ArrayValues.html\" title=\"struct postgres_protocol::types::ArrayValues\">ArrayValues</a>&lt;'a&gt;","synthetic":true,"types":["postgres_protocol::types::ArrayValues"]},{"text":"impl Freeze for <a class=\"struct\" href=\"postgres_protocol/types/struct.Point.html\" title=\"struct postgres_protocol::types::Point\">Point</a>","synthetic":true,"types":["postgres_protocol::types::Point"]},{"text":"impl Freeze for <a class=\"struct\" href=\"postgres_protocol/types/struct.Box.html\" title=\"struct postgres_protocol::types::Box\">Box</a>","synthetic":true,"types":["postgres_protocol::types::Box"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"postgres_protocol/types/struct.Path.html\" title=\"struct postgres_protocol::types::Path\">Path</a>&lt;'a&gt;","synthetic":true,"types":["postgres_protocol::types::Path"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"postgres_protocol/types/struct.PathPoints.html\" title=\"struct postgres_protocol::types::PathPoints\">PathPoints</a>&lt;'a&gt;","synthetic":true,"types":["postgres_protocol::types::PathPoints"]},{"text":"impl Freeze for <a class=\"struct\" href=\"postgres_protocol/types/struct.Inet.html\" title=\"struct postgres_protocol::types::Inet\">Inet</a>","synthetic":true,"types":["postgres_protocol::types::Inet"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"postgres_protocol/types/enum.RangeBound.html\" title=\"enum postgres_protocol::types::RangeBound\">RangeBound</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["postgres_protocol::types::RangeBound"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"postgres_protocol/types/enum.Range.html\" title=\"enum postgres_protocol::types::Range\">Range</a>&lt;'a&gt;","synthetic":true,"types":["postgres_protocol::types::Range"]}];
implementors["postgres_types"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"postgres_types/struct.Json.html\" title=\"struct postgres_types::Json\">Json</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["postgres_types::serde_json_1::Json"]},{"text":"impl Freeze for <a class=\"struct\" href=\"postgres_types/struct.Type.html\" title=\"struct postgres_types::Type\">Type</a>","synthetic":true,"types":["postgres_types::Type"]},{"text":"impl Freeze for <a class=\"struct\" href=\"postgres_types/struct.Field.html\" title=\"struct postgres_types::Field\">Field</a>","synthetic":true,"types":["postgres_types::Field"]},{"text":"impl Freeze for <a class=\"struct\" href=\"postgres_types/struct.WasNull.html\" title=\"struct postgres_types::WasNull\">WasNull</a>","synthetic":true,"types":["postgres_types::WasNull"]},{"text":"impl Freeze for <a class=\"struct\" href=\"postgres_types/struct.WrongType.html\" title=\"struct postgres_types::WrongType\">WrongType</a>","synthetic":true,"types":["postgres_types::WrongType"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"postgres_types/enum.Date.html\" title=\"enum postgres_types::Date\">Date</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["postgres_types::special::Date"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"postgres_types/enum.Timestamp.html\" title=\"enum postgres_types::Timestamp\">Timestamp</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["postgres_types::special::Timestamp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"postgres_types/enum.Kind.html\" title=\"enum postgres_types::Kind\">Kind</a>","synthetic":true,"types":["postgres_types::Kind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"postgres_types/enum.IsNull.html\" title=\"enum postgres_types::IsNull\">IsNull</a>","synthetic":true,"types":["postgres_types::IsNull"]}];
implementors["ppv_lite86"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesS3.html\" title=\"struct ppv_lite86::x86_64::YesS3\">YesS3</a>","synthetic":true,"types":["ppv_lite86::x86_64::YesS3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoS3.html\" title=\"struct ppv_lite86::x86_64::NoS3\">NoS3</a>","synthetic":true,"types":["ppv_lite86::x86_64::NoS3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesS4.html\" title=\"struct ppv_lite86::x86_64::YesS4\">YesS4</a>","synthetic":true,"types":["ppv_lite86::x86_64::YesS4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoS4.html\" title=\"struct ppv_lite86::x86_64::NoS4\">NoS4</a>","synthetic":true,"types":["ppv_lite86::x86_64::NoS4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesA1.html\" title=\"struct ppv_lite86::x86_64::YesA1\">YesA1</a>","synthetic":true,"types":["ppv_lite86::x86_64::YesA1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoA1.html\" title=\"struct ppv_lite86::x86_64::NoA1\">NoA1</a>","synthetic":true,"types":["ppv_lite86::x86_64::NoA1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesA2.html\" title=\"struct ppv_lite86::x86_64::YesA2\">YesA2</a>","synthetic":true,"types":["ppv_lite86::x86_64::YesA2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoA2.html\" title=\"struct ppv_lite86::x86_64::NoA2\">NoA2</a>","synthetic":true,"types":["ppv_lite86::x86_64::NoA2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesNI.html\" title=\"struct ppv_lite86::x86_64::YesNI\">YesNI</a>","synthetic":true,"types":["ppv_lite86::x86_64::YesNI"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoNI.html\" title=\"struct ppv_lite86::x86_64::NoNI\">NoNI</a>","synthetic":true,"types":["ppv_lite86::x86_64::NoNI"]},{"text":"impl&lt;S3, S4, NI&gt; Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.SseMachine.html\" title=\"struct ppv_lite86::x86_64::SseMachine\">SseMachine</a>&lt;S3, S4, NI&gt;","synthetic":true,"types":["ppv_lite86::x86_64::SseMachine"]},{"text":"impl&lt;NI&gt; Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.Avx2Machine.html\" title=\"struct ppv_lite86::x86_64::Avx2Machine\">Avx2Machine</a>&lt;NI&gt;","synthetic":true,"types":["ppv_lite86::x86_64::Avx2Machine"]},{"text":"impl Freeze for <a class=\"union\" href=\"ppv_lite86/x86_64/union.vec128_storage.html\" title=\"union ppv_lite86::x86_64::vec128_storage\">vec128_storage</a>","synthetic":true,"types":["ppv_lite86::x86_64::vec128_storage"]},{"text":"impl Freeze for <a class=\"union\" href=\"ppv_lite86/x86_64/union.vec256_storage.html\" title=\"union ppv_lite86::x86_64::vec256_storage\">vec256_storage</a>","synthetic":true,"types":["ppv_lite86::x86_64::vec256_storage"]},{"text":"impl Freeze for <a class=\"union\" href=\"ppv_lite86/x86_64/union.vec512_storage.html\" title=\"union ppv_lite86::x86_64::vec512_storage\">vec512_storage</a>","synthetic":true,"types":["ppv_lite86::x86_64::vec512_storage"]}];
implementors["proc_macro2"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.TokenStream.html\" title=\"struct proc_macro2::TokenStream\">TokenStream</a>","synthetic":true,"types":["proc_macro2::TokenStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.LexError.html\" title=\"struct proc_macro2::LexError\">LexError</a>","synthetic":true,"types":["proc_macro2::LexError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Span.html\" title=\"struct proc_macro2::Span\">Span</a>","synthetic":true,"types":["proc_macro2::Span"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Group.html\" title=\"struct proc_macro2::Group\">Group</a>","synthetic":true,"types":["proc_macro2::Group"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Punct.html\" title=\"struct proc_macro2::Punct\">Punct</a>","synthetic":true,"types":["proc_macro2::Punct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Ident.html\" title=\"struct proc_macro2::Ident\">Ident</a>","synthetic":true,"types":["proc_macro2::Ident"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Literal.html\" title=\"struct proc_macro2::Literal\">Literal</a>","synthetic":true,"types":["proc_macro2::Literal"]},{"text":"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.TokenTree.html\" title=\"enum proc_macro2::TokenTree\">TokenTree</a>","synthetic":true,"types":["proc_macro2::TokenTree"]},{"text":"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.Delimiter.html\" title=\"enum proc_macro2::Delimiter\">Delimiter</a>","synthetic":true,"types":["proc_macro2::Delimiter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.Spacing.html\" title=\"enum proc_macro2::Spacing\">Spacing</a>","synthetic":true,"types":["proc_macro2::Spacing"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/token_stream/struct.IntoIter.html\" title=\"struct proc_macro2::token_stream::IntoIter\">IntoIter</a>","synthetic":true,"types":["proc_macro2::token_stream::IntoIter"]}];
implementors["quick_error"] = [{"text":"impl&lt;X, E&gt; Freeze for <a class=\"struct\" href=\"quick_error/struct.Context.html\" title=\"struct quick_error::Context\">Context</a>&lt;X, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["quick_error::Context"]}];
implementors["rand"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Bernoulli.html\" title=\"struct rand::distributions::Bernoulli\">Bernoulli</a>","synthetic":true,"types":["rand::distributions::bernoulli::Bernoulli"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Open01.html\" title=\"struct rand::distributions::Open01\">Open01</a>","synthetic":true,"types":["rand::distributions::float::Open01"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.OpenClosed01.html\" title=\"struct rand::distributions::OpenClosed01\">OpenClosed01</a>","synthetic":true,"types":["rand::distributions::float::OpenClosed01"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Alphanumeric.html\" title=\"struct rand::distributions::Alphanumeric\">Alphanumeric</a>","synthetic":true,"types":["rand::distributions::other::Alphanumeric"]},{"text":"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/uniform/struct.Uniform.html\" title=\"struct rand::distributions::uniform::Uniform\">Uniform</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as <a class=\"trait\" href=\"rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait rand::distributions::uniform::SampleUniform\">SampleUniform</a>&gt;::<a class=\"type\" href=\"rand/distributions/uniform/trait.SampleUniform.html#associatedtype.Sampler\" title=\"type rand::distributions::uniform::SampleUniform::Sampler\">Sampler</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::uniform::Uniform"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Binomial.html\" title=\"struct rand::distributions::Binomial\">Binomial</a>","synthetic":true,"types":["rand::distributions::binomial::Binomial"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Cauchy.html\" title=\"struct rand::distributions::Cauchy\">Cauchy</a>","synthetic":true,"types":["rand::distributions::cauchy::Cauchy"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Dirichlet.html\" title=\"struct rand::distributions::Dirichlet\">Dirichlet</a>","synthetic":true,"types":["rand::distributions::dirichlet::Dirichlet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Exp.html\" title=\"struct rand::distributions::Exp\">Exp</a>","synthetic":true,"types":["rand::distributions::exponential::Exp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Exp1.html\" title=\"struct rand::distributions::Exp1\">Exp1</a>","synthetic":true,"types":["rand::distributions::exponential::Exp1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Beta.html\" title=\"struct rand::distributions::Beta\">Beta</a>","synthetic":true,"types":["rand::distributions::gamma::Beta"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.ChiSquared.html\" title=\"struct rand::distributions::ChiSquared\">ChiSquared</a>","synthetic":true,"types":["rand::distributions::gamma::ChiSquared"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.FisherF.html\" title=\"struct rand::distributions::FisherF\">FisherF</a>","synthetic":true,"types":["rand::distributions::gamma::FisherF"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Gamma.html\" title=\"struct rand::distributions::Gamma\">Gamma</a>","synthetic":true,"types":["rand::distributions::gamma::Gamma"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.StudentT.html\" title=\"struct rand::distributions::StudentT\">StudentT</a>","synthetic":true,"types":["rand::distributions::gamma::StudentT"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.LogNormal.html\" title=\"struct rand::distributions::LogNormal\">LogNormal</a>","synthetic":true,"types":["rand::distributions::normal::LogNormal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Normal.html\" title=\"struct rand::distributions::Normal\">Normal</a>","synthetic":true,"types":["rand::distributions::normal::Normal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.StandardNormal.html\" title=\"struct rand::distributions::StandardNormal\">StandardNormal</a>","synthetic":true,"types":["rand::distributions::normal::StandardNormal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Pareto.html\" title=\"struct rand::distributions::Pareto\">Pareto</a>","synthetic":true,"types":["rand::distributions::pareto::Pareto"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Poisson.html\" title=\"struct rand::distributions::Poisson\">Poisson</a>","synthetic":true,"types":["rand::distributions::poisson::Poisson"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Triangular.html\" title=\"struct rand::distributions::Triangular\">Triangular</a>","synthetic":true,"types":["rand::distributions::triangular::Triangular"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.UnitCircle.html\" title=\"struct rand::distributions::UnitCircle\">UnitCircle</a>","synthetic":true,"types":["rand::distributions::unit_circle::UnitCircle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.UnitSphereSurface.html\" title=\"struct rand::distributions::UnitSphereSurface\">UnitSphereSurface</a>","synthetic":true,"types":["rand::distributions::unit_sphere::UnitSphereSurface"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Weibull.html\" title=\"struct rand::distributions::Weibull\">Weibull</a>","synthetic":true,"types":["rand::distributions::weibull::Weibull"]},{"text":"impl&lt;D, R, T&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/struct.DistIter.html\" title=\"struct rand::distributions::DistIter\">DistIter</a>&lt;D, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::DistIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Standard.html\" title=\"struct rand::distributions::Standard\">Standard</a>","synthetic":true,"types":["rand::distributions::Standard"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand/distributions/enum.BernoulliError.html\" title=\"enum rand::distributions::BernoulliError\">BernoulliError</a>","synthetic":true,"types":["rand::distributions::bernoulli::BernoulliError"]},{"text":"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/uniform/struct.UniformInt.html\" title=\"struct rand::distributions::uniform::UniformInt\">UniformInt</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::uniform::UniformInt"]},{"text":"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/uniform/struct.UniformFloat.html\" title=\"struct rand::distributions::uniform::UniformFloat\">UniformFloat</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::uniform::UniformFloat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/uniform/struct.UniformDuration.html\" title=\"struct rand::distributions::uniform::UniformDuration\">UniformDuration</a>","synthetic":true,"types":["rand::distributions::uniform::UniformDuration"]},{"text":"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/weighted/struct.WeightedIndex.html\" title=\"struct rand::distributions::weighted::WeightedIndex\">WeightedIndex</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as <a class=\"trait\" href=\"rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait rand::distributions::uniform::SampleUniform\">SampleUniform</a>&gt;::<a class=\"type\" href=\"rand/distributions/uniform/trait.SampleUniform.html#associatedtype.Sampler\" title=\"type rand::distributions::uniform::SampleUniform::Sampler\">Sampler</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::weighted::WeightedIndex"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand/distributions/weighted/enum.WeightedError.html\" title=\"enum rand::distributions::weighted::WeightedError\">WeightedError</a>","synthetic":true,"types":["rand::distributions::weighted::WeightedError"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/weighted/alias_method/struct.WeightedIndex.html\" title=\"struct rand::distributions::weighted::alias_method::WeightedIndex\">WeightedIndex</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;W as <a class=\"trait\" href=\"rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait rand::distributions::uniform::SampleUniform\">SampleUniform</a>&gt;::<a class=\"type\" href=\"rand/distributions/uniform/trait.SampleUniform.html#associatedtype.Sampler\" title=\"type rand::distributions::uniform::SampleUniform::Sampler\">Sampler</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::weighted::alias_method::WeightedIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/struct.EntropyRng.html\" title=\"struct rand::rngs::EntropyRng\">EntropyRng</a>","synthetic":true,"types":["rand::rngs::entropy::EntropyRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/struct.StdRng.html\" title=\"struct rand::rngs::StdRng\">StdRng</a>","synthetic":true,"types":["rand::rngs::std::StdRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/struct.ThreadRng.html\" title=\"struct rand::rngs::ThreadRng\">ThreadRng</a>","synthetic":true,"types":["rand::rngs::thread::ThreadRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/adapter/struct.ReadError.html\" title=\"struct rand::rngs::adapter::ReadError\">ReadError</a>","synthetic":true,"types":["rand::rngs::adapter::read::ReadError"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"rand/rngs/adapter/struct.ReadRng.html\" title=\"struct rand::rngs::adapter::ReadRng\">ReadRng</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::rngs::adapter::read::ReadRng"]},{"text":"impl&lt;R, Rsdr&gt; Freeze for <a class=\"struct\" href=\"rand/rngs/adapter/struct.ReseedingRng.html\" title=\"struct rand::rngs::adapter::ReseedingRng\">ReseedingRng</a>&lt;R, Rsdr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rsdr: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"rand_core/block/trait.BlockRngCore.html\" title=\"trait rand_core::block::BlockRngCore\">BlockRngCore</a>&gt;::<a class=\"type\" href=\"rand_core/block/trait.BlockRngCore.html#associatedtype.Results\" title=\"type rand_core::block::BlockRngCore::Results\">Results</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::rngs::adapter::reseeding::ReseedingRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/mock/struct.StepRng.html\" title=\"struct rand::rngs::mock::StepRng\">StepRng</a>","synthetic":true,"types":["rand::rngs::mock::StepRng"]},{"text":"impl&lt;'a, S:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, T&gt; Freeze for <a class=\"struct\" href=\"rand/seq/struct.SliceChooseIter.html\" title=\"struct rand::seq::SliceChooseIter\">SliceChooseIter</a>&lt;'a, S, T&gt;","synthetic":true,"types":["rand::seq::SliceChooseIter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand/seq/index/enum.IndexVec.html\" title=\"enum rand::seq::index::IndexVec\">IndexVec</a>","synthetic":true,"types":["rand::seq::index::IndexVec"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"rand/seq/index/enum.IndexVecIter.html\" title=\"enum rand::seq::index::IndexVecIter\">IndexVecIter</a>&lt;'a&gt;","synthetic":true,"types":["rand::seq::index::IndexVecIter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand/seq/index/enum.IndexVecIntoIter.html\" title=\"enum rand::seq::index::IndexVecIntoIter\">IndexVecIntoIter</a>","synthetic":true,"types":["rand::seq::index::IndexVecIntoIter"]}];
implementors["rand_chacha"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha12Core.html\" title=\"struct rand_chacha::ChaCha12Core\">ChaCha12Core</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha12Core"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha12Rng.html\" title=\"struct rand_chacha::ChaCha12Rng\">ChaCha12Rng</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha12Rng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha20Core.html\" title=\"struct rand_chacha::ChaCha20Core\">ChaCha20Core</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha20Core"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha20Rng.html\" title=\"struct rand_chacha::ChaCha20Rng\">ChaCha20Rng</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha20Rng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha8Core.html\" title=\"struct rand_chacha::ChaCha8Core\">ChaCha8Core</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha8Core"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha8Rng.html\" title=\"struct rand_chacha::ChaCha8Rng\">ChaCha8Rng</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha8Rng"]}];
implementors["rand_core"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"rand_core/struct.Error.html\" title=\"struct rand_core::Error\">Error</a>","synthetic":true,"types":["rand_core::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_core/struct.OsRng.html\" title=\"struct rand_core::OsRng\">OsRng</a>","synthetic":true,"types":["rand_core::os::OsRng"]},{"text":"impl&lt;R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"rand_core/block/struct.BlockRng.html\" title=\"struct rand_core::block::BlockRng\">BlockRng</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"rand_core/block/trait.BlockRngCore.html\" title=\"trait rand_core::block::BlockRngCore\">BlockRngCore</a>&gt;::<a class=\"type\" href=\"rand_core/block/trait.BlockRngCore.html#associatedtype.Results\" title=\"type rand_core::block::BlockRngCore::Results\">Results</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_core::block::BlockRng"]},{"text":"impl&lt;R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"rand_core/block/struct.BlockRng64.html\" title=\"struct rand_core::block::BlockRng64\">BlockRng64</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"rand_core/block/trait.BlockRngCore.html\" title=\"trait rand_core::block::BlockRngCore\">BlockRngCore</a>&gt;::<a class=\"type\" href=\"rand_core/block/trait.BlockRngCore.html#associatedtype.Results\" title=\"type rand_core::block::BlockRngCore::Results\">Results</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_core::block::BlockRng64"]}];
implementors["regex"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.RegexSetBuilder.html\" title=\"struct regex::RegexSetBuilder\">RegexSetBuilder</a>","synthetic":true,"types":["regex::re_builder::set_unicode::RegexSetBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.RegexBuilder.html\" title=\"struct regex::RegexBuilder\">RegexBuilder</a>","synthetic":true,"types":["regex::re_builder::unicode::RegexBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"regex/struct.RegexSet.html\" title=\"struct regex::RegexSet\">RegexSet</a>","synthetic":true,"types":["regex::re_set::unicode::RegexSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.SetMatches.html\" title=\"struct regex::SetMatches\">SetMatches</a>","synthetic":true,"types":["regex::re_set::unicode::SetMatches"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.SetMatchesIntoIter.html\" title=\"struct regex::SetMatchesIntoIter\">SetMatchesIntoIter</a>","synthetic":true,"types":["regex::re_set::unicode::SetMatchesIntoIter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"regex/struct.SetMatchesIter.html\" title=\"struct regex::SetMatchesIter\">SetMatchesIter</a>&lt;'a&gt;","synthetic":true,"types":["regex::re_set::unicode::SetMatchesIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.CaptureLocations.html\" title=\"struct regex::CaptureLocations\">CaptureLocations</a>","synthetic":true,"types":["regex::re_unicode::CaptureLocations"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.CaptureMatches.html\" title=\"struct regex::CaptureMatches\">CaptureMatches</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_unicode::CaptureMatches"]},{"text":"impl&lt;'r&gt; Freeze for <a class=\"struct\" href=\"regex/struct.CaptureNames.html\" title=\"struct regex::CaptureNames\">CaptureNames</a>&lt;'r&gt;","synthetic":true,"types":["regex::re_unicode::CaptureNames"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/struct.Captures.html\" title=\"struct regex::Captures\">Captures</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_unicode::Captures"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/struct.Match.html\" title=\"struct regex::Match\">Match</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_unicode::Match"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.Matches.html\" title=\"struct regex::Matches\">Matches</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_unicode::Matches"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/struct.NoExpand.html\" title=\"struct regex::NoExpand\">NoExpand</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_unicode::NoExpand"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"regex/struct.Regex.html\" title=\"struct regex::Regex\">Regex</a>","synthetic":true,"types":["regex::re_unicode::Regex"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"regex/struct.ReplacerRef.html\" title=\"struct regex::ReplacerRef\">ReplacerRef</a>&lt;'a, R&gt;","synthetic":true,"types":["regex::re_unicode::ReplacerRef"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.Split.html\" title=\"struct regex::Split\">Split</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_unicode::Split"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.SplitN.html\" title=\"struct regex::SplitN\">SplitN</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_unicode::SplitN"]},{"text":"impl&lt;'c, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.SubCaptureMatches.html\" title=\"struct regex::SubCaptureMatches\">SubCaptureMatches</a>&lt;'c, 't&gt;","synthetic":true,"types":["regex::re_unicode::SubCaptureMatches"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex/enum.Error.html\" title=\"enum regex::Error\">Error</a>","synthetic":true,"types":["regex::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.RegexBuilder.html\" title=\"struct regex::bytes::RegexBuilder\">RegexBuilder</a>","synthetic":true,"types":["regex::re_builder::bytes::RegexBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.RegexSetBuilder.html\" title=\"struct regex::bytes::RegexSetBuilder\">RegexSetBuilder</a>","synthetic":true,"types":["regex::re_builder::set_bytes::RegexSetBuilder"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Match.html\" title=\"struct regex::bytes::Match\">Match</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_bytes::Match"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Regex.html\" title=\"struct regex::bytes::Regex\">Regex</a>","synthetic":true,"types":["regex::re_bytes::Regex"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Matches.html\" title=\"struct regex::bytes::Matches\">Matches</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_bytes::Matches"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.CaptureMatches.html\" title=\"struct regex::bytes::CaptureMatches\">CaptureMatches</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_bytes::CaptureMatches"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Split.html\" title=\"struct regex::bytes::Split\">Split</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_bytes::Split"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SplitN.html\" title=\"struct regex::bytes::SplitN\">SplitN</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_bytes::SplitN"]},{"text":"impl&lt;'r&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.CaptureNames.html\" title=\"struct regex::bytes::CaptureNames\">CaptureNames</a>&lt;'r&gt;","synthetic":true,"types":["regex::re_bytes::CaptureNames"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.CaptureLocations.html\" title=\"struct regex::bytes::CaptureLocations\">CaptureLocations</a>","synthetic":true,"types":["regex::re_bytes::CaptureLocations"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Captures.html\" title=\"struct regex::bytes::Captures\">Captures</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_bytes::Captures"]},{"text":"impl&lt;'c, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SubCaptureMatches.html\" title=\"struct regex::bytes::SubCaptureMatches\">SubCaptureMatches</a>&lt;'c, 't&gt;","synthetic":true,"types":["regex::re_bytes::SubCaptureMatches"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.ReplacerRef.html\" title=\"struct regex::bytes::ReplacerRef\">ReplacerRef</a>&lt;'a, R&gt;","synthetic":true,"types":["regex::re_bytes::ReplacerRef"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.NoExpand.html\" title=\"struct regex::bytes::NoExpand\">NoExpand</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_bytes::NoExpand"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"regex/bytes/struct.RegexSet.html\" title=\"struct regex::bytes::RegexSet\">RegexSet</a>","synthetic":true,"types":["regex::re_set::bytes::RegexSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SetMatches.html\" title=\"struct regex::bytes::SetMatches\">SetMatches</a>","synthetic":true,"types":["regex::re_set::bytes::SetMatches"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SetMatchesIntoIter.html\" title=\"struct regex::bytes::SetMatchesIntoIter\">SetMatchesIntoIter</a>","synthetic":true,"types":["regex::re_set::bytes::SetMatchesIntoIter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SetMatchesIter.html\" title=\"struct regex::bytes::SetMatchesIter\">SetMatchesIter</a>&lt;'a&gt;","synthetic":true,"types":["regex::re_set::bytes::SetMatchesIter"]}];
implementors["regex_syntax"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"regex_syntax/struct.Parser.html\" title=\"struct regex_syntax::Parser\">Parser</a>","synthetic":true,"types":["regex_syntax::parser::Parser"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/struct.ParserBuilder.html\" title=\"struct regex_syntax::ParserBuilder\">ParserBuilder</a>","synthetic":true,"types":["regex_syntax::parser::ParserBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/struct.UnicodeWordError.html\" title=\"struct regex_syntax::UnicodeWordError\">UnicodeWordError</a>","synthetic":true,"types":["regex_syntax::unicode::UnicodeWordError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/enum.Error.html\" title=\"enum regex_syntax::Error\">Error</a>","synthetic":true,"types":["regex_syntax::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Error.html\" title=\"struct regex_syntax::ast::Error\">Error</a>","synthetic":true,"types":["regex_syntax::ast::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Span.html\" title=\"struct regex_syntax::ast::Span\">Span</a>","synthetic":true,"types":["regex_syntax::ast::Span"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Position.html\" title=\"struct regex_syntax::ast::Position\">Position</a>","synthetic":true,"types":["regex_syntax::ast::Position"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.WithComments.html\" title=\"struct regex_syntax::ast::WithComments\">WithComments</a>","synthetic":true,"types":["regex_syntax::ast::WithComments"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Comment.html\" title=\"struct regex_syntax::ast::Comment\">Comment</a>","synthetic":true,"types":["regex_syntax::ast::Comment"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Alternation.html\" title=\"struct regex_syntax::ast::Alternation\">Alternation</a>","synthetic":true,"types":["regex_syntax::ast::Alternation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Concat.html\" title=\"struct regex_syntax::ast::Concat\">Concat</a>","synthetic":true,"types":["regex_syntax::ast::Concat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Literal.html\" title=\"struct regex_syntax::ast::Literal\">Literal</a>","synthetic":true,"types":["regex_syntax::ast::Literal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassPerl.html\" title=\"struct regex_syntax::ast::ClassPerl\">ClassPerl</a>","synthetic":true,"types":["regex_syntax::ast::ClassPerl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassAscii.html\" title=\"struct regex_syntax::ast::ClassAscii\">ClassAscii</a>","synthetic":true,"types":["regex_syntax::ast::ClassAscii"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassUnicode.html\" title=\"struct regex_syntax::ast::ClassUnicode\">ClassUnicode</a>","synthetic":true,"types":["regex_syntax::ast::ClassUnicode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassBracketed.html\" title=\"struct regex_syntax::ast::ClassBracketed\">ClassBracketed</a>","synthetic":true,"types":["regex_syntax::ast::ClassBracketed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassSetRange.html\" title=\"struct regex_syntax::ast::ClassSetRange\">ClassSetRange</a>","synthetic":true,"types":["regex_syntax::ast::ClassSetRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassSetUnion.html\" title=\"struct regex_syntax::ast::ClassSetUnion\">ClassSetUnion</a>","synthetic":true,"types":["regex_syntax::ast::ClassSetUnion"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassSetBinaryOp.html\" title=\"struct regex_syntax::ast::ClassSetBinaryOp\">ClassSetBinaryOp</a>","synthetic":true,"types":["regex_syntax::ast::ClassSetBinaryOp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Assertion.html\" title=\"struct regex_syntax::ast::Assertion\">Assertion</a>","synthetic":true,"types":["regex_syntax::ast::Assertion"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Repetition.html\" title=\"struct regex_syntax::ast::Repetition\">Repetition</a>","synthetic":true,"types":["regex_syntax::ast::Repetition"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.RepetitionOp.html\" title=\"struct regex_syntax::ast::RepetitionOp\">RepetitionOp</a>","synthetic":true,"types":["regex_syntax::ast::RepetitionOp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Group.html\" title=\"struct regex_syntax::ast::Group\">Group</a>","synthetic":true,"types":["regex_syntax::ast::Group"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.CaptureName.html\" title=\"struct regex_syntax::ast::CaptureName\">CaptureName</a>","synthetic":true,"types":["regex_syntax::ast::CaptureName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.SetFlags.html\" title=\"struct regex_syntax::ast::SetFlags\">SetFlags</a>","synthetic":true,"types":["regex_syntax::ast::SetFlags"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Flags.html\" title=\"struct regex_syntax::ast::Flags\">Flags</a>","synthetic":true,"types":["regex_syntax::ast::Flags"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.FlagsItem.html\" title=\"struct regex_syntax::ast::FlagsItem\">FlagsItem</a>","synthetic":true,"types":["regex_syntax::ast::FlagsItem"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ErrorKind.html\" title=\"enum regex_syntax::ast::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["regex_syntax::ast::ErrorKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.Ast.html\" title=\"enum regex_syntax::ast::Ast\">Ast</a>","synthetic":true,"types":["regex_syntax::ast::Ast"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.LiteralKind.html\" title=\"enum regex_syntax::ast::LiteralKind\">LiteralKind</a>","synthetic":true,"types":["regex_syntax::ast::LiteralKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.SpecialLiteralKind.html\" title=\"enum regex_syntax::ast::SpecialLiteralKind\">SpecialLiteralKind</a>","synthetic":true,"types":["regex_syntax::ast::SpecialLiteralKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.HexLiteralKind.html\" title=\"enum regex_syntax::ast::HexLiteralKind\">HexLiteralKind</a>","synthetic":true,"types":["regex_syntax::ast::HexLiteralKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.Class.html\" title=\"enum regex_syntax::ast::Class\">Class</a>","synthetic":true,"types":["regex_syntax::ast::Class"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassPerlKind.html\" title=\"enum regex_syntax::ast::ClassPerlKind\">ClassPerlKind</a>","synthetic":true,"types":["regex_syntax::ast::ClassPerlKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassAsciiKind.html\" title=\"enum regex_syntax::ast::ClassAsciiKind\">ClassAsciiKind</a>","synthetic":true,"types":["regex_syntax::ast::ClassAsciiKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassUnicodeKind.html\" title=\"enum regex_syntax::ast::ClassUnicodeKind\">ClassUnicodeKind</a>","synthetic":true,"types":["regex_syntax::ast::ClassUnicodeKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassUnicodeOpKind.html\" title=\"enum regex_syntax::ast::ClassUnicodeOpKind\">ClassUnicodeOpKind</a>","synthetic":true,"types":["regex_syntax::ast::ClassUnicodeOpKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassSet.html\" title=\"enum regex_syntax::ast::ClassSet\">ClassSet</a>","synthetic":true,"types":["regex_syntax::ast::ClassSet"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassSetItem.html\" title=\"enum regex_syntax::ast::ClassSetItem\">ClassSetItem</a>","synthetic":true,"types":["regex_syntax::ast::ClassSetItem"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassSetBinaryOpKind.html\" title=\"enum regex_syntax::ast::ClassSetBinaryOpKind\">ClassSetBinaryOpKind</a>","synthetic":true,"types":["regex_syntax::ast::ClassSetBinaryOpKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.AssertionKind.html\" title=\"enum regex_syntax::ast::AssertionKind\">AssertionKind</a>","synthetic":true,"types":["regex_syntax::ast::AssertionKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.RepetitionKind.html\" title=\"enum regex_syntax::ast::RepetitionKind\">RepetitionKind</a>","synthetic":true,"types":["regex_syntax::ast::RepetitionKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.RepetitionRange.html\" title=\"enum regex_syntax::ast::RepetitionRange\">RepetitionRange</a>","synthetic":true,"types":["regex_syntax::ast::RepetitionRange"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.GroupKind.html\" title=\"enum regex_syntax::ast::GroupKind\">GroupKind</a>","synthetic":true,"types":["regex_syntax::ast::GroupKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.FlagsItemKind.html\" title=\"enum regex_syntax::ast::FlagsItemKind\">FlagsItemKind</a>","synthetic":true,"types":["regex_syntax::ast::FlagsItemKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.Flag.html\" title=\"enum regex_syntax::ast::Flag\">Flag</a>","synthetic":true,"types":["regex_syntax::ast::Flag"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/parse/struct.ParserBuilder.html\" title=\"struct regex_syntax::ast::parse::ParserBuilder\">ParserBuilder</a>","synthetic":true,"types":["regex_syntax::ast::parse::ParserBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"regex_syntax/ast/parse/struct.Parser.html\" title=\"struct regex_syntax::ast::parse::Parser\">Parser</a>","synthetic":true,"types":["regex_syntax::ast::parse::Parser"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/print/struct.Printer.html\" title=\"struct regex_syntax::ast::print::Printer\">Printer</a>","synthetic":true,"types":["regex_syntax::ast::print::Printer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.CaseFoldError.html\" title=\"struct regex_syntax::hir::CaseFoldError\">CaseFoldError</a>","synthetic":true,"types":["regex_syntax::unicode::CaseFoldError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.Error.html\" title=\"struct regex_syntax::hir::Error\">Error</a>","synthetic":true,"types":["regex_syntax::hir::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.Hir.html\" title=\"struct regex_syntax::hir::Hir\">Hir</a>","synthetic":true,"types":["regex_syntax::hir::Hir"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassUnicode.html\" title=\"struct regex_syntax::hir::ClassUnicode\">ClassUnicode</a>","synthetic":true,"types":["regex_syntax::hir::ClassUnicode"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassUnicodeIter.html\" title=\"struct regex_syntax::hir::ClassUnicodeIter\">ClassUnicodeIter</a>&lt;'a&gt;","synthetic":true,"types":["regex_syntax::hir::ClassUnicodeIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassUnicodeRange.html\" title=\"struct regex_syntax::hir::ClassUnicodeRange\">ClassUnicodeRange</a>","synthetic":true,"types":["regex_syntax::hir::ClassUnicodeRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassBytes.html\" title=\"struct regex_syntax::hir::ClassBytes\">ClassBytes</a>","synthetic":true,"types":["regex_syntax::hir::ClassBytes"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassBytesIter.html\" title=\"struct regex_syntax::hir::ClassBytesIter\">ClassBytesIter</a>&lt;'a&gt;","synthetic":true,"types":["regex_syntax::hir::ClassBytesIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassBytesRange.html\" title=\"struct regex_syntax::hir::ClassBytesRange\">ClassBytesRange</a>","synthetic":true,"types":["regex_syntax::hir::ClassBytesRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.Group.html\" title=\"struct regex_syntax::hir::Group\">Group</a>","synthetic":true,"types":["regex_syntax::hir::Group"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.Repetition.html\" title=\"struct regex_syntax::hir::Repetition\">Repetition</a>","synthetic":true,"types":["regex_syntax::hir::Repetition"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.ErrorKind.html\" title=\"enum regex_syntax::hir::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["regex_syntax::hir::ErrorKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.HirKind.html\" title=\"enum regex_syntax::hir::HirKind\">HirKind</a>","synthetic":true,"types":["regex_syntax::hir::HirKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.Literal.html\" title=\"enum regex_syntax::hir::Literal\">Literal</a>","synthetic":true,"types":["regex_syntax::hir::Literal"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.Class.html\" title=\"enum regex_syntax::hir::Class\">Class</a>","synthetic":true,"types":["regex_syntax::hir::Class"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.Anchor.html\" title=\"enum regex_syntax::hir::Anchor\">Anchor</a>","synthetic":true,"types":["regex_syntax::hir::Anchor"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.WordBoundary.html\" title=\"enum regex_syntax::hir::WordBoundary\">WordBoundary</a>","synthetic":true,"types":["regex_syntax::hir::WordBoundary"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.GroupKind.html\" title=\"enum regex_syntax::hir::GroupKind\">GroupKind</a>","synthetic":true,"types":["regex_syntax::hir::GroupKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.RepetitionKind.html\" title=\"enum regex_syntax::hir::RepetitionKind\">RepetitionKind</a>","synthetic":true,"types":["regex_syntax::hir::RepetitionKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.RepetitionRange.html\" title=\"enum regex_syntax::hir::RepetitionRange\">RepetitionRange</a>","synthetic":true,"types":["regex_syntax::hir::RepetitionRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/literal/struct.Literals.html\" title=\"struct regex_syntax::hir::literal::Literals\">Literals</a>","synthetic":true,"types":["regex_syntax::hir::literal::Literals"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/literal/struct.Literal.html\" title=\"struct regex_syntax::hir::literal::Literal\">Literal</a>","synthetic":true,"types":["regex_syntax::hir::literal::Literal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/print/struct.Printer.html\" title=\"struct regex_syntax::hir::print::Printer\">Printer</a>","synthetic":true,"types":["regex_syntax::hir::print::Printer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/translate/struct.TranslatorBuilder.html\" title=\"struct regex_syntax::hir::translate::TranslatorBuilder\">TranslatorBuilder</a>","synthetic":true,"types":["regex_syntax::hir::translate::TranslatorBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"regex_syntax/hir/translate/struct.Translator.html\" title=\"struct regex_syntax::hir::translate::Translator\">Translator</a>","synthetic":true,"types":["regex_syntax::hir::translate::Translator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/utf8/struct.Utf8Range.html\" title=\"struct regex_syntax::utf8::Utf8Range\">Utf8Range</a>","synthetic":true,"types":["regex_syntax::utf8::Utf8Range"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/utf8/struct.Utf8Sequences.html\" title=\"struct regex_syntax::utf8::Utf8Sequences\">Utf8Sequences</a>","synthetic":true,"types":["regex_syntax::utf8::Utf8Sequences"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/utf8/enum.Utf8Sequence.html\" title=\"enum regex_syntax::utf8::Utf8Sequence\">Utf8Sequence</a>","synthetic":true,"types":["regex_syntax::utf8::Utf8Sequence"]}];
implementors["resolv_conf"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"resolv_conf/struct.AddrParseError.html\" title=\"struct resolv_conf::AddrParseError\">AddrParseError</a>","synthetic":true,"types":["resolv_conf::ip::AddrParseError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"resolv_conf/struct.Config.html\" title=\"struct resolv_conf::Config\">Config</a>","synthetic":true,"types":["resolv_conf::config::Config"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"resolv_conf/struct.DomainIter.html\" title=\"struct resolv_conf::DomainIter\">DomainIter</a>&lt;'a&gt;","synthetic":true,"types":["resolv_conf::config::DomainIter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"resolv_conf/enum.ParseError.html\" title=\"enum resolv_conf::ParseError\">ParseError</a>","synthetic":true,"types":["resolv_conf::grammar::ParseError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"resolv_conf/enum.Network.html\" title=\"enum resolv_conf::Network\">Network</a>","synthetic":true,"types":["resolv_conf::ip::Network"]},{"text":"impl Freeze for <a class=\"enum\" href=\"resolv_conf/enum.ScopedIp.html\" title=\"enum resolv_conf::ScopedIp\">ScopedIp</a>","synthetic":true,"types":["resolv_conf::ip::ScopedIp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"resolv_conf/enum.Lookup.html\" title=\"enum resolv_conf::Lookup\">Lookup</a>","synthetic":true,"types":["resolv_conf::config::Lookup"]},{"text":"impl Freeze for <a class=\"enum\" href=\"resolv_conf/enum.Family.html\" title=\"enum resolv_conf::Family\">Family</a>","synthetic":true,"types":["resolv_conf::config::Family"]}];
implementors["ring"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"ring/test/struct.TestCase.html\" title=\"struct ring::test::TestCase\">TestCase</a>","synthetic":true,"types":["ring::test::TestCase"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"ring/test/struct.File.html\" title=\"struct ring::test::File\">File</a>&lt;'a&gt;","synthetic":true,"types":["ring::test::File"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/aead/struct.Nonce.html\" title=\"struct ring::aead::Nonce\">Nonce</a>","synthetic":true,"types":["ring::aead::nonce::Nonce"]},{"text":"impl&lt;N&gt; Freeze for <a class=\"struct\" href=\"ring/aead/struct.OpeningKey.html\" title=\"struct ring::aead::OpeningKey\">OpeningKey</a>&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["ring::aead::OpeningKey"]},{"text":"impl&lt;N&gt; Freeze for <a class=\"struct\" href=\"ring/aead/struct.SealingKey.html\" title=\"struct ring::aead::SealingKey\">SealingKey</a>&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["ring::aead::SealingKey"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"ring/aead/struct.Aad.html\" title=\"struct ring::aead::Aad\">Aad</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["ring::aead::Aad"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/aead/struct.UnboundKey.html\" title=\"struct ring::aead::UnboundKey\">UnboundKey</a>","synthetic":true,"types":["ring::aead::UnboundKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/aead/struct.LessSafeKey.html\" title=\"struct ring::aead::LessSafeKey\">LessSafeKey</a>","synthetic":true,"types":["ring::aead::LessSafeKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/aead/struct.Algorithm.html\" title=\"struct ring::aead::Algorithm\">Algorithm</a>","synthetic":true,"types":["ring::aead::Algorithm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/aead/struct.Tag.html\" title=\"struct ring::aead::Tag\">Tag</a>","synthetic":true,"types":["ring::aead::Tag"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/aead/chacha20_poly1305_openssh/struct.SealingKey.html\" title=\"struct ring::aead::chacha20_poly1305_openssh::SealingKey\">SealingKey</a>","synthetic":true,"types":["ring::aead::chacha20_poly1305_openssh::SealingKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/aead/chacha20_poly1305_openssh/struct.OpeningKey.html\" title=\"struct ring::aead::chacha20_poly1305_openssh::OpeningKey\">OpeningKey</a>","synthetic":true,"types":["ring::aead::chacha20_poly1305_openssh::OpeningKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/aead/quic/struct.HeaderProtectionKey.html\" title=\"struct ring::aead::quic::HeaderProtectionKey\">HeaderProtectionKey</a>","synthetic":true,"types":["ring::aead::quic::HeaderProtectionKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/aead/quic/struct.Algorithm.html\" title=\"struct ring::aead::quic::Algorithm\">Algorithm</a>","synthetic":true,"types":["ring::aead::quic::Algorithm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/agreement/struct.Algorithm.html\" title=\"struct ring::agreement::Algorithm\">Algorithm</a>","synthetic":true,"types":["ring::agreement::Algorithm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/agreement/struct.EphemeralPrivateKey.html\" title=\"struct ring::agreement::EphemeralPrivateKey\">EphemeralPrivateKey</a>","synthetic":true,"types":["ring::agreement::EphemeralPrivateKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/agreement/struct.PublicKey.html\" title=\"struct ring::agreement::PublicKey\">PublicKey</a>","synthetic":true,"types":["ring::agreement::PublicKey"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"ring/agreement/struct.UnparsedPublicKey.html\" title=\"struct ring::agreement::UnparsedPublicKey\">UnparsedPublicKey</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["ring::agreement::UnparsedPublicKey"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"ring/io/struct.Positive.html\" title=\"struct ring::io::Positive\">Positive</a>&lt;'a&gt;","synthetic":true,"types":["ring::io::positive::Positive"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/digest/struct.Context.html\" title=\"struct ring::digest::Context\">Context</a>","synthetic":true,"types":["ring::digest::Context"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/digest/struct.Digest.html\" title=\"struct ring::digest::Digest\">Digest</a>","synthetic":true,"types":["ring::digest::Digest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/digest/struct.Algorithm.html\" title=\"struct ring::digest::Algorithm\">Algorithm</a>","synthetic":true,"types":["ring::digest::Algorithm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/signature/struct.Ed25519KeyPair.html\" title=\"struct ring::signature::Ed25519KeyPair\">Ed25519KeyPair</a>","synthetic":true,"types":["ring::ec::curve25519::ed25519::signing::Ed25519KeyPair"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/signature/struct.EdDSAParameters.html\" title=\"struct ring::signature::EdDSAParameters\">EdDSAParameters</a>","synthetic":true,"types":["ring::ec::curve25519::ed25519::verification::EdDSAParameters"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/signature/struct.EcdsaSigningAlgorithm.html\" title=\"struct ring::signature::EcdsaSigningAlgorithm\">EcdsaSigningAlgorithm</a>","synthetic":true,"types":["ring::ec::suite_b::ecdsa::signing::EcdsaSigningAlgorithm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/signature/struct.EcdsaKeyPair.html\" title=\"struct ring::signature::EcdsaKeyPair\">EcdsaKeyPair</a>","synthetic":true,"types":["ring::ec::suite_b::ecdsa::signing::EcdsaKeyPair"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/signature/struct.EcdsaVerificationAlgorithm.html\" title=\"struct ring::signature::EcdsaVerificationAlgorithm\">EcdsaVerificationAlgorithm</a>","synthetic":true,"types":["ring::ec::suite_b::ecdsa::verification::EcdsaVerificationAlgorithm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/error/struct.Unspecified.html\" title=\"struct ring::error::Unspecified\">Unspecified</a>","synthetic":true,"types":["ring::error::Unspecified"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/error/struct.KeyRejected.html\" title=\"struct ring::error::KeyRejected\">KeyRejected</a>","synthetic":true,"types":["ring::error::KeyRejected"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/hkdf/struct.Algorithm.html\" title=\"struct ring::hkdf::Algorithm\">Algorithm</a>","synthetic":true,"types":["ring::hkdf::Algorithm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/hkdf/struct.Salt.html\" title=\"struct ring::hkdf::Salt\">Salt</a>","synthetic":true,"types":["ring::hkdf::Salt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/hkdf/struct.Prk.html\" title=\"struct ring::hkdf::Prk\">Prk</a>","synthetic":true,"types":["ring::hkdf::Prk"]},{"text":"impl&lt;'a, L&gt; Freeze for <a class=\"struct\" href=\"ring/hkdf/struct.Okm.html\" title=\"struct ring::hkdf::Okm\">Okm</a>&lt;'a, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,&nbsp;</span>","synthetic":true,"types":["ring::hkdf::Okm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/hmac/struct.Algorithm.html\" title=\"struct ring::hmac::Algorithm\">Algorithm</a>","synthetic":true,"types":["ring::hmac::Algorithm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/hmac/struct.Tag.html\" title=\"struct ring::hmac::Tag\">Tag</a>","synthetic":true,"types":["ring::hmac::Tag"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/hmac/struct.Key.html\" title=\"struct ring::hmac::Key\">Key</a>","synthetic":true,"types":["ring::hmac::Key"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/hmac/struct.Context.html\" title=\"struct ring::hmac::Context\">Context</a>","synthetic":true,"types":["ring::hmac::Context"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/pbkdf2/struct.Algorithm.html\" title=\"struct ring::pbkdf2::Algorithm\">Algorithm</a>","synthetic":true,"types":["ring::pbkdf2::Algorithm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/pkcs8/struct.Document.html\" title=\"struct ring::pkcs8::Document\">Document</a>","synthetic":true,"types":["ring::pkcs8::Document"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"ring/rand/struct.Random.html\" title=\"struct ring::rand::Random\">Random</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["ring::rand::Random"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/rand/struct.SystemRandom.html\" title=\"struct ring::rand::SystemRandom\">SystemRandom</a>","synthetic":true,"types":["ring::rand::SystemRandom"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/signature/struct.RsaParameters.html\" title=\"struct ring::signature::RsaParameters\">RsaParameters</a>","synthetic":true,"types":["ring::rsa::RsaParameters"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"ring/signature/struct.RsaPublicKeyComponents.html\" title=\"struct ring::signature::RsaPublicKeyComponents\">RsaPublicKeyComponents</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["ring::rsa::verification::RsaPublicKeyComponents"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/signature/struct.RsaKeyPair.html\" title=\"struct ring::signature::RsaKeyPair\">RsaKeyPair</a>","synthetic":true,"types":["ring::rsa::signing::RsaKeyPair"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/signature/struct.RsaSubjectPublicKey.html\" title=\"struct ring::signature::RsaSubjectPublicKey\">RsaSubjectPublicKey</a>","synthetic":true,"types":["ring::rsa::signing::RsaSubjectPublicKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/signature/struct.Signature.html\" title=\"struct ring::signature::Signature\">Signature</a>","synthetic":true,"types":["ring::signature::Signature"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"ring/signature/struct.UnparsedPublicKey.html\" title=\"struct ring::signature::UnparsedPublicKey\">UnparsedPublicKey</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["ring::signature::UnparsedPublicKey"]}];
implementors["rustc_demangle"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"rustc_demangle/struct.Demangle.html\" title=\"struct rustc_demangle::Demangle\">Demangle</a>&lt;'a&gt;","synthetic":true,"types":["rustc_demangle::Demangle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustc_demangle/struct.TryDemangleError.html\" title=\"struct rustc_demangle::TryDemangleError\">TryDemangleError</a>","synthetic":true,"types":["rustc_demangle::TryDemangleError"]}];
implementors["rustls"] = [{"text":"impl&lt;'a, S:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"rustls/struct.Stream.html\" title=\"struct rustls::Stream\">Stream</a>&lt;'a, S, T&gt;","synthetic":true,"types":["rustls::stream::Stream"]},{"text":"impl&lt;S, T&gt; Freeze for <a class=\"struct\" href=\"rustls/struct.StreamOwned.html\" title=\"struct rustls::StreamOwned\">StreamOwned</a>&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rustls::stream::StreamOwned"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.RootCertStore.html\" title=\"struct rustls::RootCertStore\">RootCertStore</a>","synthetic":true,"types":["rustls::anchors::RootCertStore"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.NoClientSessionStorage.html\" title=\"struct rustls::NoClientSessionStorage\">NoClientSessionStorage</a>","synthetic":true,"types":["rustls::client::handy::NoClientSessionStorage"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"rustls/struct.ClientSessionMemoryCache.html\" title=\"struct rustls::ClientSessionMemoryCache\">ClientSessionMemoryCache</a>","synthetic":true,"types":["rustls::client::handy::ClientSessionMemoryCache"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.ClientConfig.html\" title=\"struct rustls::ClientConfig\">ClientConfig</a>","synthetic":true,"types":["rustls::client::ClientConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.ClientSession.html\" title=\"struct rustls::ClientSession\">ClientSession</a>","synthetic":true,"types":["rustls::client::ClientSession"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"rustls/struct.WriteEarlyData.html\" title=\"struct rustls::WriteEarlyData\">WriteEarlyData</a>&lt;'a&gt;","synthetic":true,"types":["rustls::client::WriteEarlyData"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.NoServerSessionStorage.html\" title=\"struct rustls::NoServerSessionStorage\">NoServerSessionStorage</a>","synthetic":true,"types":["rustls::server::handy::NoServerSessionStorage"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"rustls/struct.ServerSessionMemoryCache.html\" title=\"struct rustls::ServerSessionMemoryCache\">ServerSessionMemoryCache</a>","synthetic":true,"types":["rustls::server::handy::ServerSessionMemoryCache"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.ServerConfig.html\" title=\"struct rustls::ServerConfig\">ServerConfig</a>","synthetic":true,"types":["rustls::server::ServerConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.ServerSession.html\" title=\"struct rustls::ServerSession\">ServerSession</a>","synthetic":true,"types":["rustls::server::ServerSession"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.ResolvesServerCertUsingSNI.html\" title=\"struct rustls::ResolvesServerCertUsingSNI\">ResolvesServerCertUsingSNI</a>","synthetic":true,"types":["rustls::server::handy::ResolvesServerCertUsingSNI"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.Ticketer.html\" title=\"struct rustls::Ticketer\">Ticketer</a>","synthetic":true,"types":["rustls::ticketer::Ticketer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.NoClientAuth.html\" title=\"struct rustls::NoClientAuth\">NoClientAuth</a>","synthetic":true,"types":["rustls::verify::NoClientAuth"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.AllowAnyAuthenticatedClient.html\" title=\"struct rustls::AllowAnyAuthenticatedClient\">AllowAnyAuthenticatedClient</a>","synthetic":true,"types":["rustls::verify::AllowAnyAuthenticatedClient"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.AllowAnyAnonymousOrAuthenticatedClient.html\" title=\"struct rustls::AllowAnyAnonymousOrAuthenticatedClient\">AllowAnyAnonymousOrAuthenticatedClient</a>","synthetic":true,"types":["rustls::verify::AllowAnyAnonymousOrAuthenticatedClient"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.SupportedCipherSuite.html\" title=\"struct rustls::SupportedCipherSuite\">SupportedCipherSuite</a>","synthetic":true,"types":["rustls::suites::SupportedCipherSuite"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.Certificate.html\" title=\"struct rustls::Certificate\">Certificate</a>","synthetic":true,"types":["rustls::key::Certificate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.PrivateKey.html\" title=\"struct rustls::PrivateKey\">PrivateKey</a>","synthetic":true,"types":["rustls::key::PrivateKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.NoKeyLog.html\" title=\"struct rustls::NoKeyLog\">NoKeyLog</a>","synthetic":true,"types":["rustls::keylog::NoKeyLog"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"rustls/struct.KeyLogFile.html\" title=\"struct rustls::KeyLogFile\">KeyLogFile</a>","synthetic":true,"types":["rustls::keylog::KeyLogFile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.ServerCertVerified.html\" title=\"struct rustls::ServerCertVerified\">ServerCertVerified</a>","synthetic":true,"types":["rustls::verify::ServerCertVerified"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.ClientCertVerified.html\" title=\"struct rustls::ClientCertVerified\">ClientCertVerified</a>","synthetic":true,"types":["rustls::verify::ClientCertVerified"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"rustls/struct.DangerousClientConfig.html\" title=\"struct rustls::DangerousClientConfig\">DangerousClientConfig</a>&lt;'a&gt;","synthetic":true,"types":["rustls::client::danger::DangerousClientConfig"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/enum.ProtocolVersion.html\" title=\"enum rustls::ProtocolVersion\">ProtocolVersion</a>","synthetic":true,"types":["rustls::msgs::enums::ProtocolVersion"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/enum.SignatureScheme.html\" title=\"enum rustls::SignatureScheme\">SignatureScheme</a>","synthetic":true,"types":["rustls::msgs::enums::SignatureScheme"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/enum.CipherSuite.html\" title=\"enum rustls::CipherSuite\">CipherSuite</a>","synthetic":true,"types":["rustls::msgs::enums::CipherSuite"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/enum.TLSError.html\" title=\"enum rustls::TLSError\">TLSError</a>","synthetic":true,"types":["rustls::error::TLSError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/enum.BulkAlgorithm.html\" title=\"enum rustls::BulkAlgorithm\">BulkAlgorithm</a>","synthetic":true,"types":["rustls::suites::BulkAlgorithm"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/codec/struct.Reader.html\" title=\"struct rustls::internal::msgs::codec::Reader\">Reader</a>&lt;'a&gt;","synthetic":true,"types":["rustls::msgs::codec::Reader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/codec/struct.u24.html\" title=\"struct rustls::internal::msgs::codec::u24\">u24</a>","synthetic":true,"types":["rustls::msgs::codec::u24"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/base/struct.Payload.html\" title=\"struct rustls::internal::msgs::base::Payload\">Payload</a>","synthetic":true,"types":["rustls::msgs::base::Payload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/base/struct.PayloadU24.html\" title=\"struct rustls::internal::msgs::base::PayloadU24\">PayloadU24</a>","synthetic":true,"types":["rustls::msgs::base::PayloadU24"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/base/struct.PayloadU16.html\" title=\"struct rustls::internal::msgs::base::PayloadU16\">PayloadU16</a>","synthetic":true,"types":["rustls::msgs::base::PayloadU16"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/base/struct.PayloadU8.html\" title=\"struct rustls::internal::msgs::base::PayloadU8\">PayloadU8</a>","synthetic":true,"types":["rustls::msgs::base::PayloadU8"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.HashAlgorithm.html\" title=\"enum rustls::internal::msgs::enums::HashAlgorithm\">HashAlgorithm</a>","synthetic":true,"types":["rustls::msgs::enums::HashAlgorithm"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.SignatureAlgorithm.html\" title=\"enum rustls::internal::msgs::enums::SignatureAlgorithm\">SignatureAlgorithm</a>","synthetic":true,"types":["rustls::msgs::enums::SignatureAlgorithm"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.ClientCertificateType.html\" title=\"enum rustls::internal::msgs::enums::ClientCertificateType\">ClientCertificateType</a>","synthetic":true,"types":["rustls::msgs::enums::ClientCertificateType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.Compression.html\" title=\"enum rustls::internal::msgs::enums::Compression\">Compression</a>","synthetic":true,"types":["rustls::msgs::enums::Compression"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.ContentType.html\" title=\"enum rustls::internal::msgs::enums::ContentType\">ContentType</a>","synthetic":true,"types":["rustls::msgs::enums::ContentType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.HandshakeType.html\" title=\"enum rustls::internal::msgs::enums::HandshakeType\">HandshakeType</a>","synthetic":true,"types":["rustls::msgs::enums::HandshakeType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.AlertLevel.html\" title=\"enum rustls::internal::msgs::enums::AlertLevel\">AlertLevel</a>","synthetic":true,"types":["rustls::msgs::enums::AlertLevel"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.AlertDescription.html\" title=\"enum rustls::internal::msgs::enums::AlertDescription\">AlertDescription</a>","synthetic":true,"types":["rustls::msgs::enums::AlertDescription"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.HeartbeatMessageType.html\" title=\"enum rustls::internal::msgs::enums::HeartbeatMessageType\">HeartbeatMessageType</a>","synthetic":true,"types":["rustls::msgs::enums::HeartbeatMessageType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.ExtensionType.html\" title=\"enum rustls::internal::msgs::enums::ExtensionType\">ExtensionType</a>","synthetic":true,"types":["rustls::msgs::enums::ExtensionType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.ServerNameType.html\" title=\"enum rustls::internal::msgs::enums::ServerNameType\">ServerNameType</a>","synthetic":true,"types":["rustls::msgs::enums::ServerNameType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.NamedCurve.html\" title=\"enum rustls::internal::msgs::enums::NamedCurve\">NamedCurve</a>","synthetic":true,"types":["rustls::msgs::enums::NamedCurve"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.NamedGroup.html\" title=\"enum rustls::internal::msgs::enums::NamedGroup\">NamedGroup</a>","synthetic":true,"types":["rustls::msgs::enums::NamedGroup"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.ECPointFormat.html\" title=\"enum rustls::internal::msgs::enums::ECPointFormat\">ECPointFormat</a>","synthetic":true,"types":["rustls::msgs::enums::ECPointFormat"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.HeartbeatMode.html\" title=\"enum rustls::internal::msgs::enums::HeartbeatMode\">HeartbeatMode</a>","synthetic":true,"types":["rustls::msgs::enums::HeartbeatMode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.ECCurveType.html\" title=\"enum rustls::internal::msgs::enums::ECCurveType\">ECCurveType</a>","synthetic":true,"types":["rustls::msgs::enums::ECCurveType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.PSKKeyExchangeMode.html\" title=\"enum rustls::internal::msgs::enums::PSKKeyExchangeMode\">PSKKeyExchangeMode</a>","synthetic":true,"types":["rustls::msgs::enums::PSKKeyExchangeMode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.KeyUpdateRequest.html\" title=\"enum rustls::internal::msgs::enums::KeyUpdateRequest\">KeyUpdateRequest</a>","synthetic":true,"types":["rustls::msgs::enums::KeyUpdateRequest"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.CertificateStatusType.html\" title=\"enum rustls::internal::msgs::enums::CertificateStatusType\">CertificateStatusType</a>","synthetic":true,"types":["rustls::msgs::enums::CertificateStatusType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/alert/struct.AlertMessagePayload.html\" title=\"struct rustls::internal::msgs::alert::AlertMessagePayload\">AlertMessagePayload</a>","synthetic":true,"types":["rustls::msgs::alert::AlertMessagePayload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.Random.html\" title=\"struct rustls::internal::msgs::handshake::Random\">Random</a>","synthetic":true,"types":["rustls::msgs::handshake::Random"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.SessionID.html\" title=\"struct rustls::internal::msgs::handshake::SessionID\">SessionID</a>","synthetic":true,"types":["rustls::msgs::handshake::SessionID"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.UnknownExtension.html\" title=\"struct rustls::internal::msgs::handshake::UnknownExtension\">UnknownExtension</a>","synthetic":true,"types":["rustls::msgs::handshake::UnknownExtension"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.ServerName.html\" title=\"struct rustls::internal::msgs::handshake::ServerName\">ServerName</a>","synthetic":true,"types":["rustls::msgs::handshake::ServerName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.KeyShareEntry.html\" title=\"struct rustls::internal::msgs::handshake::KeyShareEntry\">KeyShareEntry</a>","synthetic":true,"types":["rustls::msgs::handshake::KeyShareEntry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.PresharedKeyIdentity.html\" title=\"struct rustls::internal::msgs::handshake::PresharedKeyIdentity\">PresharedKeyIdentity</a>","synthetic":true,"types":["rustls::msgs::handshake::PresharedKeyIdentity"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.PresharedKeyOffer.html\" title=\"struct rustls::internal::msgs::handshake::PresharedKeyOffer\">PresharedKeyOffer</a>","synthetic":true,"types":["rustls::msgs::handshake::PresharedKeyOffer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.OCSPCertificateStatusRequest.html\" title=\"struct rustls::internal::msgs::handshake::OCSPCertificateStatusRequest\">OCSPCertificateStatusRequest</a>","synthetic":true,"types":["rustls::msgs::handshake::OCSPCertificateStatusRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.ClientHelloPayload.html\" title=\"struct rustls::internal::msgs::handshake::ClientHelloPayload\">ClientHelloPayload</a>","synthetic":true,"types":["rustls::msgs::handshake::ClientHelloPayload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.HelloRetryRequest.html\" title=\"struct rustls::internal::msgs::handshake::HelloRetryRequest\">HelloRetryRequest</a>","synthetic":true,"types":["rustls::msgs::handshake::HelloRetryRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.ServerHelloPayload.html\" title=\"struct rustls::internal::msgs::handshake::ServerHelloPayload\">ServerHelloPayload</a>","synthetic":true,"types":["rustls::msgs::handshake::ServerHelloPayload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.CertificateEntry.html\" title=\"struct rustls::internal::msgs::handshake::CertificateEntry\">CertificateEntry</a>","synthetic":true,"types":["rustls::msgs::handshake::CertificateEntry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.CertificatePayloadTLS13.html\" title=\"struct rustls::internal::msgs::handshake::CertificatePayloadTLS13\">CertificatePayloadTLS13</a>","synthetic":true,"types":["rustls::msgs::handshake::CertificatePayloadTLS13"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.ECParameters.html\" title=\"struct rustls::internal::msgs::handshake::ECParameters\">ECParameters</a>","synthetic":true,"types":["rustls::msgs::handshake::ECParameters"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.DigitallySignedStruct.html\" title=\"struct rustls::internal::msgs::handshake::DigitallySignedStruct\">DigitallySignedStruct</a>","synthetic":true,"types":["rustls::msgs::handshake::DigitallySignedStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.ClientECDHParams.html\" title=\"struct rustls::internal::msgs::handshake::ClientECDHParams\">ClientECDHParams</a>","synthetic":true,"types":["rustls::msgs::handshake::ClientECDHParams"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.ServerECDHParams.html\" title=\"struct rustls::internal::msgs::handshake::ServerECDHParams\">ServerECDHParams</a>","synthetic":true,"types":["rustls::msgs::handshake::ServerECDHParams"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.ECDHEServerKeyExchange.html\" title=\"struct rustls::internal::msgs::handshake::ECDHEServerKeyExchange\">ECDHEServerKeyExchange</a>","synthetic":true,"types":["rustls::msgs::handshake::ECDHEServerKeyExchange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.CertificateRequestPayload.html\" title=\"struct rustls::internal::msgs::handshake::CertificateRequestPayload\">CertificateRequestPayload</a>","synthetic":true,"types":["rustls::msgs::handshake::CertificateRequestPayload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.CertificateRequestPayloadTLS13.html\" title=\"struct rustls::internal::msgs::handshake::CertificateRequestPayloadTLS13\">CertificateRequestPayloadTLS13</a>","synthetic":true,"types":["rustls::msgs::handshake::CertificateRequestPayloadTLS13"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.NewSessionTicketPayload.html\" title=\"struct rustls::internal::msgs::handshake::NewSessionTicketPayload\">NewSessionTicketPayload</a>","synthetic":true,"types":["rustls::msgs::handshake::NewSessionTicketPayload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.NewSessionTicketPayloadTLS13.html\" title=\"struct rustls::internal::msgs::handshake::NewSessionTicketPayloadTLS13\">NewSessionTicketPayloadTLS13</a>","synthetic":true,"types":["rustls::msgs::handshake::NewSessionTicketPayloadTLS13"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.CertificateStatus.html\" title=\"struct rustls::internal::msgs::handshake::CertificateStatus\">CertificateStatus</a>","synthetic":true,"types":["rustls::msgs::handshake::CertificateStatus"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.HandshakeMessagePayload.html\" title=\"struct rustls::internal::msgs::handshake::HandshakeMessagePayload\">HandshakeMessagePayload</a>","synthetic":true,"types":["rustls::msgs::handshake::HandshakeMessagePayload"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/handshake/enum.ServerNamePayload.html\" title=\"enum rustls::internal::msgs::handshake::ServerNamePayload\">ServerNamePayload</a>","synthetic":true,"types":["rustls::msgs::handshake::ServerNamePayload"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/handshake/enum.CertificateStatusRequest.html\" title=\"enum rustls::internal::msgs::handshake::CertificateStatusRequest\">CertificateStatusRequest</a>","synthetic":true,"types":["rustls::msgs::handshake::CertificateStatusRequest"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/handshake/enum.ClientExtension.html\" title=\"enum rustls::internal::msgs::handshake::ClientExtension\">ClientExtension</a>","synthetic":true,"types":["rustls::msgs::handshake::ClientExtension"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/handshake/enum.ServerExtension.html\" title=\"enum rustls::internal::msgs::handshake::ServerExtension\">ServerExtension</a>","synthetic":true,"types":["rustls::msgs::handshake::ServerExtension"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/handshake/enum.HelloRetryExtension.html\" title=\"enum rustls::internal::msgs::handshake::HelloRetryExtension\">HelloRetryExtension</a>","synthetic":true,"types":["rustls::msgs::handshake::HelloRetryExtension"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/handshake/enum.CertificateExtension.html\" title=\"enum rustls::internal::msgs::handshake::CertificateExtension\">CertificateExtension</a>","synthetic":true,"types":["rustls::msgs::handshake::CertificateExtension"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/handshake/enum.KeyExchangeAlgorithm.html\" title=\"enum rustls::internal::msgs::handshake::KeyExchangeAlgorithm\">KeyExchangeAlgorithm</a>","synthetic":true,"types":["rustls::msgs::handshake::KeyExchangeAlgorithm"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/handshake/enum.ServerKeyExchangePayload.html\" title=\"enum rustls::internal::msgs::handshake::ServerKeyExchangePayload\">ServerKeyExchangePayload</a>","synthetic":true,"types":["rustls::msgs::handshake::ServerKeyExchangePayload"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/handshake/enum.CertReqExtension.html\" title=\"enum rustls::internal::msgs::handshake::CertReqExtension\">CertReqExtension</a>","synthetic":true,"types":["rustls::msgs::handshake::CertReqExtension"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/handshake/enum.NewSessionTicketExtension.html\" title=\"enum rustls::internal::msgs::handshake::NewSessionTicketExtension\">NewSessionTicketExtension</a>","synthetic":true,"types":["rustls::msgs::handshake::NewSessionTicketExtension"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/handshake/enum.HandshakePayload.html\" title=\"enum rustls::internal::msgs::handshake::HandshakePayload\">HandshakePayload</a>","synthetic":true,"types":["rustls::msgs::handshake::HandshakePayload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/ccs/struct.ChangeCipherSpecPayload.html\" title=\"struct rustls::internal::msgs::ccs::ChangeCipherSpecPayload\">ChangeCipherSpecPayload</a>","synthetic":true,"types":["rustls::msgs::ccs::ChangeCipherSpecPayload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/message/struct.Message.html\" title=\"struct rustls::internal::msgs::message::Message\">Message</a>","synthetic":true,"types":["rustls::msgs::message::Message"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/message/struct.BorrowMessage.html\" title=\"struct rustls::internal::msgs::message::BorrowMessage\">BorrowMessage</a>&lt;'a&gt;","synthetic":true,"types":["rustls::msgs::message::BorrowMessage"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/message/enum.MessagePayload.html\" title=\"enum rustls::internal::msgs::message::MessagePayload\">MessagePayload</a>","synthetic":true,"types":["rustls::msgs::message::MessagePayload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/persist/struct.ClientSessionKey.html\" title=\"struct rustls::internal::msgs::persist::ClientSessionKey\">ClientSessionKey</a>","synthetic":true,"types":["rustls::msgs::persist::ClientSessionKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/persist/struct.ClientSessionValue.html\" title=\"struct rustls::internal::msgs::persist::ClientSessionValue\">ClientSessionValue</a>","synthetic":true,"types":["rustls::msgs::persist::ClientSessionValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/persist/struct.ServerSessionValue.html\" title=\"struct rustls::internal::msgs::persist::ServerSessionValue\">ServerSessionValue</a>","synthetic":true,"types":["rustls::msgs::persist::ServerSessionValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/deframer/struct.MessageDeframer.html\" title=\"struct rustls::internal::msgs::deframer::MessageDeframer\">MessageDeframer</a>","synthetic":true,"types":["rustls::msgs::deframer::MessageDeframer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/fragmenter/struct.MessageFragmenter.html\" title=\"struct rustls::internal::msgs::fragmenter::MessageFragmenter\">MessageFragmenter</a>","synthetic":true,"types":["rustls::msgs::fragmenter::MessageFragmenter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/hsjoiner/struct.HandshakeJoiner.html\" title=\"struct rustls::internal::msgs::hsjoiner::HandshakeJoiner\">HandshakeJoiner</a>","synthetic":true,"types":["rustls::msgs::hsjoiner::HandshakeJoiner"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/sign/struct.CertifiedKey.html\" title=\"struct rustls::sign::CertifiedKey\">CertifiedKey</a>","synthetic":true,"types":["rustls::sign::CertifiedKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/sign/struct.RSASigningKey.html\" title=\"struct rustls::sign::RSASigningKey\">RSASigningKey</a>","synthetic":true,"types":["rustls::sign::RSASigningKey"]}];
implementors["ryu"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"ryu/struct.Buffer.html\" title=\"struct ryu::Buffer\">Buffer</a>","synthetic":true,"types":["ryu::buffer::Buffer"]}];
implementors["scopeguard"] = [{"text":"impl&lt;T, F, S&gt; Freeze for <a class=\"struct\" href=\"scopeguard/struct.ScopeGuard.html\" title=\"struct scopeguard::ScopeGuard\">ScopeGuard</a>&lt;T, F, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["scopeguard::ScopeGuard"]},{"text":"impl Freeze for <a class=\"enum\" href=\"scopeguard/enum.Always.html\" title=\"enum scopeguard::Always\">Always</a>","synthetic":true,"types":["scopeguard::Always"]}];
implementors["sct"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sct/struct.Log.html\" title=\"struct sct::Log\">Log</a>&lt;'a&gt;","synthetic":true,"types":["sct::Log"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sct/enum.Error.html\" title=\"enum sct::Error\">Error</a>","synthetic":true,"types":["sct::Error"]}];
implementors["serde"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"serde/de/struct.IgnoredAny.html\" title=\"struct serde::de::IgnoredAny\">IgnoredAny</a>","synthetic":true,"types":["serde::de::ignored_any::IgnoredAny"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"serde/de/enum.Unexpected.html\" title=\"enum serde::de::Unexpected\">Unexpected</a>&lt;'a&gt;","synthetic":true,"types":["serde::de::Unexpected"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde/de/value/struct.Error.html\" title=\"struct serde::de::value::Error\">Error</a>","synthetic":true,"types":["serde::de::value::Error"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.UnitDeserializer.html\" title=\"struct serde::de::value::UnitDeserializer\">UnitDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::UnitDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.BoolDeserializer.html\" title=\"struct serde::de::value::BoolDeserializer\">BoolDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::BoolDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I8Deserializer.html\" title=\"struct serde::de::value::I8Deserializer\">I8Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::I8Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I16Deserializer.html\" title=\"struct serde::de::value::I16Deserializer\">I16Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::I16Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I32Deserializer.html\" title=\"struct serde::de::value::I32Deserializer\">I32Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::I32Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I64Deserializer.html\" title=\"struct serde::de::value::I64Deserializer\">I64Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::I64Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.IsizeDeserializer.html\" title=\"struct serde::de::value::IsizeDeserializer\">IsizeDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::IsizeDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U8Deserializer.html\" title=\"struct serde::de::value::U8Deserializer\">U8Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::U8Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U16Deserializer.html\" title=\"struct serde::de::value::U16Deserializer\">U16Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::U16Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U64Deserializer.html\" title=\"struct serde::de::value::U64Deserializer\">U64Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::U64Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.UsizeDeserializer.html\" title=\"struct serde::de::value::UsizeDeserializer\">UsizeDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::UsizeDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.F32Deserializer.html\" title=\"struct serde::de::value::F32Deserializer\">F32Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::F32Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.F64Deserializer.html\" title=\"struct serde::de::value::F64Deserializer\">F64Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::F64Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.CharDeserializer.html\" title=\"struct serde::de::value::CharDeserializer\">CharDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::CharDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I128Deserializer.html\" title=\"struct serde::de::value::I128Deserializer\">I128Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::I128Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U128Deserializer.html\" title=\"struct serde::de::value::U128Deserializer\">U128Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::U128Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U32Deserializer.html\" title=\"struct serde::de::value::U32Deserializer\">U32Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::U32Deserializer"]},{"text":"impl&lt;'a, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.StrDeserializer.html\" title=\"struct serde::de::value::StrDeserializer\">StrDeserializer</a>&lt;'a, E&gt;","synthetic":true,"types":["serde::de::value::StrDeserializer"]},{"text":"impl&lt;'de, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.BorrowedStrDeserializer.html\" title=\"struct serde::de::value::BorrowedStrDeserializer\">BorrowedStrDeserializer</a>&lt;'de, E&gt;","synthetic":true,"types":["serde::de::value::BorrowedStrDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.StringDeserializer.html\" title=\"struct serde::de::value::StringDeserializer\">StringDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::StringDeserializer"]},{"text":"impl&lt;'a, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.CowStrDeserializer.html\" title=\"struct serde::de::value::CowStrDeserializer\">CowStrDeserializer</a>&lt;'a, E&gt;","synthetic":true,"types":["serde::de::value::CowStrDeserializer"]},{"text":"impl&lt;'de, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.BorrowedBytesDeserializer.html\" title=\"struct serde::de::value::BorrowedBytesDeserializer\">BorrowedBytesDeserializer</a>&lt;'de, E&gt;","synthetic":true,"types":["serde::de::value::BorrowedBytesDeserializer"]},{"text":"impl&lt;I, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.SeqDeserializer.html\" title=\"struct serde::de::value::SeqDeserializer\">SeqDeserializer</a>&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["serde::de::value::SeqDeserializer"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.SeqAccessDeserializer.html\" title=\"struct serde::de::value::SeqAccessDeserializer\">SeqAccessDeserializer</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["serde::de::value::SeqAccessDeserializer"]},{"text":"impl&lt;'de, I, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.MapDeserializer.html\" title=\"struct serde::de::value::MapDeserializer\">MapDeserializer</a>&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a> as Pair&gt;::Second: Freeze,&nbsp;</span>","synthetic":true,"types":["serde::de::value::MapDeserializer"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.MapAccessDeserializer.html\" title=\"struct serde::de::value::MapAccessDeserializer\">MapAccessDeserializer</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["serde::de::value::MapAccessDeserializer"]},{"text":"impl&lt;Ok, Error&gt; Freeze for <a class=\"struct\" href=\"serde/ser/struct.Impossible.html\" title=\"struct serde::ser::Impossible\">Impossible</a>&lt;Ok, Error&gt;","synthetic":true,"types":["serde::ser::impossible::Impossible"]}];
implementors["serde_hjson"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"serde_hjson/builder/struct.ArrayBuilder.html\" title=\"struct serde_hjson::builder::ArrayBuilder\">ArrayBuilder</a>","synthetic":true,"types":["serde_hjson::builder::ArrayBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_hjson/builder/struct.ObjectBuilder.html\" title=\"struct serde_hjson::builder::ObjectBuilder\">ObjectBuilder</a>","synthetic":true,"types":["serde_hjson::builder::ObjectBuilder"]},{"text":"impl&lt;Iter&gt; Freeze for <a class=\"struct\" href=\"serde_hjson/de/struct.Deserializer.html\" title=\"struct serde_hjson::de::Deserializer\">Deserializer</a>&lt;Iter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Iter: Freeze,&nbsp;</span>","synthetic":true,"types":["serde_hjson::de::Deserializer"]},{"text":"impl&lt;T, Iter&gt; Freeze for <a class=\"struct\" href=\"serde_hjson/de/struct.StreamDeserializer.html\" title=\"struct serde_hjson::de::StreamDeserializer\">StreamDeserializer</a>&lt;T, Iter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Iter: Freeze,&nbsp;</span>","synthetic":true,"types":["serde_hjson::de::StreamDeserializer"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_hjson/error/enum.ErrorCode.html\" title=\"enum serde_hjson::error::ErrorCode\">ErrorCode</a>","synthetic":true,"types":["serde_hjson::error::ErrorCode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_hjson/error/enum.Error.html\" title=\"enum serde_hjson::error::Error\">Error</a>","synthetic":true,"types":["serde_hjson::error::Error"]},{"text":"impl&lt;W, F&gt; Freeze for <a class=\"struct\" href=\"serde_hjson/ser/struct.Serializer.html\" title=\"struct serde_hjson::ser::Serializer\">Serializer</a>&lt;W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["serde_hjson::ser::Serializer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_hjson/value/struct.Serializer.html\" title=\"struct serde_hjson::value::Serializer\">Serializer</a>","synthetic":true,"types":["serde_hjson::value::Serializer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_hjson/value/struct.Deserializer.html\" title=\"struct serde_hjson::value::Deserializer\">Deserializer</a>","synthetic":true,"types":["serde_hjson::value::Deserializer"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_hjson/value/enum.Value.html\" title=\"enum serde_hjson::value::Value\">Value</a>","synthetic":true,"types":["serde_hjson::value::Value"]}];
implementors["serde_json"] = [{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"serde_json/de/struct.Deserializer.html\" title=\"struct serde_json::de::Deserializer\">Deserializer</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["serde_json::de::Deserializer"]},{"text":"impl&lt;'de, R, T&gt; Freeze for <a class=\"struct\" href=\"serde_json/de/struct.StreamDeserializer.html\" title=\"struct serde_json::de::StreamDeserializer\">StreamDeserializer</a>&lt;'de, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["serde_json::de::StreamDeserializer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_json/error/struct.Error.html\" title=\"struct serde_json::error::Error\">Error</a>","synthetic":true,"types":["serde_json::error::Error"]},{"text":"impl&lt;W, F&gt; Freeze for <a class=\"struct\" href=\"serde_json/ser/struct.Serializer.html\" title=\"struct serde_json::ser::Serializer\">Serializer</a>&lt;W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["serde_json::ser::Serializer"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.Map.html\" title=\"struct serde_json::map::Map\">Map</a>&lt;K, V&gt;","synthetic":true,"types":["serde_json::map::Map"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_json/struct.Number.html\" title=\"struct serde_json::Number\">Number</a>","synthetic":true,"types":["serde_json::number::Number"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a>","synthetic":true,"types":["serde_json::value::Value"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/de/struct.SliceRead.html\" title=\"struct serde_json::de::SliceRead\">SliceRead</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::read::SliceRead"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/de/struct.StrRead.html\" title=\"struct serde_json::de::StrRead\">StrRead</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::read::StrRead"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"serde_json/de/struct.IoRead.html\" title=\"struct serde_json::de::IoRead\">IoRead</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["serde_json::read::IoRead"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_json/error/enum.Category.html\" title=\"enum serde_json::error::Category\">Category</a>","synthetic":true,"types":["serde_json::error::Category"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.VacantEntry.html\" title=\"struct serde_json::map::VacantEntry\">VacantEntry</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::VacantEntry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.OccupiedEntry.html\" title=\"struct serde_json::map::OccupiedEntry\">OccupiedEntry</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::OccupiedEntry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.Iter.html\" title=\"struct serde_json::map::Iter\">Iter</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::Iter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.IterMut.html\" title=\"struct serde_json::map::IterMut\">IterMut</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::IterMut"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_json/map/struct.IntoIter.html\" title=\"struct serde_json::map::IntoIter\">IntoIter</a>","synthetic":true,"types":["serde_json::map::IntoIter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.Keys.html\" title=\"struct serde_json::map::Keys\">Keys</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::Keys"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.Values.html\" title=\"struct serde_json::map::Values\">Values</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::Values"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.ValuesMut.html\" title=\"struct serde_json::map::ValuesMut\">ValuesMut</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::ValuesMut"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"serde_json/map/enum.Entry.html\" title=\"enum serde_json::map::Entry\">Entry</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::Entry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_json/ser/struct.CompactFormatter.html\" title=\"struct serde_json::ser::CompactFormatter\">CompactFormatter</a>","synthetic":true,"types":["serde_json::ser::CompactFormatter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/ser/struct.PrettyFormatter.html\" title=\"struct serde_json::ser::PrettyFormatter\">PrettyFormatter</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::ser::PrettyFormatter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_json/ser/enum.CharEscape.html\" title=\"enum serde_json::ser::CharEscape\">CharEscape</a>","synthetic":true,"types":["serde_json::ser::CharEscape"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_json/value/struct.Serializer.html\" title=\"struct serde_json::value::Serializer\">Serializer</a>","synthetic":true,"types":["serde_json::value::ser::Serializer"]}];
implementors["serde_test"] = [{"text":"impl&lt;'a, I&gt; Freeze for <a class=\"struct\" href=\"serde_test/struct.Serializer.html\" title=\"struct serde_test::Serializer\">Serializer</a>&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["serde_test::ser::Serializer"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"serde_test/struct.Deserializer.html\" title=\"struct serde_test::Deserializer\">Deserializer</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["serde_test::de::Deserializer"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"serde_test/enum.Token.html\" title=\"enum serde_test::Token\">Token</a>&lt;'a&gt;","synthetic":true,"types":["serde_test::token::Token"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_test/enum.Error.html\" title=\"enum serde_test::Error\">Error</a>","synthetic":true,"types":["serde_test::error::Error"]}];
implementors["serde_urlencoded"] = [{"text":"impl&lt;'de&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/de/struct.Deserializer.html\" title=\"struct serde_urlencoded::de::Deserializer\">Deserializer</a>&lt;'de&gt;","synthetic":true,"types":["serde_urlencoded::de::Deserializer"]},{"text":"impl&lt;'input, 'output, Target&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/ser/struct.Serializer.html\" title=\"struct serde_urlencoded::ser::Serializer\">Serializer</a>&lt;'input, 'output, Target&gt;","synthetic":true,"types":["serde_urlencoded::ser::Serializer"]},{"text":"impl&lt;'input, 'output, Target&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/ser/struct.SeqSerializer.html\" title=\"struct serde_urlencoded::ser::SeqSerializer\">SeqSerializer</a>&lt;'input, 'output, Target&gt;","synthetic":true,"types":["serde_urlencoded::ser::SeqSerializer"]},{"text":"impl&lt;'input, 'output, Target&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/ser/struct.TupleSerializer.html\" title=\"struct serde_urlencoded::ser::TupleSerializer\">TupleSerializer</a>&lt;'input, 'output, Target&gt;","synthetic":true,"types":["serde_urlencoded::ser::TupleSerializer"]},{"text":"impl&lt;'input, 'output, T&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/ser/struct.TupleStructSerializer.html\" title=\"struct serde_urlencoded::ser::TupleStructSerializer\">TupleStructSerializer</a>&lt;'input, 'output, T&gt;","synthetic":true,"types":["serde_urlencoded::ser::TupleStructSerializer"]},{"text":"impl&lt;'input, 'output, T&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/ser/struct.TupleVariantSerializer.html\" title=\"struct serde_urlencoded::ser::TupleVariantSerializer\">TupleVariantSerializer</a>&lt;'input, 'output, T&gt;","synthetic":true,"types":["serde_urlencoded::ser::TupleVariantSerializer"]},{"text":"impl&lt;'input, 'output, Target&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/ser/struct.MapSerializer.html\" title=\"struct serde_urlencoded::ser::MapSerializer\">MapSerializer</a>&lt;'input, 'output, Target&gt;","synthetic":true,"types":["serde_urlencoded::ser::MapSerializer"]},{"text":"impl&lt;'input, 'output, Target&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/ser/struct.StructSerializer.html\" title=\"struct serde_urlencoded::ser::StructSerializer\">StructSerializer</a>&lt;'input, 'output, Target&gt;","synthetic":true,"types":["serde_urlencoded::ser::StructSerializer"]},{"text":"impl&lt;'input, 'output, T&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/ser/struct.StructVariantSerializer.html\" title=\"struct serde_urlencoded::ser::StructVariantSerializer\">StructVariantSerializer</a>&lt;'input, 'output, T&gt;","synthetic":true,"types":["serde_urlencoded::ser::StructVariantSerializer"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_urlencoded/ser/enum.Error.html\" title=\"enum serde_urlencoded::ser::Error\">Error</a>","synthetic":true,"types":["serde_urlencoded::ser::Error"]}];
implementors["sha1"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"sha1/struct.Sha1.html\" title=\"struct sha1::Sha1\">Sha1</a>","synthetic":true,"types":["sha1::Sha1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sha1/struct.Digest.html\" title=\"struct sha1::Digest\">Digest</a>","synthetic":true,"types":["sha1::Digest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sha1/struct.DigestParseError.html\" title=\"struct sha1::DigestParseError\">DigestParseError</a>","synthetic":true,"types":["sha1::DigestParseError"]}];
implementors["sha2"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"sha2/struct.Sha256.html\" title=\"struct sha2::Sha256\">Sha256</a>","synthetic":true,"types":["sha2::sha256::Sha256"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sha2/struct.Sha224.html\" title=\"struct sha2::Sha224\">Sha224</a>","synthetic":true,"types":["sha2::sha256::Sha224"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sha2/struct.Sha512.html\" title=\"struct sha2::Sha512\">Sha512</a>","synthetic":true,"types":["sha2::sha512::Sha512"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sha2/struct.Sha384.html\" title=\"struct sha2::Sha384\">Sha384</a>","synthetic":true,"types":["sha2::sha512::Sha384"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sha2/struct.Sha512Trunc224.html\" title=\"struct sha2::Sha512Trunc224\">Sha512Trunc224</a>","synthetic":true,"types":["sha2::sha512::Sha512Trunc224"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sha2/struct.Sha512Trunc256.html\" title=\"struct sha2::Sha512Trunc256\">Sha512Trunc256</a>","synthetic":true,"types":["sha2::sha512::Sha512Trunc256"]}];
implementors["signal_hook_registry"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"signal_hook_registry/struct.SigId.html\" title=\"struct signal_hook_registry::SigId\">SigId</a>","synthetic":true,"types":["signal_hook_registry::SigId"]}];
implementors["siphasher"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"siphasher/sip/struct.SipHasher13.html\" title=\"struct siphasher::sip::SipHasher13\">SipHasher13</a>","synthetic":true,"types":["siphasher::sip::SipHasher13"]},{"text":"impl Freeze for <a class=\"struct\" href=\"siphasher/sip/struct.SipHasher24.html\" title=\"struct siphasher::sip::SipHasher24\">SipHasher24</a>","synthetic":true,"types":["siphasher::sip::SipHasher24"]},{"text":"impl Freeze for <a class=\"struct\" href=\"siphasher/sip/struct.SipHasher.html\" title=\"struct siphasher::sip::SipHasher\">SipHasher</a>","synthetic":true,"types":["siphasher::sip::SipHasher"]},{"text":"impl Freeze for <a class=\"struct\" href=\"siphasher/sip128/struct.Hash128.html\" title=\"struct siphasher::sip128::Hash128\">Hash128</a>","synthetic":true,"types":["siphasher::sip128::Hash128"]},{"text":"impl Freeze for <a class=\"struct\" href=\"siphasher/sip128/struct.SipHasher13.html\" title=\"struct siphasher::sip128::SipHasher13\">SipHasher13</a>","synthetic":true,"types":["siphasher::sip128::SipHasher13"]},{"text":"impl Freeze for <a class=\"struct\" href=\"siphasher/sip128/struct.SipHasher24.html\" title=\"struct siphasher::sip128::SipHasher24\">SipHasher24</a>","synthetic":true,"types":["siphasher::sip128::SipHasher24"]},{"text":"impl Freeze for <a class=\"struct\" href=\"siphasher/sip128/struct.SipHasher.html\" title=\"struct siphasher::sip128::SipHasher\">SipHasher</a>","synthetic":true,"types":["siphasher::sip128::SipHasher"]}];
implementors["slab"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.Slab.html\" title=\"struct slab::Slab\">Slab</a>&lt;T&gt;","synthetic":true,"types":["slab::Slab"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.VacantEntry.html\" title=\"struct slab::VacantEntry\">VacantEntry</a>&lt;'a, T&gt;","synthetic":true,"types":["slab::VacantEntry"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.Iter.html\" title=\"struct slab::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["slab::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.IterMut.html\" title=\"struct slab::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["slab::IterMut"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.Drain.html\" title=\"struct slab::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["slab::Drain"]}];
implementors["smallvec"] = [{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"smallvec/struct.Drain.html\" title=\"struct smallvec::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["smallvec::Drain"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"smallvec/struct.SmallVec.html\" title=\"struct smallvec::SmallVec\">SmallVec</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["smallvec::SmallVec"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"smallvec/struct.IntoIter.html\" title=\"struct smallvec::IntoIter\">IntoIter</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["smallvec::IntoIter"]}];
implementors["socket2"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"socket2/struct.Socket.html\" title=\"struct socket2::Socket\">Socket</a>","synthetic":true,"types":["socket2::Socket"]},{"text":"impl Freeze for <a class=\"struct\" href=\"socket2/struct.SockAddr.html\" title=\"struct socket2::SockAddr\">SockAddr</a>","synthetic":true,"types":["socket2::SockAddr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"socket2/struct.Domain.html\" title=\"struct socket2::Domain\">Domain</a>","synthetic":true,"types":["socket2::Domain"]},{"text":"impl Freeze for <a class=\"struct\" href=\"socket2/struct.Type.html\" title=\"struct socket2::Type\">Type</a>","synthetic":true,"types":["socket2::Type"]},{"text":"impl Freeze for <a class=\"struct\" href=\"socket2/struct.Protocol.html\" title=\"struct socket2::Protocol\">Protocol</a>","synthetic":true,"types":["socket2::Protocol"]}];
implementors["spin"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"spin/struct.Mutex.html\" title=\"struct spin::Mutex\">Mutex</a>&lt;T&gt;","synthetic":true,"types":["spin::mutex::Mutex"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"spin/struct.MutexGuard.html\" title=\"struct spin::MutexGuard\">MutexGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["spin::mutex::MutexGuard"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"spin/struct.RwLock.html\" title=\"struct spin::RwLock\">RwLock</a>&lt;T&gt;","synthetic":true,"types":["spin::rw_lock::RwLock"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"spin/struct.RwLockReadGuard.html\" title=\"struct spin::RwLockReadGuard\">RwLockReadGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["spin::rw_lock::RwLockReadGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"spin/struct.RwLockWriteGuard.html\" title=\"struct spin::RwLockWriteGuard\">RwLockWriteGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["spin::rw_lock::RwLockWriteGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"spin/struct.RwLockUpgradeableGuard.html\" title=\"struct spin::RwLockUpgradeableGuard\">RwLockUpgradeableGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["spin::rw_lock::RwLockUpgradeableGuard"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"spin/struct.Once.html\" title=\"struct spin::Once\">Once</a>&lt;T&gt;","synthetic":true,"types":["spin::once::Once"]}];
implementors["stringprep"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"stringprep/struct.Error.html\" title=\"struct stringprep::Error\">Error</a>","synthetic":true,"types":["stringprep::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"stringprep/tables/struct.CaseFoldForNfkc.html\" title=\"struct stringprep::tables::CaseFoldForNfkc\">CaseFoldForNfkc</a>","synthetic":true,"types":["stringprep::tables::CaseFoldForNfkc"]}];
implementors["subtle"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>","synthetic":true,"types":["subtle::Choice"]}];
implementors["syn"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Attribute.html\" title=\"struct syn::Attribute\">Attribute</a>","synthetic":true,"types":["syn::attr::Attribute"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.MetaList.html\" title=\"struct syn::MetaList\">MetaList</a>","synthetic":true,"types":["syn::attr::MetaList"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.MetaNameValue.html\" title=\"struct syn::MetaNameValue\">MetaNameValue</a>","synthetic":true,"types":["syn::attr::MetaNameValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Field.html\" title=\"struct syn::Field\">Field</a>","synthetic":true,"types":["syn::data::Field"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldsNamed.html\" title=\"struct syn::FieldsNamed\">FieldsNamed</a>","synthetic":true,"types":["syn::data::FieldsNamed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldsUnnamed.html\" title=\"struct syn::FieldsUnnamed\">FieldsUnnamed</a>","synthetic":true,"types":["syn::data::FieldsUnnamed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Variant.html\" title=\"struct syn::Variant\">Variant</a>","synthetic":true,"types":["syn::data::Variant"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisCrate.html\" title=\"struct syn::VisCrate\">VisCrate</a>","synthetic":true,"types":["syn::data::VisCrate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisPublic.html\" title=\"struct syn::VisPublic\">VisPublic</a>","synthetic":true,"types":["syn::data::VisPublic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisRestricted.html\" title=\"struct syn::VisRestricted\">VisRestricted</a>","synthetic":true,"types":["syn::data::VisRestricted"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Arm.html\" title=\"struct syn::Arm\">Arm</a>","synthetic":true,"types":["syn::expr::Arm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldValue.html\" title=\"struct syn::FieldValue\">FieldValue</a>","synthetic":true,"types":["syn::expr::FieldValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Label.html\" title=\"struct syn::Label\">Label</a>","synthetic":true,"types":["syn::expr::Label"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.MethodTurbofish.html\" title=\"struct syn::MethodTurbofish\">MethodTurbofish</a>","synthetic":true,"types":["syn::expr::MethodTurbofish"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprArray.html\" title=\"struct syn::ExprArray\">ExprArray</a>","synthetic":true,"types":["syn::expr::ExprArray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAssign.html\" title=\"struct syn::ExprAssign\">ExprAssign</a>","synthetic":true,"types":["syn::expr::ExprAssign"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAssignOp.html\" title=\"struct syn::ExprAssignOp\">ExprAssignOp</a>","synthetic":true,"types":["syn::expr::ExprAssignOp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAsync.html\" title=\"struct syn::ExprAsync\">ExprAsync</a>","synthetic":true,"types":["syn::expr::ExprAsync"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAwait.html\" title=\"struct syn::ExprAwait\">ExprAwait</a>","synthetic":true,"types":["syn::expr::ExprAwait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBinary.html\" title=\"struct syn::ExprBinary\">ExprBinary</a>","synthetic":true,"types":["syn::expr::ExprBinary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBlock.html\" title=\"struct syn::ExprBlock\">ExprBlock</a>","synthetic":true,"types":["syn::expr::ExprBlock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBox.html\" title=\"struct syn::ExprBox\">ExprBox</a>","synthetic":true,"types":["syn::expr::ExprBox"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBreak.html\" title=\"struct syn::ExprBreak\">ExprBreak</a>","synthetic":true,"types":["syn::expr::ExprBreak"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprCall.html\" title=\"struct syn::ExprCall\">ExprCall</a>","synthetic":true,"types":["syn::expr::ExprCall"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprCast.html\" title=\"struct syn::ExprCast\">ExprCast</a>","synthetic":true,"types":["syn::expr::ExprCast"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprClosure.html\" title=\"struct syn::ExprClosure\">ExprClosure</a>","synthetic":true,"types":["syn::expr::ExprClosure"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprContinue.html\" title=\"struct syn::ExprContinue\">ExprContinue</a>","synthetic":true,"types":["syn::expr::ExprContinue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprField.html\" title=\"struct syn::ExprField\">ExprField</a>","synthetic":true,"types":["syn::expr::ExprField"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprForLoop.html\" title=\"struct syn::ExprForLoop\">ExprForLoop</a>","synthetic":true,"types":["syn::expr::ExprForLoop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprGroup.html\" title=\"struct syn::ExprGroup\">ExprGroup</a>","synthetic":true,"types":["syn::expr::ExprGroup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprIf.html\" title=\"struct syn::ExprIf\">ExprIf</a>","synthetic":true,"types":["syn::expr::ExprIf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprIndex.html\" title=\"struct syn::ExprIndex\">ExprIndex</a>","synthetic":true,"types":["syn::expr::ExprIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLet.html\" title=\"struct syn::ExprLet\">ExprLet</a>","synthetic":true,"types":["syn::expr::ExprLet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLit.html\" title=\"struct syn::ExprLit\">ExprLit</a>","synthetic":true,"types":["syn::expr::ExprLit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLoop.html\" title=\"struct syn::ExprLoop\">ExprLoop</a>","synthetic":true,"types":["syn::expr::ExprLoop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMacro.html\" title=\"struct syn::ExprMacro\">ExprMacro</a>","synthetic":true,"types":["syn::expr::ExprMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMatch.html\" title=\"struct syn::ExprMatch\">ExprMatch</a>","synthetic":true,"types":["syn::expr::ExprMatch"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMethodCall.html\" title=\"struct syn::ExprMethodCall\">ExprMethodCall</a>","synthetic":true,"types":["syn::expr::ExprMethodCall"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprParen.html\" title=\"struct syn::ExprParen\">ExprParen</a>","synthetic":true,"types":["syn::expr::ExprParen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprPath.html\" title=\"struct syn::ExprPath\">ExprPath</a>","synthetic":true,"types":["syn::expr::ExprPath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprRange.html\" title=\"struct syn::ExprRange\">ExprRange</a>","synthetic":true,"types":["syn::expr::ExprRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprReference.html\" title=\"struct syn::ExprReference\">ExprReference</a>","synthetic":true,"types":["syn::expr::ExprReference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprRepeat.html\" title=\"struct syn::ExprRepeat\">ExprRepeat</a>","synthetic":true,"types":["syn::expr::ExprRepeat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprReturn.html\" title=\"struct syn::ExprReturn\">ExprReturn</a>","synthetic":true,"types":["syn::expr::ExprReturn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprStruct.html\" title=\"struct syn::ExprStruct\">ExprStruct</a>","synthetic":true,"types":["syn::expr::ExprStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTry.html\" title=\"struct syn::ExprTry\">ExprTry</a>","synthetic":true,"types":["syn::expr::ExprTry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTryBlock.html\" title=\"struct syn::ExprTryBlock\">ExprTryBlock</a>","synthetic":true,"types":["syn::expr::ExprTryBlock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTuple.html\" title=\"struct syn::ExprTuple\">ExprTuple</a>","synthetic":true,"types":["syn::expr::ExprTuple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprType.html\" title=\"struct syn::ExprType\">ExprType</a>","synthetic":true,"types":["syn::expr::ExprType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprUnary.html\" title=\"struct syn::ExprUnary\">ExprUnary</a>","synthetic":true,"types":["syn::expr::ExprUnary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprUnsafe.html\" title=\"struct syn::ExprUnsafe\">ExprUnsafe</a>","synthetic":true,"types":["syn::expr::ExprUnsafe"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprWhile.html\" title=\"struct syn::ExprWhile\">ExprWhile</a>","synthetic":true,"types":["syn::expr::ExprWhile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprYield.html\" title=\"struct syn::ExprYield\">ExprYield</a>","synthetic":true,"types":["syn::expr::ExprYield"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Index.html\" title=\"struct syn::Index\">Index</a>","synthetic":true,"types":["syn::expr::Index"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.BoundLifetimes.html\" title=\"struct syn::BoundLifetimes\">BoundLifetimes</a>","synthetic":true,"types":["syn::generics::BoundLifetimes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ConstParam.html\" title=\"struct syn::ConstParam\">ConstParam</a>","synthetic":true,"types":["syn::generics::ConstParam"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Generics.html\" title=\"struct syn::Generics\">Generics</a>","synthetic":true,"types":["syn::generics::Generics"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LifetimeDef.html\" title=\"struct syn::LifetimeDef\">LifetimeDef</a>","synthetic":true,"types":["syn::generics::LifetimeDef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateEq.html\" title=\"struct syn::PredicateEq\">PredicateEq</a>","synthetic":true,"types":["syn::generics::PredicateEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateLifetime.html\" title=\"struct syn::PredicateLifetime\">PredicateLifetime</a>","synthetic":true,"types":["syn::generics::PredicateLifetime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateType.html\" title=\"struct syn::PredicateType\">PredicateType</a>","synthetic":true,"types":["syn::generics::PredicateType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitBound.html\" title=\"struct syn::TraitBound\">TraitBound</a>","synthetic":true,"types":["syn::generics::TraitBound"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeParam.html\" title=\"struct syn::TypeParam\">TypeParam</a>","synthetic":true,"types":["syn::generics::TypeParam"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.WhereClause.html\" title=\"struct syn::WhereClause\">WhereClause</a>","synthetic":true,"types":["syn::generics::WhereClause"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.ImplGenerics.html\" title=\"struct syn::ImplGenerics\">ImplGenerics</a>&lt;'a&gt;","synthetic":true,"types":["syn::generics::ImplGenerics"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.Turbofish.html\" title=\"struct syn::Turbofish\">Turbofish</a>&lt;'a&gt;","synthetic":true,"types":["syn::generics::Turbofish"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.TypeGenerics.html\" title=\"struct syn::TypeGenerics\">TypeGenerics</a>&lt;'a&gt;","synthetic":true,"types":["syn::generics::TypeGenerics"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemFn.html\" title=\"struct syn::ForeignItemFn\">ForeignItemFn</a>","synthetic":true,"types":["syn::item::ForeignItemFn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemMacro.html\" title=\"struct syn::ForeignItemMacro\">ForeignItemMacro</a>","synthetic":true,"types":["syn::item::ForeignItemMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemStatic.html\" title=\"struct syn::ForeignItemStatic\">ForeignItemStatic</a>","synthetic":true,"types":["syn::item::ForeignItemStatic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemType.html\" title=\"struct syn::ForeignItemType\">ForeignItemType</a>","synthetic":true,"types":["syn::item::ForeignItemType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemConst.html\" title=\"struct syn::ImplItemConst\">ImplItemConst</a>","synthetic":true,"types":["syn::item::ImplItemConst"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemMacro.html\" title=\"struct syn::ImplItemMacro\">ImplItemMacro</a>","synthetic":true,"types":["syn::item::ImplItemMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemMethod.html\" title=\"struct syn::ImplItemMethod\">ImplItemMethod</a>","synthetic":true,"types":["syn::item::ImplItemMethod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemType.html\" title=\"struct syn::ImplItemType\">ImplItemType</a>","synthetic":true,"types":["syn::item::ImplItemType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemConst.html\" title=\"struct syn::ItemConst\">ItemConst</a>","synthetic":true,"types":["syn::item::ItemConst"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemEnum.html\" title=\"struct syn::ItemEnum\">ItemEnum</a>","synthetic":true,"types":["syn::item::ItemEnum"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemExternCrate.html\" title=\"struct syn::ItemExternCrate\">ItemExternCrate</a>","synthetic":true,"types":["syn::item::ItemExternCrate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemFn.html\" title=\"struct syn::ItemFn\">ItemFn</a>","synthetic":true,"types":["syn::item::ItemFn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemForeignMod.html\" title=\"struct syn::ItemForeignMod\">ItemForeignMod</a>","synthetic":true,"types":["syn::item::ItemForeignMod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemImpl.html\" title=\"struct syn::ItemImpl\">ItemImpl</a>","synthetic":true,"types":["syn::item::ItemImpl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemMacro.html\" title=\"struct syn::ItemMacro\">ItemMacro</a>","synthetic":true,"types":["syn::item::ItemMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemMacro2.html\" title=\"struct syn::ItemMacro2\">ItemMacro2</a>","synthetic":true,"types":["syn::item::ItemMacro2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemMod.html\" title=\"struct syn::ItemMod\">ItemMod</a>","synthetic":true,"types":["syn::item::ItemMod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemStatic.html\" title=\"struct syn::ItemStatic\">ItemStatic</a>","synthetic":true,"types":["syn::item::ItemStatic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemStruct.html\" title=\"struct syn::ItemStruct\">ItemStruct</a>","synthetic":true,"types":["syn::item::ItemStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemTrait.html\" title=\"struct syn::ItemTrait\">ItemTrait</a>","synthetic":true,"types":["syn::item::ItemTrait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemTraitAlias.html\" title=\"struct syn::ItemTraitAlias\">ItemTraitAlias</a>","synthetic":true,"types":["syn::item::ItemTraitAlias"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemType.html\" title=\"struct syn::ItemType\">ItemType</a>","synthetic":true,"types":["syn::item::ItemType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemUnion.html\" title=\"struct syn::ItemUnion\">ItemUnion</a>","synthetic":true,"types":["syn::item::ItemUnion"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemUse.html\" title=\"struct syn::ItemUse\">ItemUse</a>","synthetic":true,"types":["syn::item::ItemUse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Receiver.html\" title=\"struct syn::Receiver\">Receiver</a>","synthetic":true,"types":["syn::item::Receiver"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Signature.html\" title=\"struct syn::Signature\">Signature</a>","synthetic":true,"types":["syn::item::Signature"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemConst.html\" title=\"struct syn::TraitItemConst\">TraitItemConst</a>","synthetic":true,"types":["syn::item::TraitItemConst"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemMacro.html\" title=\"struct syn::TraitItemMacro\">TraitItemMacro</a>","synthetic":true,"types":["syn::item::TraitItemMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemMethod.html\" title=\"struct syn::TraitItemMethod\">TraitItemMethod</a>","synthetic":true,"types":["syn::item::TraitItemMethod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemType.html\" title=\"struct syn::TraitItemType\">TraitItemType</a>","synthetic":true,"types":["syn::item::TraitItemType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UseGlob.html\" title=\"struct syn::UseGlob\">UseGlob</a>","synthetic":true,"types":["syn::item::UseGlob"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UseGroup.html\" title=\"struct syn::UseGroup\">UseGroup</a>","synthetic":true,"types":["syn::item::UseGroup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UseName.html\" title=\"struct syn::UseName\">UseName</a>","synthetic":true,"types":["syn::item::UseName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UsePath.html\" title=\"struct syn::UsePath\">UsePath</a>","synthetic":true,"types":["syn::item::UsePath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UseRename.html\" title=\"struct syn::UseRename\">UseRename</a>","synthetic":true,"types":["syn::item::UseRename"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.File.html\" title=\"struct syn::File\">File</a>","synthetic":true,"types":["syn::file::File"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Lifetime.html\" title=\"struct syn::Lifetime\">Lifetime</a>","synthetic":true,"types":["syn::lifetime::Lifetime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitBool.html\" title=\"struct syn::LitBool\">LitBool</a>","synthetic":true,"types":["syn::lit::LitBool"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitByte.html\" title=\"struct syn::LitByte\">LitByte</a>","synthetic":true,"types":["syn::lit::LitByte"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitByteStr.html\" title=\"struct syn::LitByteStr\">LitByteStr</a>","synthetic":true,"types":["syn::lit::LitByteStr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitChar.html\" title=\"struct syn::LitChar\">LitChar</a>","synthetic":true,"types":["syn::lit::LitChar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitFloat.html\" title=\"struct syn::LitFloat\">LitFloat</a>","synthetic":true,"types":["syn::lit::LitFloat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitInt.html\" title=\"struct syn::LitInt\">LitInt</a>","synthetic":true,"types":["syn::lit::LitInt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitStr.html\" title=\"struct syn::LitStr\">LitStr</a>","synthetic":true,"types":["syn::lit::LitStr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Macro.html\" title=\"struct syn::Macro\">Macro</a>","synthetic":true,"types":["syn::mac::Macro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataEnum.html\" title=\"struct syn::DataEnum\">DataEnum</a>","synthetic":true,"types":["syn::derive::DataEnum"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataStruct.html\" title=\"struct syn::DataStruct\">DataStruct</a>","synthetic":true,"types":["syn::derive::DataStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataUnion.html\" title=\"struct syn::DataUnion\">DataUnion</a>","synthetic":true,"types":["syn::derive::DataUnion"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DeriveInput.html\" title=\"struct syn::DeriveInput\">DeriveInput</a>","synthetic":true,"types":["syn::derive::DeriveInput"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Block.html\" title=\"struct syn::Block\">Block</a>","synthetic":true,"types":["syn::stmt::Block"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Local.html\" title=\"struct syn::Local\">Local</a>","synthetic":true,"types":["syn::stmt::Local"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Abi.html\" title=\"struct syn::Abi\">Abi</a>","synthetic":true,"types":["syn::ty::Abi"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.BareFnArg.html\" title=\"struct syn::BareFnArg\">BareFnArg</a>","synthetic":true,"types":["syn::ty::BareFnArg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeArray.html\" title=\"struct syn::TypeArray\">TypeArray</a>","synthetic":true,"types":["syn::ty::TypeArray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeBareFn.html\" title=\"struct syn::TypeBareFn\">TypeBareFn</a>","synthetic":true,"types":["syn::ty::TypeBareFn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeGroup.html\" title=\"struct syn::TypeGroup\">TypeGroup</a>","synthetic":true,"types":["syn::ty::TypeGroup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeImplTrait.html\" title=\"struct syn::TypeImplTrait\">TypeImplTrait</a>","synthetic":true,"types":["syn::ty::TypeImplTrait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeInfer.html\" title=\"struct syn::TypeInfer\">TypeInfer</a>","synthetic":true,"types":["syn::ty::TypeInfer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeMacro.html\" title=\"struct syn::TypeMacro\">TypeMacro</a>","synthetic":true,"types":["syn::ty::TypeMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeNever.html\" title=\"struct syn::TypeNever\">TypeNever</a>","synthetic":true,"types":["syn::ty::TypeNever"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeParen.html\" title=\"struct syn::TypeParen\">TypeParen</a>","synthetic":true,"types":["syn::ty::TypeParen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypePath.html\" title=\"struct syn::TypePath\">TypePath</a>","synthetic":true,"types":["syn::ty::TypePath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypePtr.html\" title=\"struct syn::TypePtr\">TypePtr</a>","synthetic":true,"types":["syn::ty::TypePtr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeReference.html\" title=\"struct syn::TypeReference\">TypeReference</a>","synthetic":true,"types":["syn::ty::TypeReference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeSlice.html\" title=\"struct syn::TypeSlice\">TypeSlice</a>","synthetic":true,"types":["syn::ty::TypeSlice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeTraitObject.html\" title=\"struct syn::TypeTraitObject\">TypeTraitObject</a>","synthetic":true,"types":["syn::ty::TypeTraitObject"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeTuple.html\" title=\"struct syn::TypeTuple\">TypeTuple</a>","synthetic":true,"types":["syn::ty::TypeTuple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Variadic.html\" title=\"struct syn::Variadic\">Variadic</a>","synthetic":true,"types":["syn::ty::Variadic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldPat.html\" title=\"struct syn::FieldPat\">FieldPat</a>","synthetic":true,"types":["syn::pat::FieldPat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatBox.html\" title=\"struct syn::PatBox\">PatBox</a>","synthetic":true,"types":["syn::pat::PatBox"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatIdent.html\" title=\"struct syn::PatIdent\">PatIdent</a>","synthetic":true,"types":["syn::pat::PatIdent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatLit.html\" title=\"struct syn::PatLit\">PatLit</a>","synthetic":true,"types":["syn::pat::PatLit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatMacro.html\" title=\"struct syn::PatMacro\">PatMacro</a>","synthetic":true,"types":["syn::pat::PatMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatOr.html\" title=\"struct syn::PatOr\">PatOr</a>","synthetic":true,"types":["syn::pat::PatOr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatPath.html\" title=\"struct syn::PatPath\">PatPath</a>","synthetic":true,"types":["syn::pat::PatPath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatRange.html\" title=\"struct syn::PatRange\">PatRange</a>","synthetic":true,"types":["syn::pat::PatRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatReference.html\" title=\"struct syn::PatReference\">PatReference</a>","synthetic":true,"types":["syn::pat::PatReference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatRest.html\" title=\"struct syn::PatRest\">PatRest</a>","synthetic":true,"types":["syn::pat::PatRest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatSlice.html\" title=\"struct syn::PatSlice\">PatSlice</a>","synthetic":true,"types":["syn::pat::PatSlice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatStruct.html\" title=\"struct syn::PatStruct\">PatStruct</a>","synthetic":true,"types":["syn::pat::PatStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatTuple.html\" title=\"struct syn::PatTuple\">PatTuple</a>","synthetic":true,"types":["syn::pat::PatTuple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatTupleStruct.html\" title=\"struct syn::PatTupleStruct\">PatTupleStruct</a>","synthetic":true,"types":["syn::pat::PatTupleStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatType.html\" title=\"struct syn::PatType\">PatType</a>","synthetic":true,"types":["syn::pat::PatType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatWild.html\" title=\"struct syn::PatWild\">PatWild</a>","synthetic":true,"types":["syn::pat::PatWild"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.AngleBracketedGenericArguments.html\" title=\"struct syn::AngleBracketedGenericArguments\">AngleBracketedGenericArguments</a>","synthetic":true,"types":["syn::path::AngleBracketedGenericArguments"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Binding.html\" title=\"struct syn::Binding\">Binding</a>","synthetic":true,"types":["syn::path::Binding"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Constraint.html\" title=\"struct syn::Constraint\">Constraint</a>","synthetic":true,"types":["syn::path::Constraint"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ParenthesizedGenericArguments.html\" title=\"struct syn::ParenthesizedGenericArguments\">ParenthesizedGenericArguments</a>","synthetic":true,"types":["syn::path::ParenthesizedGenericArguments"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Path.html\" title=\"struct syn::Path\">Path</a>","synthetic":true,"types":["syn::path::Path"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PathSegment.html\" title=\"struct syn::PathSegment\">PathSegment</a>","synthetic":true,"types":["syn::path::PathSegment"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.QSelf.html\" title=\"struct syn::QSelf\">QSelf</a>","synthetic":true,"types":["syn::path::QSelf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Error.html\" title=\"struct syn::Error\">Error</a>","synthetic":true,"types":["syn::error::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.AttrStyle.html\" title=\"enum syn::AttrStyle\">AttrStyle</a>","synthetic":true,"types":["syn::attr::AttrStyle"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Meta.html\" title=\"enum syn::Meta\">Meta</a>","synthetic":true,"types":["syn::attr::Meta"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.NestedMeta.html\" title=\"enum syn::NestedMeta\">NestedMeta</a>","synthetic":true,"types":["syn::attr::NestedMeta"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Fields.html\" title=\"enum syn::Fields\">Fields</a>","synthetic":true,"types":["syn::data::Fields"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Visibility.html\" title=\"enum syn::Visibility\">Visibility</a>","synthetic":true,"types":["syn::data::Visibility"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.GenericMethodArgument.html\" title=\"enum syn::GenericMethodArgument\">GenericMethodArgument</a>","synthetic":true,"types":["syn::expr::GenericMethodArgument"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.RangeLimits.html\" title=\"enum syn::RangeLimits\">RangeLimits</a>","synthetic":true,"types":["syn::expr::RangeLimits"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Expr.html\" title=\"enum syn::Expr\">Expr</a>","synthetic":true,"types":["syn::expr::Expr"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Member.html\" title=\"enum syn::Member\">Member</a>","synthetic":true,"types":["syn::expr::Member"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.GenericParam.html\" title=\"enum syn::GenericParam\">GenericParam</a>","synthetic":true,"types":["syn::generics::GenericParam"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.TraitBoundModifier.html\" title=\"enum syn::TraitBoundModifier\">TraitBoundModifier</a>","synthetic":true,"types":["syn::generics::TraitBoundModifier"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.TypeParamBound.html\" title=\"enum syn::TypeParamBound\">TypeParamBound</a>","synthetic":true,"types":["syn::generics::TypeParamBound"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.WherePredicate.html\" title=\"enum syn::WherePredicate\">WherePredicate</a>","synthetic":true,"types":["syn::generics::WherePredicate"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.FnArg.html\" title=\"enum syn::FnArg\">FnArg</a>","synthetic":true,"types":["syn::item::FnArg"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.ForeignItem.html\" title=\"enum syn::ForeignItem\">ForeignItem</a>","synthetic":true,"types":["syn::item::ForeignItem"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.ImplItem.html\" title=\"enum syn::ImplItem\">ImplItem</a>","synthetic":true,"types":["syn::item::ImplItem"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Item.html\" title=\"enum syn::Item\">Item</a>","synthetic":true,"types":["syn::item::Item"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.TraitItem.html\" title=\"enum syn::TraitItem\">TraitItem</a>","synthetic":true,"types":["syn::item::TraitItem"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.UseTree.html\" title=\"enum syn::UseTree\">UseTree</a>","synthetic":true,"types":["syn::item::UseTree"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Lit.html\" title=\"enum syn::Lit\">Lit</a>","synthetic":true,"types":["syn::lit::Lit"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.StrStyle.html\" title=\"enum syn::StrStyle\">StrStyle</a>","synthetic":true,"types":["syn::lit::StrStyle"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.MacroDelimiter.html\" title=\"enum syn::MacroDelimiter\">MacroDelimiter</a>","synthetic":true,"types":["syn::mac::MacroDelimiter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Data.html\" title=\"enum syn::Data\">Data</a>","synthetic":true,"types":["syn::derive::Data"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.BinOp.html\" title=\"enum syn::BinOp\">BinOp</a>","synthetic":true,"types":["syn::op::BinOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.UnOp.html\" title=\"enum syn::UnOp\">UnOp</a>","synthetic":true,"types":["syn::op::UnOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Stmt.html\" title=\"enum syn::Stmt\">Stmt</a>","synthetic":true,"types":["syn::stmt::Stmt"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.ReturnType.html\" title=\"enum syn::ReturnType\">ReturnType</a>","synthetic":true,"types":["syn::ty::ReturnType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Type.html\" title=\"enum syn::Type\">Type</a>","synthetic":true,"types":["syn::ty::Type"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Pat.html\" title=\"enum syn::Pat\">Pat</a>","synthetic":true,"types":["syn::pat::Pat"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.GenericArgument.html\" title=\"enum syn::GenericArgument\">GenericArgument</a>","synthetic":true,"types":["syn::path::GenericArgument"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.PathArguments.html\" title=\"enum syn::PathArguments\">PathArguments</a>","synthetic":true,"types":["syn::path::PathArguments"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Underscore.html\" title=\"struct syn::token::Underscore\">Underscore</a>","synthetic":true,"types":["syn::token::Underscore"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Abstract.html\" title=\"struct syn::token::Abstract\">Abstract</a>","synthetic":true,"types":["syn::token::Abstract"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.As.html\" title=\"struct syn::token::As\">As</a>","synthetic":true,"types":["syn::token::As"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Async.html\" title=\"struct syn::token::Async\">Async</a>","synthetic":true,"types":["syn::token::Async"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Auto.html\" title=\"struct syn::token::Auto\">Auto</a>","synthetic":true,"types":["syn::token::Auto"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Await.html\" title=\"struct syn::token::Await\">Await</a>","synthetic":true,"types":["syn::token::Await"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Become.html\" title=\"struct syn::token::Become\">Become</a>","synthetic":true,"types":["syn::token::Become"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Box.html\" title=\"struct syn::token::Box\">Box</a>","synthetic":true,"types":["syn::token::Box"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Break.html\" title=\"struct syn::token::Break\">Break</a>","synthetic":true,"types":["syn::token::Break"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Const.html\" title=\"struct syn::token::Const\">Const</a>","synthetic":true,"types":["syn::token::Const"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Continue.html\" title=\"struct syn::token::Continue\">Continue</a>","synthetic":true,"types":["syn::token::Continue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Crate.html\" title=\"struct syn::token::Crate\">Crate</a>","synthetic":true,"types":["syn::token::Crate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Default.html\" title=\"struct syn::token::Default\">Default</a>","synthetic":true,"types":["syn::token::Default"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Do.html\" title=\"struct syn::token::Do\">Do</a>","synthetic":true,"types":["syn::token::Do"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dyn.html\" title=\"struct syn::token::Dyn\">Dyn</a>","synthetic":true,"types":["syn::token::Dyn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Else.html\" title=\"struct syn::token::Else\">Else</a>","synthetic":true,"types":["syn::token::Else"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Enum.html\" title=\"struct syn::token::Enum\">Enum</a>","synthetic":true,"types":["syn::token::Enum"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Extern.html\" title=\"struct syn::token::Extern\">Extern</a>","synthetic":true,"types":["syn::token::Extern"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Final.html\" title=\"struct syn::token::Final\">Final</a>","synthetic":true,"types":["syn::token::Final"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Fn.html\" title=\"struct syn::token::Fn\">Fn</a>","synthetic":true,"types":["syn::token::Fn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.For.html\" title=\"struct syn::token::For\">For</a>","synthetic":true,"types":["syn::token::For"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.If.html\" title=\"struct syn::token::If\">If</a>","synthetic":true,"types":["syn::token::If"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Impl.html\" title=\"struct syn::token::Impl\">Impl</a>","synthetic":true,"types":["syn::token::Impl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.In.html\" title=\"struct syn::token::In\">In</a>","synthetic":true,"types":["syn::token::In"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Let.html\" title=\"struct syn::token::Let\">Let</a>","synthetic":true,"types":["syn::token::Let"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Loop.html\" title=\"struct syn::token::Loop\">Loop</a>","synthetic":true,"types":["syn::token::Loop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Macro.html\" title=\"struct syn::token::Macro\">Macro</a>","synthetic":true,"types":["syn::token::Macro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Match.html\" title=\"struct syn::token::Match\">Match</a>","synthetic":true,"types":["syn::token::Match"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Mod.html\" title=\"struct syn::token::Mod\">Mod</a>","synthetic":true,"types":["syn::token::Mod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Move.html\" title=\"struct syn::token::Move\">Move</a>","synthetic":true,"types":["syn::token::Move"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Mut.html\" title=\"struct syn::token::Mut\">Mut</a>","synthetic":true,"types":["syn::token::Mut"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Override.html\" title=\"struct syn::token::Override\">Override</a>","synthetic":true,"types":["syn::token::Override"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Priv.html\" title=\"struct syn::token::Priv\">Priv</a>","synthetic":true,"types":["syn::token::Priv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Pub.html\" title=\"struct syn::token::Pub\">Pub</a>","synthetic":true,"types":["syn::token::Pub"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ref.html\" title=\"struct syn::token::Ref\">Ref</a>","synthetic":true,"types":["syn::token::Ref"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Return.html\" title=\"struct syn::token::Return\">Return</a>","synthetic":true,"types":["syn::token::Return"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SelfType.html\" title=\"struct syn::token::SelfType\">SelfType</a>","synthetic":true,"types":["syn::token::SelfType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SelfValue.html\" title=\"struct syn::token::SelfValue\">SelfValue</a>","synthetic":true,"types":["syn::token::SelfValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Static.html\" title=\"struct syn::token::Static\">Static</a>","synthetic":true,"types":["syn::token::Static"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Struct.html\" title=\"struct syn::token::Struct\">Struct</a>","synthetic":true,"types":["syn::token::Struct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Super.html\" title=\"struct syn::token::Super\">Super</a>","synthetic":true,"types":["syn::token::Super"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Trait.html\" title=\"struct syn::token::Trait\">Trait</a>","synthetic":true,"types":["syn::token::Trait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Try.html\" title=\"struct syn::token::Try\">Try</a>","synthetic":true,"types":["syn::token::Try"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Type.html\" title=\"struct syn::token::Type\">Type</a>","synthetic":true,"types":["syn::token::Type"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Typeof.html\" title=\"struct syn::token::Typeof\">Typeof</a>","synthetic":true,"types":["syn::token::Typeof"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Union.html\" title=\"struct syn::token::Union\">Union</a>","synthetic":true,"types":["syn::token::Union"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Unsafe.html\" title=\"struct syn::token::Unsafe\">Unsafe</a>","synthetic":true,"types":["syn::token::Unsafe"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Unsized.html\" title=\"struct syn::token::Unsized\">Unsized</a>","synthetic":true,"types":["syn::token::Unsized"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Use.html\" title=\"struct syn::token::Use\">Use</a>","synthetic":true,"types":["syn::token::Use"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Virtual.html\" title=\"struct syn::token::Virtual\">Virtual</a>","synthetic":true,"types":["syn::token::Virtual"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Where.html\" title=\"struct syn::token::Where\">Where</a>","synthetic":true,"types":["syn::token::Where"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.While.html\" title=\"struct syn::token::While\">While</a>","synthetic":true,"types":["syn::token::While"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Yield.html\" title=\"struct syn::token::Yield\">Yield</a>","synthetic":true,"types":["syn::token::Yield"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Add.html\" title=\"struct syn::token::Add\">Add</a>","synthetic":true,"types":["syn::token::Add"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AddEq.html\" title=\"struct syn::token::AddEq\">AddEq</a>","synthetic":true,"types":["syn::token::AddEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.And.html\" title=\"struct syn::token::And\">And</a>","synthetic":true,"types":["syn::token::And"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AndAnd.html\" title=\"struct syn::token::AndAnd\">AndAnd</a>","synthetic":true,"types":["syn::token::AndAnd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AndEq.html\" title=\"struct syn::token::AndEq\">AndEq</a>","synthetic":true,"types":["syn::token::AndEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.At.html\" title=\"struct syn::token::At\">At</a>","synthetic":true,"types":["syn::token::At"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Bang.html\" title=\"struct syn::token::Bang\">Bang</a>","synthetic":true,"types":["syn::token::Bang"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Caret.html\" title=\"struct syn::token::Caret\">Caret</a>","synthetic":true,"types":["syn::token::Caret"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.CaretEq.html\" title=\"struct syn::token::CaretEq\">CaretEq</a>","synthetic":true,"types":["syn::token::CaretEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Colon.html\" title=\"struct syn::token::Colon\">Colon</a>","synthetic":true,"types":["syn::token::Colon"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Colon2.html\" title=\"struct syn::token::Colon2\">Colon2</a>","synthetic":true,"types":["syn::token::Colon2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Comma.html\" title=\"struct syn::token::Comma\">Comma</a>","synthetic":true,"types":["syn::token::Comma"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Div.html\" title=\"struct syn::token::Div\">Div</a>","synthetic":true,"types":["syn::token::Div"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.DivEq.html\" title=\"struct syn::token::DivEq\">DivEq</a>","synthetic":true,"types":["syn::token::DivEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dollar.html\" title=\"struct syn::token::Dollar\">Dollar</a>","synthetic":true,"types":["syn::token::Dollar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot.html\" title=\"struct syn::token::Dot\">Dot</a>","synthetic":true,"types":["syn::token::Dot"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot2.html\" title=\"struct syn::token::Dot2\">Dot2</a>","synthetic":true,"types":["syn::token::Dot2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot3.html\" title=\"struct syn::token::Dot3\">Dot3</a>","synthetic":true,"types":["syn::token::Dot3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.DotDotEq.html\" title=\"struct syn::token::DotDotEq\">DotDotEq</a>","synthetic":true,"types":["syn::token::DotDotEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Eq.html\" title=\"struct syn::token::Eq\">Eq</a>","synthetic":true,"types":["syn::token::Eq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.EqEq.html\" title=\"struct syn::token::EqEq\">EqEq</a>","synthetic":true,"types":["syn::token::EqEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ge.html\" title=\"struct syn::token::Ge\">Ge</a>","synthetic":true,"types":["syn::token::Ge"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Gt.html\" title=\"struct syn::token::Gt\">Gt</a>","synthetic":true,"types":["syn::token::Gt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Le.html\" title=\"struct syn::token::Le\">Le</a>","synthetic":true,"types":["syn::token::Le"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Lt.html\" title=\"struct syn::token::Lt\">Lt</a>","synthetic":true,"types":["syn::token::Lt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.MulEq.html\" title=\"struct syn::token::MulEq\">MulEq</a>","synthetic":true,"types":["syn::token::MulEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ne.html\" title=\"struct syn::token::Ne\">Ne</a>","synthetic":true,"types":["syn::token::Ne"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Or.html\" title=\"struct syn::token::Or\">Or</a>","synthetic":true,"types":["syn::token::Or"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.OrEq.html\" title=\"struct syn::token::OrEq\">OrEq</a>","synthetic":true,"types":["syn::token::OrEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.OrOr.html\" title=\"struct syn::token::OrOr\">OrOr</a>","synthetic":true,"types":["syn::token::OrOr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Pound.html\" title=\"struct syn::token::Pound\">Pound</a>","synthetic":true,"types":["syn::token::Pound"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Question.html\" title=\"struct syn::token::Question\">Question</a>","synthetic":true,"types":["syn::token::Question"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.RArrow.html\" title=\"struct syn::token::RArrow\">RArrow</a>","synthetic":true,"types":["syn::token::RArrow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.LArrow.html\" title=\"struct syn::token::LArrow\">LArrow</a>","synthetic":true,"types":["syn::token::LArrow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Rem.html\" title=\"struct syn::token::Rem\">Rem</a>","synthetic":true,"types":["syn::token::Rem"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.RemEq.html\" title=\"struct syn::token::RemEq\">RemEq</a>","synthetic":true,"types":["syn::token::RemEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.FatArrow.html\" title=\"struct syn::token::FatArrow\">FatArrow</a>","synthetic":true,"types":["syn::token::FatArrow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Semi.html\" title=\"struct syn::token::Semi\">Semi</a>","synthetic":true,"types":["syn::token::Semi"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Shl.html\" title=\"struct syn::token::Shl\">Shl</a>","synthetic":true,"types":["syn::token::Shl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.ShlEq.html\" title=\"struct syn::token::ShlEq\">ShlEq</a>","synthetic":true,"types":["syn::token::ShlEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Shr.html\" title=\"struct syn::token::Shr\">Shr</a>","synthetic":true,"types":["syn::token::Shr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.ShrEq.html\" title=\"struct syn::token::ShrEq\">ShrEq</a>","synthetic":true,"types":["syn::token::ShrEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Star.html\" title=\"struct syn::token::Star\">Star</a>","synthetic":true,"types":["syn::token::Star"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Sub.html\" title=\"struct syn::token::Sub\">Sub</a>","synthetic":true,"types":["syn::token::Sub"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SubEq.html\" title=\"struct syn::token::SubEq\">SubEq</a>","synthetic":true,"types":["syn::token::SubEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Tilde.html\" title=\"struct syn::token::Tilde\">Tilde</a>","synthetic":true,"types":["syn::token::Tilde"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Brace.html\" title=\"struct syn::token::Brace\">Brace</a>","synthetic":true,"types":["syn::token::Brace"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Bracket.html\" title=\"struct syn::token::Bracket\">Bracket</a>","synthetic":true,"types":["syn::token::Bracket"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Paren.html\" title=\"struct syn::token::Paren\">Paren</a>","synthetic":true,"types":["syn::token::Paren"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Group.html\" title=\"struct syn::token::Group\">Group</a>","synthetic":true,"types":["syn::token::Group"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/buffer/struct.TokenBuffer.html\" title=\"struct syn::buffer::TokenBuffer\">TokenBuffer</a>","synthetic":true,"types":["syn::buffer::TokenBuffer"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/buffer/struct.Cursor.html\" title=\"struct syn::buffer::Cursor\">Cursor</a>&lt;'a&gt;","synthetic":true,"types":["syn::buffer::Cursor"]},{"text":"impl&lt;T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Punctuated.html\" title=\"struct syn::punctuated::Punctuated\">Punctuated</a>&lt;T, P&gt;","synthetic":true,"types":["syn::punctuated::Punctuated"]},{"text":"impl&lt;'a, T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Pairs.html\" title=\"struct syn::punctuated::Pairs\">Pairs</a>&lt;'a, T, P&gt;","synthetic":true,"types":["syn::punctuated::Pairs"]},{"text":"impl&lt;'a, T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.PairsMut.html\" title=\"struct syn::punctuated::PairsMut\">PairsMut</a>&lt;'a, T, P&gt;","synthetic":true,"types":["syn::punctuated::PairsMut"]},{"text":"impl&lt;T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IntoPairs.html\" title=\"struct syn::punctuated::IntoPairs\">IntoPairs</a>&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["syn::punctuated::IntoPairs"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IntoIter.html\" title=\"struct syn::punctuated::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["syn::punctuated::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Iter.html\" title=\"struct syn::punctuated::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["syn::punctuated::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IterMut.html\" title=\"struct syn::punctuated::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["syn::punctuated::IterMut"]},{"text":"impl&lt;T, P&gt; Freeze for <a class=\"enum\" href=\"syn/punctuated/enum.Pair.html\" title=\"enum syn::punctuated::Pair\">Pair</a>&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["syn::punctuated::Pair"]},{"text":"impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"syn/parse/struct.Lookahead1.html\" title=\"struct syn::parse::Lookahead1\">Lookahead1</a>&lt;'a&gt;","synthetic":true,"types":["syn::lookahead::Lookahead1"]},{"text":"impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"syn/parse/struct.ParseBuffer.html\" title=\"struct syn::parse::ParseBuffer\">ParseBuffer</a>&lt;'a&gt;","synthetic":true,"types":["syn::parse::ParseBuffer"]},{"text":"impl&lt;'c, 'a&gt; Freeze for <a class=\"struct\" href=\"syn/parse/struct.StepCursor.html\" title=\"struct syn::parse::StepCursor\">StepCursor</a>&lt;'c, 'a&gt;","synthetic":true,"types":["syn::parse::StepCursor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/parse/struct.Nothing.html\" title=\"struct syn::parse::Nothing\">Nothing</a>","synthetic":true,"types":["syn::parse::Nothing"]}];
implementors["synstructure"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"synstructure/struct.BindingInfo.html\" title=\"struct synstructure::BindingInfo\">BindingInfo</a>&lt;'a&gt;","synthetic":true,"types":["synstructure::BindingInfo"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"synstructure/struct.VariantAst.html\" title=\"struct synstructure::VariantAst\">VariantAst</a>&lt;'a&gt;","synthetic":true,"types":["synstructure::VariantAst"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"synstructure/struct.VariantInfo.html\" title=\"struct synstructure::VariantInfo\">VariantInfo</a>&lt;'a&gt;","synthetic":true,"types":["synstructure::VariantInfo"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"synstructure/struct.Structure.html\" title=\"struct synstructure::Structure\">Structure</a>&lt;'a&gt;","synthetic":true,"types":["synstructure::Structure"]},{"text":"impl Freeze for <a class=\"enum\" href=\"synstructure/enum.AddBounds.html\" title=\"enum synstructure::AddBounds\">AddBounds</a>","synthetic":true,"types":["synstructure::AddBounds"]},{"text":"impl Freeze for <a class=\"enum\" href=\"synstructure/enum.BindStyle.html\" title=\"enum synstructure::BindStyle\">BindStyle</a>","synthetic":true,"types":["synstructure::BindStyle"]}];
implementors["termcolor"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"termcolor/struct.StandardStream.html\" title=\"struct termcolor::StandardStream\">StandardStream</a>","synthetic":true,"types":["termcolor::StandardStream"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"termcolor/struct.StandardStreamLock.html\" title=\"struct termcolor::StandardStreamLock\">StandardStreamLock</a>&lt;'a&gt;","synthetic":true,"types":["termcolor::StandardStreamLock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"termcolor/struct.BufferedStandardStream.html\" title=\"struct termcolor::BufferedStandardStream\">BufferedStandardStream</a>","synthetic":true,"types":["termcolor::BufferedStandardStream"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"termcolor/struct.BufferWriter.html\" title=\"struct termcolor::BufferWriter\">BufferWriter</a>","synthetic":true,"types":["termcolor::BufferWriter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"termcolor/struct.Buffer.html\" title=\"struct termcolor::Buffer\">Buffer</a>","synthetic":true,"types":["termcolor::Buffer"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"termcolor/struct.NoColor.html\" title=\"struct termcolor::NoColor\">NoColor</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["termcolor::NoColor"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"termcolor/struct.Ansi.html\" title=\"struct termcolor::Ansi\">Ansi</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["termcolor::Ansi"]},{"text":"impl Freeze for <a class=\"struct\" href=\"termcolor/struct.ColorSpec.html\" title=\"struct termcolor::ColorSpec\">ColorSpec</a>","synthetic":true,"types":["termcolor::ColorSpec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"termcolor/struct.ParseColorError.html\" title=\"struct termcolor::ParseColorError\">ParseColorError</a>","synthetic":true,"types":["termcolor::ParseColorError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"termcolor/enum.ColorChoice.html\" title=\"enum termcolor::ColorChoice\">ColorChoice</a>","synthetic":true,"types":["termcolor::ColorChoice"]},{"text":"impl Freeze for <a class=\"enum\" href=\"termcolor/enum.Color.html\" title=\"enum termcolor::Color\">Color</a>","synthetic":true,"types":["termcolor::Color"]}];
implementors["thread_local"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"thread_local/struct.CachedIntoIter.html\" title=\"struct thread_local::CachedIntoIter\">CachedIntoIter</a>&lt;T&gt;","synthetic":true,"types":["thread_local::cached::CachedIntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"thread_local/struct.CachedIterMut.html\" title=\"struct thread_local::CachedIterMut\">CachedIterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["thread_local::cached::CachedIterMut"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"thread_local/struct.CachedThreadLocal.html\" title=\"struct thread_local::CachedThreadLocal\">CachedThreadLocal</a>&lt;T&gt;","synthetic":true,"types":["thread_local::cached::CachedThreadLocal"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"thread_local/struct.ThreadLocal.html\" title=\"struct thread_local::ThreadLocal\">ThreadLocal</a>&lt;T&gt;","synthetic":true,"types":["thread_local::ThreadLocal"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"thread_local/struct.IterMut.html\" title=\"struct thread_local::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["thread_local::IterMut"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"thread_local/struct.IntoIter.html\" title=\"struct thread_local::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["thread_local::IntoIter"]}];
implementors["threadpool"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"threadpool/struct.Builder.html\" title=\"struct threadpool::Builder\">Builder</a>","synthetic":true,"types":["threadpool::Builder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"threadpool/struct.ThreadPool.html\" title=\"struct threadpool::ThreadPool\">ThreadPool</a>","synthetic":true,"types":["threadpool::ThreadPool"]}];
implementors["time"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"time/struct.Duration.html\" title=\"struct time::Duration\">Duration</a>","synthetic":true,"types":["time::duration::Duration"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/struct.OutOfRangeError.html\" title=\"struct time::OutOfRangeError\">OutOfRangeError</a>","synthetic":true,"types":["time::duration::OutOfRangeError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/struct.Timespec.html\" title=\"struct time::Timespec\">Timespec</a>","synthetic":true,"types":["time::Timespec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/struct.PreciseTime.html\" title=\"struct time::PreciseTime\">PreciseTime</a>","synthetic":true,"types":["time::PreciseTime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/struct.SteadyTime.html\" title=\"struct time::SteadyTime\">SteadyTime</a>","synthetic":true,"types":["time::SteadyTime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/struct.Tm.html\" title=\"struct time::Tm\">Tm</a>","synthetic":true,"types":["time::Tm"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"time/struct.TmFmt.html\" title=\"struct time::TmFmt\">TmFmt</a>&lt;'a&gt;","synthetic":true,"types":["time::TmFmt"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/enum.ParseError.html\" title=\"enum time::ParseError\">ParseError</a>","synthetic":true,"types":["time::ParseError"]}];
implementors["tokio"] = [{"text":"impl&lt;E&gt; !Freeze for <a class=\"struct\" href=\"tokio/io/struct.PollEvented.html\" title=\"struct tokio::io::PollEvented\">PollEvented</a>&lt;E&gt;","synthetic":true,"types":["tokio::io::poll_evented::PollEvented"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/io/struct.Registration.html\" title=\"struct tokio::io::Registration\">Registration</a>","synthetic":true,"types":["tokio::io::registration::Registration"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.ReadHalf.html\" title=\"struct tokio::io::ReadHalf\">ReadHalf</a>&lt;T&gt;","synthetic":true,"types":["tokio::io::split::ReadHalf"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.WriteHalf.html\" title=\"struct tokio::io::WriteHalf\">WriteHalf</a>&lt;T&gt;","synthetic":true,"types":["tokio::io::split::WriteHalf"]},{"text":"impl&lt;'a, S:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.Seek.html\" title=\"struct tokio::io::Seek\">Seek</a>&lt;'a, S&gt;","synthetic":true,"types":["tokio::io::seek::Seek"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.BufReader.html\" title=\"struct tokio::io::BufReader\">BufReader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::io::util::buf_reader::BufReader"]},{"text":"impl&lt;RW&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.BufStream.html\" title=\"struct tokio::io::BufStream\">BufStream</a>&lt;RW&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;RW: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::io::util::buf_stream::BufStream"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.BufWriter.html\" title=\"struct tokio::io::BufWriter\">BufWriter</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::io::util::buf_writer::BufWriter"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.Copy.html\" title=\"struct tokio::io::Copy\">Copy</a>&lt;'a, R, W&gt;","synthetic":true,"types":["tokio::io::util::copy::Copy"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/io/struct.Empty.html\" title=\"struct tokio::io::Empty\">Empty</a>","synthetic":true,"types":["tokio::io::util::empty::Empty"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.Lines.html\" title=\"struct tokio::io::Lines\">Lines</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::io::util::lines::Lines"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/io/struct.Repeat.html\" title=\"struct tokio::io::Repeat\">Repeat</a>","synthetic":true,"types":["tokio::io::util::repeat::Repeat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/io/struct.Sink.html\" title=\"struct tokio::io::Sink\">Sink</a>","synthetic":true,"types":["tokio::io::util::sink::Sink"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.Split.html\" title=\"struct tokio::io::Split\">Split</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::io::util::split::Split"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.Take.html\" title=\"struct tokio::io::Take\">Take</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::io::util::take::Take"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/net/struct.TcpListener.html\" title=\"struct tokio::net::TcpListener\">TcpListener</a>","synthetic":true,"types":["tokio::net::tcp::listener::TcpListener"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/net/struct.TcpStream.html\" title=\"struct tokio::net::TcpStream\">TcpStream</a>","synthetic":true,"types":["tokio::net::tcp::stream::TcpStream"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/net/struct.UdpSocket.html\" title=\"struct tokio::net::UdpSocket\">UdpSocket</a>","synthetic":true,"types":["tokio::net::udp::socket::UdpSocket"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/net/struct.UnixDatagram.html\" title=\"struct tokio::net::UnixDatagram\">UnixDatagram</a>","synthetic":true,"types":["tokio::net::unix::datagram::UnixDatagram"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/net/struct.UnixListener.html\" title=\"struct tokio::net::UnixListener\">UnixListener</a>","synthetic":true,"types":["tokio::net::unix::listener::UnixListener"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/net/struct.UnixStream.html\" title=\"struct tokio::net::UnixStream\">UnixStream</a>","synthetic":true,"types":["tokio::net::unix::stream::UnixStream"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tokio/net/tcp/struct.Incoming.html\" title=\"struct tokio::net::tcp::Incoming\">Incoming</a>&lt;'a&gt;","synthetic":true,"types":["tokio::net::tcp::incoming::Incoming"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tokio/net/tcp/struct.ReadHalf.html\" title=\"struct tokio::net::tcp::ReadHalf\">ReadHalf</a>&lt;'a&gt;","synthetic":true,"types":["tokio::net::tcp::split::ReadHalf"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tokio/net/tcp/struct.WriteHalf.html\" title=\"struct tokio::net::tcp::WriteHalf\">WriteHalf</a>&lt;'a&gt;","synthetic":true,"types":["tokio::net::tcp::split::WriteHalf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/net/udp/struct.RecvHalf.html\" title=\"struct tokio::net::udp::RecvHalf\">RecvHalf</a>","synthetic":true,"types":["tokio::net::udp::split::RecvHalf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/net/udp/struct.ReuniteError.html\" title=\"struct tokio::net::udp::ReuniteError\">ReuniteError</a>","synthetic":true,"types":["tokio::net::udp::split::ReuniteError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/net/udp/struct.SendHalf.html\" title=\"struct tokio::net::udp::SendHalf\">SendHalf</a>","synthetic":true,"types":["tokio::net::udp::split::SendHalf"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tokio/net/unix/struct.Incoming.html\" title=\"struct tokio::net::unix::Incoming\">Incoming</a>&lt;'a&gt;","synthetic":true,"types":["tokio::net::unix::incoming::Incoming"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tokio/net/unix/struct.ReadHalf.html\" title=\"struct tokio::net::unix::ReadHalf\">ReadHalf</a>&lt;'a&gt;","synthetic":true,"types":["tokio::net::unix::split::ReadHalf"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tokio/net/unix/struct.WriteHalf.html\" title=\"struct tokio::net::unix::WriteHalf\">WriteHalf</a>&lt;'a&gt;","synthetic":true,"types":["tokio::net::unix::split::WriteHalf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/net/unix/struct.UCred.html\" title=\"struct tokio::net::unix::UCred\">UCred</a>","synthetic":true,"types":["tokio::net::unix::ucred::UCred"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/runtime/struct.Builder.html\" title=\"struct tokio::runtime::Builder\">Builder</a>","synthetic":true,"types":["tokio::runtime::builder::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/runtime/struct.Handle.html\" title=\"struct tokio::runtime::Handle\">Handle</a>","synthetic":true,"types":["tokio::runtime::handle::Handle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/runtime/struct.TryCurrentError.html\" title=\"struct tokio::runtime::TryCurrentError\">TryCurrentError</a>","synthetic":true,"types":["tokio::runtime::handle::TryCurrentError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/runtime/struct.Runtime.html\" title=\"struct tokio::runtime::Runtime\">Runtime</a>","synthetic":true,"types":["tokio::runtime::Runtime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/signal/unix/struct.SignalKind.html\" title=\"struct tokio::signal::unix::SignalKind\">SignalKind</a>","synthetic":true,"types":["tokio::signal::unix::SignalKind"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/signal/unix/struct.Signal.html\" title=\"struct tokio::signal::unix::Signal\">Signal</a>","synthetic":true,"types":["tokio::signal::unix::Signal"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/stream/struct.Empty.html\" title=\"struct tokio::stream::Empty\">Empty</a>&lt;T&gt;","synthetic":true,"types":["tokio::stream::empty::Empty"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"tokio/stream/struct.Iter.html\" title=\"struct tokio::stream::Iter\">Iter</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::stream::iter::Iter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/stream/struct.Once.html\" title=\"struct tokio::stream::Once\">Once</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::stream::once::Once"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/stream/struct.Pending.html\" title=\"struct tokio::stream::Pending\">Pending</a>&lt;T&gt;","synthetic":true,"types":["tokio::stream::pending::Pending"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"tokio/stream/struct.StreamMap.html\" title=\"struct tokio::stream::StreamMap\">StreamMap</a>&lt;K, V&gt;","synthetic":true,"types":["tokio::stream::stream_map::StreamMap"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/sync/struct.Barrier.html\" title=\"struct tokio::sync::Barrier\">Barrier</a>","synthetic":true,"types":["tokio::sync::barrier::Barrier"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/sync/struct.BarrierWaitResult.html\" title=\"struct tokio::sync::BarrierWaitResult\">BarrierWaitResult</a>","synthetic":true,"types":["tokio::sync::barrier::BarrierWaitResult"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"tokio/sync/struct.Mutex.html\" title=\"struct tokio::sync::Mutex\">Mutex</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::mutex::Mutex"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.MutexGuard.html\" title=\"struct tokio::sync::MutexGuard\">MutexGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio::sync::mutex::MutexGuard"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/sync/struct.Notify.html\" title=\"struct tokio::sync::Notify\">Notify</a>","synthetic":true,"types":["tokio::sync::notify::Notify"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/sync/struct.Semaphore.html\" title=\"struct tokio::sync::Semaphore\">Semaphore</a>","synthetic":true,"types":["tokio::sync::semaphore::Semaphore"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.SemaphorePermit.html\" title=\"struct tokio::sync::SemaphorePermit\">SemaphorePermit</a>&lt;'a&gt;","synthetic":true,"types":["tokio::sync::semaphore::SemaphorePermit"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"tokio/sync/struct.RwLock.html\" title=\"struct tokio::sync::RwLock\">RwLock</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::rwlock::RwLock"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.RwLockReadGuard.html\" title=\"struct tokio::sync::RwLockReadGuard\">RwLockReadGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio::sync::rwlock::RwLockReadGuard"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.RwLockWriteGuard.html\" title=\"struct tokio::sync::RwLockWriteGuard\">RwLockWriteGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio::sync::rwlock::RwLockWriteGuard"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/broadcast/struct.Sender.html\" title=\"struct tokio::sync::broadcast::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::broadcast::Sender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/broadcast/struct.Receiver.html\" title=\"struct tokio::sync::broadcast::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::broadcast::Receiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/broadcast/struct.SendError.html\" title=\"struct tokio::sync::broadcast::SendError\">SendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::sync::broadcast::SendError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio/sync/broadcast/enum.RecvError.html\" title=\"enum tokio::sync::broadcast::RecvError\">RecvError</a>","synthetic":true,"types":["tokio::sync::broadcast::RecvError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio/sync/broadcast/enum.TryRecvError.html\" title=\"enum tokio::sync::broadcast::TryRecvError\">TryRecvError</a>","synthetic":true,"types":["tokio::sync::broadcast::TryRecvError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/mpsc/struct.Receiver.html\" title=\"struct tokio::sync::mpsc::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::mpsc::bounded::Receiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/mpsc/struct.Sender.html\" title=\"struct tokio::sync::mpsc::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::mpsc::bounded::Sender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/mpsc/struct.UnboundedReceiver.html\" title=\"struct tokio::sync::mpsc::UnboundedReceiver\">UnboundedReceiver</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::mpsc::unbounded::UnboundedReceiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/mpsc/struct.UnboundedSender.html\" title=\"struct tokio::sync::mpsc::UnboundedSender\">UnboundedSender</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::mpsc::unbounded::UnboundedSender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/mpsc/error/struct.SendError.html\" title=\"struct tokio::sync::mpsc::error::SendError\">SendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::sync::mpsc::error::SendError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/sync/mpsc/error/struct.RecvError.html\" title=\"struct tokio::sync::mpsc::error::RecvError\">RecvError</a>","synthetic":true,"types":["tokio::sync::mpsc::error::RecvError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/sync/mpsc/error/struct.ClosedError.html\" title=\"struct tokio::sync::mpsc::error::ClosedError\">ClosedError</a>","synthetic":true,"types":["tokio::sync::mpsc::error::ClosedError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"tokio/sync/mpsc/error/enum.TrySendError.html\" title=\"enum tokio::sync::mpsc::error::TrySendError\">TrySendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::sync::mpsc::error::TrySendError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio/sync/mpsc/error/enum.TryRecvError.html\" title=\"enum tokio::sync::mpsc::error::TryRecvError\">TryRecvError</a>","synthetic":true,"types":["tokio::sync::mpsc::error::TryRecvError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"tokio/sync/mpsc/error/enum.SendTimeoutError.html\" title=\"enum tokio::sync::mpsc::error::SendTimeoutError\">SendTimeoutError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::sync::mpsc::error::SendTimeoutError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/oneshot/struct.Sender.html\" title=\"struct tokio::sync::oneshot::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::oneshot::Sender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/oneshot/struct.Receiver.html\" title=\"struct tokio::sync::oneshot::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::oneshot::Receiver"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/sync/oneshot/error/struct.RecvError.html\" title=\"struct tokio::sync::oneshot::error::RecvError\">RecvError</a>","synthetic":true,"types":["tokio::sync::oneshot::error::RecvError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio/sync/oneshot/error/enum.TryRecvError.html\" title=\"enum tokio::sync::oneshot::error::TryRecvError\">TryRecvError</a>","synthetic":true,"types":["tokio::sync::oneshot::error::TryRecvError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/watch/struct.Receiver.html\" title=\"struct tokio::sync::watch::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::watch::Receiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/watch/struct.Sender.html\" title=\"struct tokio::sync::watch::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::watch::Sender"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/watch/struct.Ref.html\" title=\"struct tokio::sync::watch::Ref\">Ref</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio::sync::watch::Ref"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/watch/error/struct.SendError.html\" title=\"struct tokio::sync::watch::error::SendError\">SendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::sync::watch::error::SendError"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/task/struct.JoinError.html\" title=\"struct tokio::task::JoinError\">JoinError</a>","synthetic":true,"types":["tokio::task::error::JoinError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/task/struct.JoinHandle.html\" title=\"struct tokio::task::JoinHandle\">JoinHandle</a>&lt;T&gt;","synthetic":true,"types":["tokio::task::join::JoinHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/task/struct.LocalSet.html\" title=\"struct tokio::task::LocalSet\">LocalSet</a>","synthetic":true,"types":["tokio::task::local::LocalSet"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/task/struct.LocalKey.html\" title=\"struct tokio::task::LocalKey\">LocalKey</a>&lt;T&gt;","synthetic":true,"types":["tokio::task::task_local::LocalKey"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/time/delay_queue/struct.DelayQueue.html\" title=\"struct tokio::time::delay_queue::DelayQueue\">DelayQueue</a>&lt;T&gt;","synthetic":true,"types":["tokio::time::delay_queue::DelayQueue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/time/struct.Delay.html\" title=\"struct tokio::time::Delay\">Delay</a>","synthetic":true,"types":["tokio::time::delay::Delay"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/time/struct.Error.html\" title=\"struct tokio::time::Error\">Error</a>","synthetic":true,"types":["tokio::time::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/time/struct.Instant.html\" title=\"struct tokio::time::Instant\">Instant</a>","synthetic":true,"types":["tokio::time::instant::Instant"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/time/struct.Interval.html\" title=\"struct tokio::time::Interval\">Interval</a>","synthetic":true,"types":["tokio::time::interval::Interval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/time/struct.Elapsed.html\" title=\"struct tokio::time::Elapsed\">Elapsed</a>","synthetic":true,"types":["tokio::time::timeout::Elapsed"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/time/struct.Timeout.html\" title=\"struct tokio::time::Timeout\">Timeout</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::time::timeout::Timeout"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/time/struct.Throttle.html\" title=\"struct tokio::time::Throttle\">Throttle</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::time::throttle::Throttle"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/time/delay_queue/struct.Expired.html\" title=\"struct tokio::time::delay_queue::Expired\">Expired</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::time::delay_queue::Expired"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/time/delay_queue/struct.Key.html\" title=\"struct tokio::time::delay_queue::Key\">Key</a>","synthetic":true,"types":["tokio::time::delay_queue::Key"]}];
implementors["tokio_pg_mapper"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"tokio_pg_mapper/enum.Error.html\" title=\"enum tokio_pg_mapper::Error\">Error</a>","synthetic":true,"types":["tokio_pg_mapper::Error"]}];
implementors["tokio_postgres"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_postgres/struct.CancelToken.html\" title=\"struct tokio_postgres::CancelToken\">CancelToken</a>","synthetic":true,"types":["tokio_postgres::cancel_token::CancelToken"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_postgres/struct.Client.html\" title=\"struct tokio_postgres::Client\">Client</a>","synthetic":true,"types":["tokio_postgres::client::Client"]},{"text":"impl&lt;S, T&gt; !Freeze for <a class=\"struct\" href=\"tokio_postgres/struct.Connection.html\" title=\"struct tokio_postgres::Connection\">Connection</a>&lt;S, T&gt;","synthetic":true,"types":["tokio_postgres::connection::Connection"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_postgres/struct.CopyInSink.html\" title=\"struct tokio_postgres::CopyInSink\">CopyInSink</a>&lt;T&gt;","synthetic":true,"types":["tokio_postgres::copy_in::CopyInSink"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_postgres/struct.CopyOutStream.html\" title=\"struct tokio_postgres::CopyOutStream\">CopyOutStream</a>","synthetic":true,"types":["tokio_postgres::copy_out::CopyOutStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_postgres/struct.Portal.html\" title=\"struct tokio_postgres::Portal\">Portal</a>","synthetic":true,"types":["tokio_postgres::portal::Portal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_postgres/struct.RowStream.html\" title=\"struct tokio_postgres::RowStream\">RowStream</a>","synthetic":true,"types":["tokio_postgres::query::RowStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_postgres/struct.SimpleQueryStream.html\" title=\"struct tokio_postgres::SimpleQueryStream\">SimpleQueryStream</a>","synthetic":true,"types":["tokio_postgres::simple_query::SimpleQueryStream"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio_postgres/struct.Socket.html\" title=\"struct tokio_postgres::Socket\">Socket</a>","synthetic":true,"types":["tokio_postgres::socket::Socket"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_postgres/struct.Column.html\" title=\"struct tokio_postgres::Column\">Column</a>","synthetic":true,"types":["tokio_postgres::statement::Column"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_postgres/struct.Statement.html\" title=\"struct tokio_postgres::Statement\">Statement</a>","synthetic":true,"types":["tokio_postgres::statement::Statement"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tokio_postgres/struct.Transaction.html\" title=\"struct tokio_postgres::Transaction\">Transaction</a>&lt;'a&gt;","synthetic":true,"types":["tokio_postgres::transaction::Transaction"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tokio_postgres/struct.TransactionBuilder.html\" title=\"struct tokio_postgres::TransactionBuilder\">TransactionBuilder</a>&lt;'a&gt;","synthetic":true,"types":["tokio_postgres::transaction_builder::TransactionBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_postgres/struct.Notification.html\" title=\"struct tokio_postgres::Notification\">Notification</a>","synthetic":true,"types":["tokio_postgres::Notification"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio_postgres/enum.IsolationLevel.html\" title=\"enum tokio_postgres::IsolationLevel\">IsolationLevel</a>","synthetic":true,"types":["tokio_postgres::transaction_builder::IsolationLevel"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio_postgres/enum.AsyncMessage.html\" title=\"enum tokio_postgres::AsyncMessage\">AsyncMessage</a>","synthetic":true,"types":["tokio_postgres::AsyncMessage"]},{"text":"impl !Freeze for <a class=\"enum\" href=\"tokio_postgres/enum.SimpleQueryMessage.html\" title=\"enum tokio_postgres::SimpleQueryMessage\">SimpleQueryMessage</a>","synthetic":true,"types":["tokio_postgres::SimpleQueryMessage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_postgres/binary_copy/struct.BinaryCopyInWriter.html\" title=\"struct tokio_postgres::binary_copy::BinaryCopyInWriter\">BinaryCopyInWriter</a>","synthetic":true,"types":["tokio_postgres::binary_copy::BinaryCopyInWriter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_postgres/binary_copy/struct.BinaryCopyOutStream.html\" title=\"struct tokio_postgres::binary_copy::BinaryCopyOutStream\">BinaryCopyOutStream</a>","synthetic":true,"types":["tokio_postgres::binary_copy::BinaryCopyOutStream"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio_postgres/binary_copy/struct.BinaryCopyOutRow.html\" title=\"struct tokio_postgres::binary_copy::BinaryCopyOutRow\">BinaryCopyOutRow</a>","synthetic":true,"types":["tokio_postgres::binary_copy::BinaryCopyOutRow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_postgres/config/struct.Config.html\" title=\"struct tokio_postgres::config::Config\">Config</a>","synthetic":true,"types":["tokio_postgres::config::Config"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio_postgres/config/enum.TargetSessionAttrs.html\" title=\"enum tokio_postgres::config::TargetSessionAttrs\">TargetSessionAttrs</a>","synthetic":true,"types":["tokio_postgres::config::TargetSessionAttrs"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio_postgres/config/enum.SslMode.html\" title=\"enum tokio_postgres::config::SslMode\">SslMode</a>","synthetic":true,"types":["tokio_postgres::config::SslMode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio_postgres/config/enum.ChannelBinding.html\" title=\"enum tokio_postgres::config::ChannelBinding\">ChannelBinding</a>","synthetic":true,"types":["tokio_postgres::config::ChannelBinding"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio_postgres/config/enum.Host.html\" title=\"enum tokio_postgres::config::Host\">Host</a>","synthetic":true,"types":["tokio_postgres::config::Host"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_postgres/error/struct.SqlState.html\" title=\"struct tokio_postgres::error::SqlState\">SqlState</a>","synthetic":true,"types":["tokio_postgres::error::sqlstate::SqlState"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_postgres/error/struct.DbError.html\" title=\"struct tokio_postgres::error::DbError\">DbError</a>","synthetic":true,"types":["tokio_postgres::error::DbError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_postgres/error/struct.Error.html\" title=\"struct tokio_postgres::error::Error\">Error</a>","synthetic":true,"types":["tokio_postgres::error::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio_postgres/error/enum.Severity.html\" title=\"enum tokio_postgres::error::Severity\">Severity</a>","synthetic":true,"types":["tokio_postgres::error::Severity"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio_postgres/error/enum.ErrorPosition.html\" title=\"enum tokio_postgres::error::ErrorPosition\">ErrorPosition</a>","synthetic":true,"types":["tokio_postgres::error::ErrorPosition"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio_postgres/row/struct.Row.html\" title=\"struct tokio_postgres::row::Row\">Row</a>","synthetic":true,"types":["tokio_postgres::row::Row"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio_postgres/row/struct.SimpleQueryRow.html\" title=\"struct tokio_postgres::row::SimpleQueryRow\">SimpleQueryRow</a>","synthetic":true,"types":["tokio_postgres::row::SimpleQueryRow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_postgres/tls/struct.ChannelBinding.html\" title=\"struct tokio_postgres::tls::ChannelBinding\">ChannelBinding</a>","synthetic":true,"types":["tokio_postgres::tls::ChannelBinding"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_postgres/tls/struct.NoTls.html\" title=\"struct tokio_postgres::tls::NoTls\">NoTls</a>","synthetic":true,"types":["tokio_postgres::tls::NoTls"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_postgres/tls/struct.NoTlsFuture.html\" title=\"struct tokio_postgres::tls::NoTlsFuture\">NoTlsFuture</a>","synthetic":true,"types":["tokio_postgres::tls::NoTlsFuture"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_postgres/tls/struct.NoTlsError.html\" title=\"struct tokio_postgres::tls::NoTlsError\">NoTlsError</a>","synthetic":true,"types":["tokio_postgres::tls::NoTlsError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio_postgres/tls/enum.NoTlsStream.html\" title=\"enum tokio_postgres::tls::NoTlsStream\">NoTlsStream</a>","synthetic":true,"types":["tokio_postgres::tls::NoTlsStream"]}];
implementors["tokio_rustls"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_rustls/struct.TlsConnector.html\" title=\"struct tokio_rustls::TlsConnector\">TlsConnector</a>","synthetic":true,"types":["tokio_rustls::TlsConnector"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_rustls/struct.TlsAcceptor.html\" title=\"struct tokio_rustls::TlsAcceptor\">TlsAcceptor</a>","synthetic":true,"types":["tokio_rustls::TlsAcceptor"]},{"text":"impl&lt;IO&gt; Freeze for <a class=\"struct\" href=\"tokio_rustls/struct.Connect.html\" title=\"struct tokio_rustls::Connect\">Connect</a>&lt;IO&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;IO: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_rustls::Connect"]},{"text":"impl&lt;IO&gt; Freeze for <a class=\"struct\" href=\"tokio_rustls/struct.Accept.html\" title=\"struct tokio_rustls::Accept\">Accept</a>&lt;IO&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;IO: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_rustls::Accept"]},{"text":"impl&lt;IO&gt; Freeze for <a class=\"struct\" href=\"tokio_rustls/struct.FailableConnect.html\" title=\"struct tokio_rustls::FailableConnect\">FailableConnect</a>&lt;IO&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;IO: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_rustls::FailableConnect"]},{"text":"impl&lt;IO&gt; Freeze for <a class=\"struct\" href=\"tokio_rustls/struct.FailableAccept.html\" title=\"struct tokio_rustls::FailableAccept\">FailableAccept</a>&lt;IO&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;IO: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_rustls::FailableAccept"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"tokio_rustls/enum.TlsStream.html\" title=\"enum tokio_rustls::TlsStream\">TlsStream</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_rustls::TlsStream"]},{"text":"impl&lt;IO&gt; Freeze for <a class=\"struct\" href=\"tokio_rustls/client/struct.TlsStream.html\" title=\"struct tokio_rustls::client::TlsStream\">TlsStream</a>&lt;IO&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;IO: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_rustls::client::TlsStream"]},{"text":"impl&lt;IO&gt; Freeze for <a class=\"struct\" href=\"tokio_rustls/server/struct.TlsStream.html\" title=\"struct tokio_rustls::server::TlsStream\">TlsStream</a>&lt;IO&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;IO: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_rustls::server::TlsStream"]}];
implementors["tokio_util"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_util/codec/struct.BytesCodec.html\" title=\"struct tokio_util::codec::BytesCodec\">BytesCodec</a>","synthetic":true,"types":["tokio_util::codec::bytes_codec::BytesCodec"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"tokio_util/codec/struct.Framed.html\" title=\"struct tokio_util::codec::Framed\">Framed</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_util::codec::framed::Framed"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"tokio_util/codec/struct.FramedParts.html\" title=\"struct tokio_util::codec::FramedParts\">FramedParts</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_util::codec::framed::FramedParts"]},{"text":"impl&lt;T, D&gt; Freeze for <a class=\"struct\" href=\"tokio_util/codec/struct.FramedRead.html\" title=\"struct tokio_util::codec::FramedRead\">FramedRead</a>&lt;T, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_util::codec::framed_read::FramedRead"]},{"text":"impl&lt;T, E&gt; Freeze for <a class=\"struct\" href=\"tokio_util/codec/struct.FramedWrite.html\" title=\"struct tokio_util::codec::FramedWrite\">FramedWrite</a>&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_util::codec::framed_write::FramedWrite"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_util/codec/struct.LinesCodec.html\" title=\"struct tokio_util::codec::LinesCodec\">LinesCodec</a>","synthetic":true,"types":["tokio_util::codec::lines_codec::LinesCodec"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio_util/codec/enum.LinesCodecError.html\" title=\"enum tokio_util::codec::LinesCodecError\">LinesCodecError</a>","synthetic":true,"types":["tokio_util::codec::lines_codec::LinesCodecError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_util/codec/length_delimited/struct.Builder.html\" title=\"struct tokio_util::codec::length_delimited::Builder\">Builder</a>","synthetic":true,"types":["tokio_util::codec::length_delimited::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_util/codec/length_delimited/struct.LengthDelimitedCodecError.html\" title=\"struct tokio_util::codec::length_delimited::LengthDelimitedCodecError\">LengthDelimitedCodecError</a>","synthetic":true,"types":["tokio_util::codec::length_delimited::LengthDelimitedCodecError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_util/codec/length_delimited/struct.LengthDelimitedCodec.html\" title=\"struct tokio_util::codec::length_delimited::LengthDelimitedCodec\">LengthDelimitedCodec</a>","synthetic":true,"types":["tokio_util::codec::length_delimited::LengthDelimitedCodec"]},{"text":"impl&lt;C&gt; !Freeze for <a class=\"struct\" href=\"tokio_util/udp/struct.UdpFramed.html\" title=\"struct tokio_util::udp::UdpFramed\">UdpFramed</a>&lt;C&gt;","synthetic":true,"types":["tokio_util::udp::frame::UdpFramed"]}];
implementors["toml"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"toml/struct.Spanned.html\" title=\"struct toml::Spanned\">Spanned</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["toml::spanned::Spanned"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.Map.html\" title=\"struct toml::map::Map\">Map</a>&lt;K, V&gt;","synthetic":true,"types":["toml::map::Map"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.VacantEntry.html\" title=\"struct toml::map::VacantEntry\">VacantEntry</a>&lt;'a&gt;","synthetic":true,"types":["toml::map::VacantEntry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.OccupiedEntry.html\" title=\"struct toml::map::OccupiedEntry\">OccupiedEntry</a>&lt;'a&gt;","synthetic":true,"types":["toml::map::OccupiedEntry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.Iter.html\" title=\"struct toml::map::Iter\">Iter</a>&lt;'a&gt;","synthetic":true,"types":["toml::map::Iter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.IterMut.html\" title=\"struct toml::map::IterMut\">IterMut</a>&lt;'a&gt;","synthetic":true,"types":["toml::map::IterMut"]},{"text":"impl Freeze for <a class=\"struct\" href=\"toml/map/struct.IntoIter.html\" title=\"struct toml::map::IntoIter\">IntoIter</a>","synthetic":true,"types":["toml::map::IntoIter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.Keys.html\" title=\"struct toml::map::Keys\">Keys</a>&lt;'a&gt;","synthetic":true,"types":["toml::map::Keys"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.Values.html\" title=\"struct toml::map::Values\">Values</a>&lt;'a&gt;","synthetic":true,"types":["toml::map::Values"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"toml/map/enum.Entry.html\" title=\"enum toml::map::Entry\">Entry</a>&lt;'a&gt;","synthetic":true,"types":["toml::map::Entry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"toml/value/struct.Datetime.html\" title=\"struct toml::value::Datetime\">Datetime</a>","synthetic":true,"types":["toml::datetime::Datetime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"toml/value/struct.DatetimeParseError.html\" title=\"struct toml::value::DatetimeParseError\">DatetimeParseError</a>","synthetic":true,"types":["toml::datetime::DatetimeParseError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"toml/value/enum.Value.html\" title=\"enum toml::value::Value\">Value</a>","synthetic":true,"types":["toml::value::Value"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/ser/struct.Serializer.html\" title=\"struct toml::ser::Serializer\">Serializer</a>&lt;'a&gt;","synthetic":true,"types":["toml::ser::Serializer"]},{"text":"impl Freeze for <a class=\"enum\" href=\"toml/ser/enum.Error.html\" title=\"enum toml::ser::Error\">Error</a>","synthetic":true,"types":["toml::ser::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"toml/de/struct.Error.html\" title=\"struct toml::de::Error\">Error</a>","synthetic":true,"types":["toml::de::Error"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/de/struct.Deserializer.html\" title=\"struct toml::de::Deserializer\">Deserializer</a>&lt;'a&gt;","synthetic":true,"types":["toml::de::Deserializer"]}];
implementors["trust_dns_proto"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"trust_dns_proto/error/struct.ProtoError.html\" title=\"struct trust_dns_proto::error::ProtoError\">ProtoError</a>","synthetic":true,"types":["trust_dns_proto::error::ProtoError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"trust_dns_proto/error/enum.ProtoErrorKind.html\" title=\"enum trust_dns_proto::error::ProtoErrorKind\">ProtoErrorKind</a>","synthetic":true,"types":["trust_dns_proto::error::ProtoErrorKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/error/not_openssl/struct.SslErrorStack.html\" title=\"struct trust_dns_proto::error::not_openssl::SslErrorStack\">SslErrorStack</a>","synthetic":true,"types":["trust_dns_proto::error::not_openssl::SslErrorStack"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/error/not_ring/struct.Unspecified.html\" title=\"struct trust_dns_proto::error::not_ring::Unspecified\">Unspecified</a>","synthetic":true,"types":["trust_dns_proto::error::not_ring::Unspecified"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/op/struct.Edns.html\" title=\"struct trust_dns_proto::op::Edns\">Edns</a>","synthetic":true,"types":["trust_dns_proto::op::edns::Edns"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/op/header/struct.Header.html\" title=\"struct trust_dns_proto::op::header::Header\">Header</a>","synthetic":true,"types":["trust_dns_proto::op::header::Header"]},{"text":"impl Freeze for <a class=\"enum\" href=\"trust_dns_proto/op/header/enum.MessageType.html\" title=\"enum trust_dns_proto::op::header::MessageType\">MessageType</a>","synthetic":true,"types":["trust_dns_proto::op::header::MessageType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/op/message/struct.Message.html\" title=\"struct trust_dns_proto::op::message::Message\">Message</a>","synthetic":true,"types":["trust_dns_proto::op::message::Message"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/op/message/struct.HeaderCounts.html\" title=\"struct trust_dns_proto::op::message::HeaderCounts\">HeaderCounts</a>","synthetic":true,"types":["trust_dns_proto::op::message::HeaderCounts"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/op/message/struct.NoopMessageFinalizer.html\" title=\"struct trust_dns_proto::op::message::NoopMessageFinalizer\">NoopMessageFinalizer</a>","synthetic":true,"types":["trust_dns_proto::op::message::NoopMessageFinalizer"]},{"text":"impl Freeze for <a class=\"enum\" href=\"trust_dns_proto/op/op_code/enum.OpCode.html\" title=\"enum trust_dns_proto::op::op_code::OpCode\">OpCode</a>","synthetic":true,"types":["trust_dns_proto::op::op_code::OpCode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/op/query/struct.Query.html\" title=\"struct trust_dns_proto::op::query::Query\">Query</a>","synthetic":true,"types":["trust_dns_proto::op::query::Query"]},{"text":"impl Freeze for <a class=\"enum\" href=\"trust_dns_proto/op/response_code/enum.ResponseCode.html\" title=\"enum trust_dns_proto::op::response_code::ResponseCode\">ResponseCode</a>","synthetic":true,"types":["trust_dns_proto::op::response_code::ResponseCode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/rr/struct.Name.html\" title=\"struct trust_dns_proto::rr::Name\">Name</a>","synthetic":true,"types":["trust_dns_proto::rr::domain::name::Name"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/rr/struct.RecordSet.html\" title=\"struct trust_dns_proto::rr::RecordSet\">RecordSet</a>","synthetic":true,"types":["trust_dns_proto::rr::rr_set::RecordSet"]},{"text":"impl&lt;'r&gt; Freeze for <a class=\"enum\" href=\"trust_dns_proto/rr/enum.RrsetRecords.html\" title=\"enum trust_dns_proto::rr::RrsetRecords\">RrsetRecords</a>&lt;'r&gt;","synthetic":true,"types":["trust_dns_proto::rr::rr_set::RrsetRecords"]},{"text":"impl Freeze for <a class=\"enum\" href=\"trust_dns_proto/rr/dns_class/enum.DNSClass.html\" title=\"enum trust_dns_proto::rr::dns_class::DNSClass\">DNSClass</a>","synthetic":true,"types":["trust_dns_proto::rr::dns_class::DNSClass"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/rr/domain/struct.Label.html\" title=\"struct trust_dns_proto::rr::domain::Label\">Label</a>","synthetic":true,"types":["trust_dns_proto::rr::domain::label::Label"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/rr/domain/usage/struct.DEFAULT.html\" title=\"struct trust_dns_proto::rr::domain::usage::DEFAULT\">DEFAULT</a>","synthetic":true,"types":["trust_dns_proto::rr::domain::usage::DEFAULT"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/rr/domain/usage/struct.IN_ADDR_ARPA.html\" title=\"struct trust_dns_proto::rr::domain::usage::IN_ADDR_ARPA\">IN_ADDR_ARPA</a>","synthetic":true,"types":["trust_dns_proto::rr::domain::usage::IN_ADDR_ARPA"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/rr/domain/usage/struct.IP6_ARPA.html\" title=\"struct trust_dns_proto::rr::domain::usage::IP6_ARPA\">IP6_ARPA</a>","synthetic":true,"types":["trust_dns_proto::rr::domain::usage::IP6_ARPA"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/rr/domain/usage/struct.LOCALHOST.html\" title=\"struct trust_dns_proto::rr::domain::usage::LOCALHOST\">LOCALHOST</a>","synthetic":true,"types":["trust_dns_proto::rr::domain::usage::LOCALHOST"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/rr/domain/usage/struct.IN_ADDR_ARPA_127.html\" title=\"struct trust_dns_proto::rr::domain::usage::IN_ADDR_ARPA_127\">IN_ADDR_ARPA_127</a>","synthetic":true,"types":["trust_dns_proto::rr::domain::usage::IN_ADDR_ARPA_127"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/rr/domain/usage/struct.IP6_ARPA_1.html\" title=\"struct trust_dns_proto::rr::domain::usage::IP6_ARPA_1\">IP6_ARPA_1</a>","synthetic":true,"types":["trust_dns_proto::rr::domain::usage::IP6_ARPA_1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/rr/domain/usage/struct.LOCAL.html\" title=\"struct trust_dns_proto::rr::domain::usage::LOCAL\">LOCAL</a>","synthetic":true,"types":["trust_dns_proto::rr::domain::usage::LOCAL"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/rr/domain/usage/struct.IN_ADDR_ARPA_169_254.html\" title=\"struct trust_dns_proto::rr::domain::usage::IN_ADDR_ARPA_169_254\">IN_ADDR_ARPA_169_254</a>","synthetic":true,"types":["trust_dns_proto::rr::domain::usage::IN_ADDR_ARPA_169_254"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/rr/domain/usage/struct.IP6_ARPA_FE_8.html\" title=\"struct trust_dns_proto::rr::domain::usage::IP6_ARPA_FE_8\">IP6_ARPA_FE_8</a>","synthetic":true,"types":["trust_dns_proto::rr::domain::usage::IP6_ARPA_FE_8"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/rr/domain/usage/struct.IP6_ARPA_FE_9.html\" title=\"struct trust_dns_proto::rr::domain::usage::IP6_ARPA_FE_9\">IP6_ARPA_FE_9</a>","synthetic":true,"types":["trust_dns_proto::rr::domain::usage::IP6_ARPA_FE_9"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/rr/domain/usage/struct.IP6_ARPA_FE_B.html\" title=\"struct trust_dns_proto::rr::domain::usage::IP6_ARPA_FE_B\">IP6_ARPA_FE_B</a>","synthetic":true,"types":["trust_dns_proto::rr::domain::usage::IP6_ARPA_FE_B"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/rr/domain/usage/struct.INVALID.html\" title=\"struct trust_dns_proto::rr::domain::usage::INVALID\">INVALID</a>","synthetic":true,"types":["trust_dns_proto::rr::domain::usage::INVALID"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/rr/domain/usage/struct.ZoneUsage.html\" title=\"struct trust_dns_proto::rr::domain::usage::ZoneUsage\">ZoneUsage</a>","synthetic":true,"types":["trust_dns_proto::rr::domain::usage::ZoneUsage"]},{"text":"impl Freeze for <a class=\"enum\" href=\"trust_dns_proto/rr/domain/usage/enum.UserUsage.html\" title=\"enum trust_dns_proto::rr::domain::usage::UserUsage\">UserUsage</a>","synthetic":true,"types":["trust_dns_proto::rr::domain::usage::UserUsage"]},{"text":"impl Freeze for <a class=\"enum\" href=\"trust_dns_proto/rr/domain/usage/enum.AppUsage.html\" title=\"enum trust_dns_proto::rr::domain::usage::AppUsage\">AppUsage</a>","synthetic":true,"types":["trust_dns_proto::rr::domain::usage::AppUsage"]},{"text":"impl Freeze for <a class=\"enum\" href=\"trust_dns_proto/rr/domain/usage/enum.ResolverUsage.html\" title=\"enum trust_dns_proto::rr::domain::usage::ResolverUsage\">ResolverUsage</a>","synthetic":true,"types":["trust_dns_proto::rr::domain::usage::ResolverUsage"]},{"text":"impl Freeze for <a class=\"enum\" href=\"trust_dns_proto/rr/domain/usage/enum.CacheUsage.html\" title=\"enum trust_dns_proto::rr::domain::usage::CacheUsage\">CacheUsage</a>","synthetic":true,"types":["trust_dns_proto::rr::domain::usage::CacheUsage"]},{"text":"impl Freeze for <a class=\"enum\" href=\"trust_dns_proto/rr/domain/usage/enum.AuthUsage.html\" title=\"enum trust_dns_proto::rr::domain::usage::AuthUsage\">AuthUsage</a>","synthetic":true,"types":["trust_dns_proto::rr::domain::usage::AuthUsage"]},{"text":"impl Freeze for <a class=\"enum\" href=\"trust_dns_proto/rr/domain/usage/enum.OpUsage.html\" title=\"enum trust_dns_proto::rr::domain::usage::OpUsage\">OpUsage</a>","synthetic":true,"types":["trust_dns_proto::rr::domain::usage::OpUsage"]},{"text":"impl Freeze for <a class=\"enum\" href=\"trust_dns_proto/rr/domain/usage/enum.RegistryUsage.html\" title=\"enum trust_dns_proto::rr::domain::usage::RegistryUsage\">RegistryUsage</a>","synthetic":true,"types":["trust_dns_proto::rr::domain::usage::RegistryUsage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/rr/rdata/caa/struct.CAA.html\" title=\"struct trust_dns_proto::rr::rdata::caa::CAA\">CAA</a>","synthetic":true,"types":["trust_dns_proto::rr::rdata::caa::CAA"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/rr/rdata/caa/struct.KeyValue.html\" title=\"struct trust_dns_proto::rr::rdata::caa::KeyValue\">KeyValue</a>","synthetic":true,"types":["trust_dns_proto::rr::rdata::caa::KeyValue"]},{"text":"impl Freeze for <a class=\"enum\" href=\"trust_dns_proto/rr/rdata/caa/enum.Property.html\" title=\"enum trust_dns_proto::rr::rdata::caa::Property\">Property</a>","synthetic":true,"types":["trust_dns_proto::rr::rdata::caa::Property"]},{"text":"impl Freeze for <a class=\"enum\" href=\"trust_dns_proto/rr/rdata/caa/enum.Value.html\" title=\"enum trust_dns_proto::rr::rdata::caa::Value\">Value</a>","synthetic":true,"types":["trust_dns_proto::rr::rdata::caa::Value"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/rr/rdata/mx/struct.MX.html\" title=\"struct trust_dns_proto::rr::rdata::mx::MX\">MX</a>","synthetic":true,"types":["trust_dns_proto::rr::rdata::mx::MX"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/rr/rdata/naptr/struct.NAPTR.html\" title=\"struct trust_dns_proto::rr::rdata::naptr::NAPTR\">NAPTR</a>","synthetic":true,"types":["trust_dns_proto::rr::rdata::naptr::NAPTR"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/rr/rdata/null/struct.NULL.html\" title=\"struct trust_dns_proto::rr::rdata::null::NULL\">NULL</a>","synthetic":true,"types":["trust_dns_proto::rr::rdata::null::NULL"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/rr/rdata/openpgpkey/struct.OPENPGPKEY.html\" title=\"struct trust_dns_proto::rr::rdata::openpgpkey::OPENPGPKEY\">OPENPGPKEY</a>","synthetic":true,"types":["trust_dns_proto::rr::rdata::openpgpkey::OPENPGPKEY"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/rr/rdata/opt/struct.OPT.html\" title=\"struct trust_dns_proto::rr::rdata::opt::OPT\">OPT</a>","synthetic":true,"types":["trust_dns_proto::rr::rdata::opt::OPT"]},{"text":"impl Freeze for <a class=\"enum\" href=\"trust_dns_proto/rr/rdata/opt/enum.EdnsCode.html\" title=\"enum trust_dns_proto::rr::rdata::opt::EdnsCode\">EdnsCode</a>","synthetic":true,"types":["trust_dns_proto::rr::rdata::opt::EdnsCode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"trust_dns_proto/rr/rdata/opt/enum.EdnsOption.html\" title=\"enum trust_dns_proto::rr::rdata::opt::EdnsOption\">EdnsOption</a>","synthetic":true,"types":["trust_dns_proto::rr::rdata::opt::EdnsOption"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/rr/rdata/soa/struct.SOA.html\" title=\"struct trust_dns_proto::rr::rdata::soa::SOA\">SOA</a>","synthetic":true,"types":["trust_dns_proto::rr::rdata::soa::SOA"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/rr/rdata/srv/struct.SRV.html\" title=\"struct trust_dns_proto::rr::rdata::srv::SRV\">SRV</a>","synthetic":true,"types":["trust_dns_proto::rr::rdata::srv::SRV"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/rr/rdata/sshfp/struct.SSHFP.html\" title=\"struct trust_dns_proto::rr::rdata::sshfp::SSHFP\">SSHFP</a>","synthetic":true,"types":["trust_dns_proto::rr::rdata::sshfp::SSHFP"]},{"text":"impl Freeze for <a class=\"enum\" href=\"trust_dns_proto/rr/rdata/sshfp/enum.Algorithm.html\" title=\"enum trust_dns_proto::rr::rdata::sshfp::Algorithm\">Algorithm</a>","synthetic":true,"types":["trust_dns_proto::rr::rdata::sshfp::Algorithm"]},{"text":"impl Freeze for <a class=\"enum\" href=\"trust_dns_proto/rr/rdata/sshfp/enum.FingerprintType.html\" title=\"enum trust_dns_proto::rr::rdata::sshfp::FingerprintType\">FingerprintType</a>","synthetic":true,"types":["trust_dns_proto::rr::rdata::sshfp::FingerprintType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/rr/rdata/tlsa/struct.TLSA.html\" title=\"struct trust_dns_proto::rr::rdata::tlsa::TLSA\">TLSA</a>","synthetic":true,"types":["trust_dns_proto::rr::rdata::tlsa::TLSA"]},{"text":"impl Freeze for <a class=\"enum\" href=\"trust_dns_proto/rr/rdata/tlsa/enum.CertUsage.html\" title=\"enum trust_dns_proto::rr::rdata::tlsa::CertUsage\">CertUsage</a>","synthetic":true,"types":["trust_dns_proto::rr::rdata::tlsa::CertUsage"]},{"text":"impl Freeze for <a class=\"enum\" href=\"trust_dns_proto/rr/rdata/tlsa/enum.Selector.html\" title=\"enum trust_dns_proto::rr::rdata::tlsa::Selector\">Selector</a>","synthetic":true,"types":["trust_dns_proto::rr::rdata::tlsa::Selector"]},{"text":"impl Freeze for <a class=\"enum\" href=\"trust_dns_proto/rr/rdata/tlsa/enum.Matching.html\" title=\"enum trust_dns_proto::rr::rdata::tlsa::Matching\">Matching</a>","synthetic":true,"types":["trust_dns_proto::rr::rdata::tlsa::Matching"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/rr/rdata/txt/struct.TXT.html\" title=\"struct trust_dns_proto::rr::rdata::txt::TXT\">TXT</a>","synthetic":true,"types":["trust_dns_proto::rr::rdata::txt::TXT"]},{"text":"impl Freeze for <a class=\"enum\" href=\"trust_dns_proto/rr/record_data/enum.RData.html\" title=\"enum trust_dns_proto::rr::record_data::RData\">RData</a>","synthetic":true,"types":["trust_dns_proto::rr::record_data::RData"]},{"text":"impl Freeze for <a class=\"enum\" href=\"trust_dns_proto/rr/record_type/enum.RecordType.html\" title=\"enum trust_dns_proto::rr::record_type::RecordType\">RecordType</a>","synthetic":true,"types":["trust_dns_proto::rr::record_type::RecordType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/rr/resource/struct.Record.html\" title=\"struct trust_dns_proto::rr::resource::Record\">Record</a>","synthetic":true,"types":["trust_dns_proto::rr::resource::Record"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"trust_dns_proto/serialize/binary/struct.BinDecoder.html\" title=\"struct trust_dns_proto::serialize::binary::BinDecoder\">BinDecoder</a>&lt;'a&gt;","synthetic":true,"types":["trust_dns_proto::serialize::binary::decoder::BinDecoder"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"trust_dns_proto/serialize/binary/struct.BinEncoder.html\" title=\"struct trust_dns_proto::serialize::binary::BinEncoder\">BinEncoder</a>&lt;'a&gt;","synthetic":true,"types":["trust_dns_proto::serialize::binary::encoder::BinEncoder"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"trust_dns_proto/serialize/binary/struct.Restrict.html\" title=\"struct trust_dns_proto::serialize::binary::Restrict\">Restrict</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["trust_dns_proto::serialize::binary::restrict::Restrict"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"trust_dns_proto/serialize/binary/struct.Verified.html\" title=\"struct trust_dns_proto::serialize::binary::Verified\">Verified</a>&lt;'a, T&gt;","synthetic":true,"types":["trust_dns_proto::serialize::binary::restrict::Verified"]},{"text":"impl Freeze for <a class=\"enum\" href=\"trust_dns_proto/serialize/binary/enum.EncodeMode.html\" title=\"enum trust_dns_proto::serialize::binary::EncodeMode\">EncodeMode</a>","synthetic":true,"types":["trust_dns_proto::serialize::binary::encoder::EncodeMode"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"trust_dns_proto/tcp/struct.TcpClientConnect.html\" title=\"struct trust_dns_proto::tcp::TcpClientConnect\">TcpClientConnect</a>&lt;S&gt;","synthetic":true,"types":["trust_dns_proto::tcp::tcp_client_stream::TcpClientConnect"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"trust_dns_proto/tcp/struct.TcpClientStream.html\" title=\"struct trust_dns_proto::tcp::TcpClientStream\">TcpClientStream</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["trust_dns_proto::tcp::tcp_client_stream::TcpClientStream"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"trust_dns_proto/tcp/struct.TcpStream.html\" title=\"struct trust_dns_proto::tcp::TcpStream\">TcpStream</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["trust_dns_proto::tcp::tcp_stream::TcpStream"]},{"text":"impl&lt;S, MF&gt; Freeze for <a class=\"struct\" href=\"trust_dns_proto/udp/struct.UdpClientConnect.html\" title=\"struct trust_dns_proto::udp::UdpClientConnect\">UdpClientConnect</a>&lt;S, MF&gt;","synthetic":true,"types":["trust_dns_proto::udp::udp_client_stream::UdpClientConnect"]},{"text":"impl&lt;S, MF&gt; Freeze for <a class=\"struct\" href=\"trust_dns_proto/udp/struct.UdpClientStream.html\" title=\"struct trust_dns_proto::udp::UdpClientStream\">UdpClientStream</a>&lt;S, MF&gt;","synthetic":true,"types":["trust_dns_proto::udp::udp_client_stream::UdpClientStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/udp/struct.UdpResponse.html\" title=\"struct trust_dns_proto::udp::UdpResponse\">UdpResponse</a>","synthetic":true,"types":["trust_dns_proto::udp::udp_client_stream::UdpResponse"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"trust_dns_proto/udp/struct.UdpStream.html\" title=\"struct trust_dns_proto::udp::UdpStream\">UdpStream</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["trust_dns_proto::udp::udp_stream::UdpStream"]},{"text":"impl&lt;S, R&gt; Freeze for <a class=\"struct\" href=\"trust_dns_proto/xfer/struct.DnsExchange.html\" title=\"struct trust_dns_proto::xfer::DnsExchange\">DnsExchange</a>&lt;S, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["trust_dns_proto::xfer::dns_exchange::DnsExchange"]},{"text":"impl&lt;F, S, R&gt; !Freeze for <a class=\"struct\" href=\"trust_dns_proto/xfer/struct.DnsExchangeConnect.html\" title=\"struct trust_dns_proto::xfer::DnsExchangeConnect\">DnsExchangeConnect</a>&lt;F, S, R&gt;","synthetic":true,"types":["trust_dns_proto::xfer::dns_exchange::DnsExchangeConnect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/xfer/struct.SerialMessage.html\" title=\"struct trust_dns_proto::xfer::SerialMessage\">SerialMessage</a>","synthetic":true,"types":["trust_dns_proto::xfer::serial_message::SerialMessage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/xfer/struct.BufStreamHandle.html\" title=\"struct trust_dns_proto::xfer::BufStreamHandle\">BufStreamHandle</a>","synthetic":true,"types":["trust_dns_proto::xfer::BufStreamHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/xfer/struct.BufDnsStreamHandle.html\" title=\"struct trust_dns_proto::xfer::BufDnsStreamHandle\">BufDnsStreamHandle</a>","synthetic":true,"types":["trust_dns_proto::xfer::BufDnsStreamHandle"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"trust_dns_proto/xfer/struct.DnsRequestStreamHandle.html\" title=\"struct trust_dns_proto::xfer::DnsRequestStreamHandle\">DnsRequestStreamHandle</a>&lt;F&gt;","synthetic":true,"types":["trust_dns_proto::xfer::DnsRequestStreamHandle"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"trust_dns_proto/xfer/struct.BufDnsRequestStreamHandle.html\" title=\"struct trust_dns_proto::xfer::BufDnsRequestStreamHandle\">BufDnsRequestStreamHandle</a>&lt;F&gt;","synthetic":true,"types":["trust_dns_proto::xfer::BufDnsRequestStreamHandle"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"trust_dns_proto/xfer/struct.OneshotDnsRequest.html\" title=\"struct trust_dns_proto::xfer::OneshotDnsRequest\">OneshotDnsRequest</a>&lt;F&gt;","synthetic":true,"types":["trust_dns_proto::xfer::OneshotDnsRequest"]},{"text":"impl&lt;F&gt; !Freeze for <a class=\"enum\" href=\"trust_dns_proto/xfer/enum.OneshotDnsResponseReceiver.html\" title=\"enum trust_dns_proto::xfer::OneshotDnsResponseReceiver\">OneshotDnsResponseReceiver</a>&lt;F&gt;","synthetic":true,"types":["trust_dns_proto::xfer::OneshotDnsResponseReceiver"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/xfer/dns_handle/struct.StreamHandle.html\" title=\"struct trust_dns_proto::xfer::dns_handle::StreamHandle\">StreamHandle</a>","synthetic":true,"types":["trust_dns_proto::xfer::dns_handle::StreamHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/xfer/dns_handle/struct.BasicDnsHandle.html\" title=\"struct trust_dns_proto::xfer::dns_handle::BasicDnsHandle\">BasicDnsHandle</a>","synthetic":true,"types":["trust_dns_proto::xfer::dns_handle::BasicDnsHandle"]},{"text":"impl&lt;S, MF, D&gt; Freeze for <a class=\"struct\" href=\"trust_dns_proto/xfer/dns_multiplexer/struct.DnsMultiplexer.html\" title=\"struct trust_dns_proto::xfer::dns_multiplexer::DnsMultiplexer\">DnsMultiplexer</a>&lt;S, MF, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["trust_dns_proto::xfer::dns_multiplexer::DnsMultiplexer"]},{"text":"impl&lt;F, S, MF&gt; Freeze for <a class=\"struct\" href=\"trust_dns_proto/xfer/dns_multiplexer/struct.DnsMultiplexerConnect.html\" title=\"struct trust_dns_proto::xfer::dns_multiplexer::DnsMultiplexerConnect\">DnsMultiplexerConnect</a>&lt;F, S, MF&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["trust_dns_proto::xfer::dns_multiplexer::DnsMultiplexerConnect"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"trust_dns_proto/xfer/dns_multiplexer/struct.DnsMultiplexerSerialResponse.html\" title=\"struct trust_dns_proto::xfer::dns_multiplexer::DnsMultiplexerSerialResponse\">DnsMultiplexerSerialResponse</a>","synthetic":true,"types":["trust_dns_proto::xfer::dns_multiplexer::DnsMultiplexerSerialResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/xfer/dns_request/struct.DnsRequestOptions.html\" title=\"struct trust_dns_proto::xfer::dns_request::DnsRequestOptions\">DnsRequestOptions</a>","synthetic":true,"types":["trust_dns_proto::xfer::dns_request::DnsRequestOptions"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/xfer/dns_request/struct.DnsRequest.html\" title=\"struct trust_dns_proto::xfer::dns_request::DnsRequest\">DnsRequest</a>","synthetic":true,"types":["trust_dns_proto::xfer::dns_request::DnsRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_proto/xfer/dns_response/struct.DnsResponse.html\" title=\"struct trust_dns_proto::xfer::dns_response::DnsResponse\">DnsResponse</a>","synthetic":true,"types":["trust_dns_proto::xfer::dns_response::DnsResponse"]},{"text":"impl&lt;H&gt; Freeze for <a class=\"struct\" href=\"trust_dns_proto/xfer/retry_dns_handle/struct.RetryDnsHandle.html\" title=\"struct trust_dns_proto::xfer::retry_dns_handle::RetryDnsHandle\">RetryDnsHandle</a>&lt;H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Freeze,&nbsp;</span>","synthetic":true,"types":["trust_dns_proto::xfer::retry_dns_handle::RetryDnsHandle"]}];
implementors["trust_dns_resolver"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/struct.AsyncResolver.html\" title=\"struct trust_dns_resolver::AsyncResolver\">AsyncResolver</a>","synthetic":true,"types":["trust_dns_resolver::async_resolver::AsyncResolver"]},{"text":"impl&lt;F, G&gt; Freeze for <a class=\"struct\" href=\"trust_dns_resolver/struct.Background.html\" title=\"struct trust_dns_resolver::Background\">Background</a>&lt;F, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["trust_dns_resolver::async_resolver::Background"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/struct.Hosts.html\" title=\"struct trust_dns_resolver::Hosts\">Hosts</a>","synthetic":true,"types":["trust_dns_resolver::hosts::Hosts"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"trust_dns_resolver/struct.Resolver.html\" title=\"struct trust_dns_resolver::Resolver\">Resolver</a>","synthetic":true,"types":["trust_dns_resolver::resolver::Resolver"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/config/struct.ResolverConfig.html\" title=\"struct trust_dns_resolver::config::ResolverConfig\">ResolverConfig</a>","synthetic":true,"types":["trust_dns_resolver::config::ResolverConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/config/struct.NameServerConfig.html\" title=\"struct trust_dns_resolver::config::NameServerConfig\">NameServerConfig</a>","synthetic":true,"types":["trust_dns_resolver::config::NameServerConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/config/struct.NameServerConfigGroup.html\" title=\"struct trust_dns_resolver::config::NameServerConfigGroup\">NameServerConfigGroup</a>","synthetic":true,"types":["trust_dns_resolver::config::NameServerConfigGroup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/config/struct.ResolverOpts.html\" title=\"struct trust_dns_resolver::config::ResolverOpts\">ResolverOpts</a>","synthetic":true,"types":["trust_dns_resolver::config::ResolverOpts"]},{"text":"impl Freeze for <a class=\"enum\" href=\"trust_dns_resolver/config/enum.Protocol.html\" title=\"enum trust_dns_resolver::config::Protocol\">Protocol</a>","synthetic":true,"types":["trust_dns_resolver::config::Protocol"]},{"text":"impl Freeze for <a class=\"enum\" href=\"trust_dns_resolver/config/enum.LookupIpStrategy.html\" title=\"enum trust_dns_resolver::config::LookupIpStrategy\">LookupIpStrategy</a>","synthetic":true,"types":["trust_dns_resolver::config::LookupIpStrategy"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"trust_dns_resolver/error/struct.ResolveError.html\" title=\"struct trust_dns_resolver::error::ResolveError\">ResolveError</a>","synthetic":true,"types":["trust_dns_resolver::error::ResolveError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"trust_dns_resolver/error/enum.ResolveErrorKind.html\" title=\"enum trust_dns_resolver::error::ResolveErrorKind\">ResolveErrorKind</a>","synthetic":true,"types":["trust_dns_resolver::error::ResolveErrorKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.Lookup.html\" title=\"struct trust_dns_resolver::lookup::Lookup\">Lookup</a>","synthetic":true,"types":["trust_dns_resolver::lookup::Lookup"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.LookupIter.html\" title=\"struct trust_dns_resolver::lookup::LookupIter\">LookupIter</a>&lt;'a&gt;","synthetic":true,"types":["trust_dns_resolver::lookup::LookupIter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.LookupRecordIter.html\" title=\"struct trust_dns_resolver::lookup::LookupRecordIter\">LookupRecordIter</a>&lt;'a&gt;","synthetic":true,"types":["trust_dns_resolver::lookup::LookupRecordIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.LookupIntoIter.html\" title=\"struct trust_dns_resolver::lookup::LookupIntoIter\">LookupIntoIter</a>","synthetic":true,"types":["trust_dns_resolver::lookup::LookupIntoIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.SrvLookup.html\" title=\"struct trust_dns_resolver::lookup::SrvLookup\">SrvLookup</a>","synthetic":true,"types":["trust_dns_resolver::lookup::SrvLookup"]},{"text":"impl&lt;'i&gt; Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.SrvLookupIter.html\" title=\"struct trust_dns_resolver::lookup::SrvLookupIter\">SrvLookupIter</a>&lt;'i&gt;","synthetic":true,"types":["trust_dns_resolver::lookup::SrvLookupIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.SrvLookupIntoIter.html\" title=\"struct trust_dns_resolver::lookup::SrvLookupIntoIter\">SrvLookupIntoIter</a>","synthetic":true,"types":["trust_dns_resolver::lookup::SrvLookupIntoIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.SrvLookupFuture.html\" title=\"struct trust_dns_resolver::lookup::SrvLookupFuture\">SrvLookupFuture</a>","synthetic":true,"types":["trust_dns_resolver::lookup::SrvLookupFuture"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.ReverseLookup.html\" title=\"struct trust_dns_resolver::lookup::ReverseLookup\">ReverseLookup</a>","synthetic":true,"types":["trust_dns_resolver::lookup::ReverseLookup"]},{"text":"impl&lt;'i&gt; Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.ReverseLookupIter.html\" title=\"struct trust_dns_resolver::lookup::ReverseLookupIter\">ReverseLookupIter</a>&lt;'i&gt;","synthetic":true,"types":["trust_dns_resolver::lookup::ReverseLookupIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.ReverseLookupIntoIter.html\" title=\"struct trust_dns_resolver::lookup::ReverseLookupIntoIter\">ReverseLookupIntoIter</a>","synthetic":true,"types":["trust_dns_resolver::lookup::ReverseLookupIntoIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.ReverseLookupFuture.html\" title=\"struct trust_dns_resolver::lookup::ReverseLookupFuture\">ReverseLookupFuture</a>","synthetic":true,"types":["trust_dns_resolver::lookup::ReverseLookupFuture"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.Ipv4Lookup.html\" title=\"struct trust_dns_resolver::lookup::Ipv4Lookup\">Ipv4Lookup</a>","synthetic":true,"types":["trust_dns_resolver::lookup::Ipv4Lookup"]},{"text":"impl&lt;'i&gt; Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.Ipv4LookupIter.html\" title=\"struct trust_dns_resolver::lookup::Ipv4LookupIter\">Ipv4LookupIter</a>&lt;'i&gt;","synthetic":true,"types":["trust_dns_resolver::lookup::Ipv4LookupIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.Ipv4LookupIntoIter.html\" title=\"struct trust_dns_resolver::lookup::Ipv4LookupIntoIter\">Ipv4LookupIntoIter</a>","synthetic":true,"types":["trust_dns_resolver::lookup::Ipv4LookupIntoIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.Ipv4LookupFuture.html\" title=\"struct trust_dns_resolver::lookup::Ipv4LookupFuture\">Ipv4LookupFuture</a>","synthetic":true,"types":["trust_dns_resolver::lookup::Ipv4LookupFuture"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.Ipv6Lookup.html\" title=\"struct trust_dns_resolver::lookup::Ipv6Lookup\">Ipv6Lookup</a>","synthetic":true,"types":["trust_dns_resolver::lookup::Ipv6Lookup"]},{"text":"impl&lt;'i&gt; Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.Ipv6LookupIter.html\" title=\"struct trust_dns_resolver::lookup::Ipv6LookupIter\">Ipv6LookupIter</a>&lt;'i&gt;","synthetic":true,"types":["trust_dns_resolver::lookup::Ipv6LookupIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.Ipv6LookupIntoIter.html\" title=\"struct trust_dns_resolver::lookup::Ipv6LookupIntoIter\">Ipv6LookupIntoIter</a>","synthetic":true,"types":["trust_dns_resolver::lookup::Ipv6LookupIntoIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.Ipv6LookupFuture.html\" title=\"struct trust_dns_resolver::lookup::Ipv6LookupFuture\">Ipv6LookupFuture</a>","synthetic":true,"types":["trust_dns_resolver::lookup::Ipv6LookupFuture"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.MxLookup.html\" title=\"struct trust_dns_resolver::lookup::MxLookup\">MxLookup</a>","synthetic":true,"types":["trust_dns_resolver::lookup::MxLookup"]},{"text":"impl&lt;'i&gt; Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.MxLookupIter.html\" title=\"struct trust_dns_resolver::lookup::MxLookupIter\">MxLookupIter</a>&lt;'i&gt;","synthetic":true,"types":["trust_dns_resolver::lookup::MxLookupIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.MxLookupIntoIter.html\" title=\"struct trust_dns_resolver::lookup::MxLookupIntoIter\">MxLookupIntoIter</a>","synthetic":true,"types":["trust_dns_resolver::lookup::MxLookupIntoIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.MxLookupFuture.html\" title=\"struct trust_dns_resolver::lookup::MxLookupFuture\">MxLookupFuture</a>","synthetic":true,"types":["trust_dns_resolver::lookup::MxLookupFuture"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.TxtLookup.html\" title=\"struct trust_dns_resolver::lookup::TxtLookup\">TxtLookup</a>","synthetic":true,"types":["trust_dns_resolver::lookup::TxtLookup"]},{"text":"impl&lt;'i&gt; Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.TxtLookupIter.html\" title=\"struct trust_dns_resolver::lookup::TxtLookupIter\">TxtLookupIter</a>&lt;'i&gt;","synthetic":true,"types":["trust_dns_resolver::lookup::TxtLookupIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.TxtLookupIntoIter.html\" title=\"struct trust_dns_resolver::lookup::TxtLookupIntoIter\">TxtLookupIntoIter</a>","synthetic":true,"types":["trust_dns_resolver::lookup::TxtLookupIntoIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.TxtLookupFuture.html\" title=\"struct trust_dns_resolver::lookup::TxtLookupFuture\">TxtLookupFuture</a>","synthetic":true,"types":["trust_dns_resolver::lookup::TxtLookupFuture"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.SoaLookup.html\" title=\"struct trust_dns_resolver::lookup::SoaLookup\">SoaLookup</a>","synthetic":true,"types":["trust_dns_resolver::lookup::SoaLookup"]},{"text":"impl&lt;'i&gt; Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.SoaLookupIter.html\" title=\"struct trust_dns_resolver::lookup::SoaLookupIter\">SoaLookupIter</a>&lt;'i&gt;","synthetic":true,"types":["trust_dns_resolver::lookup::SoaLookupIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.SoaLookupIntoIter.html\" title=\"struct trust_dns_resolver::lookup::SoaLookupIntoIter\">SoaLookupIntoIter</a>","synthetic":true,"types":["trust_dns_resolver::lookup::SoaLookupIntoIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.SoaLookupFuture.html\" title=\"struct trust_dns_resolver::lookup::SoaLookupFuture\">SoaLookupFuture</a>","synthetic":true,"types":["trust_dns_resolver::lookup::SoaLookupFuture"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.NsLookup.html\" title=\"struct trust_dns_resolver::lookup::NsLookup\">NsLookup</a>","synthetic":true,"types":["trust_dns_resolver::lookup::NsLookup"]},{"text":"impl&lt;'i&gt; Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.NsLookupIter.html\" title=\"struct trust_dns_resolver::lookup::NsLookupIter\">NsLookupIter</a>&lt;'i&gt;","synthetic":true,"types":["trust_dns_resolver::lookup::NsLookupIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.NsLookupIntoIter.html\" title=\"struct trust_dns_resolver::lookup::NsLookupIntoIter\">NsLookupIntoIter</a>","synthetic":true,"types":["trust_dns_resolver::lookup::NsLookupIntoIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup/struct.NsLookupFuture.html\" title=\"struct trust_dns_resolver::lookup::NsLookupFuture\">NsLookupFuture</a>","synthetic":true,"types":["trust_dns_resolver::lookup::NsLookupFuture"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup_ip/struct.LookupIp.html\" title=\"struct trust_dns_resolver::lookup_ip::LookupIp\">LookupIp</a>","synthetic":true,"types":["trust_dns_resolver::lookup_ip::LookupIp"]},{"text":"impl&lt;'i&gt; Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup_ip/struct.LookupIpIter.html\" title=\"struct trust_dns_resolver::lookup_ip::LookupIpIter\">LookupIpIter</a>&lt;'i&gt;","synthetic":true,"types":["trust_dns_resolver::lookup_ip::LookupIpIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup_ip/struct.LookupIpIntoIter.html\" title=\"struct trust_dns_resolver::lookup_ip::LookupIpIntoIter\">LookupIpIntoIter</a>","synthetic":true,"types":["trust_dns_resolver::lookup_ip::LookupIpIntoIter"]},{"text":"impl&lt;C&gt; Freeze for <a class=\"struct\" href=\"trust_dns_resolver/lookup_ip/struct.LookupIpFuture.html\" title=\"struct trust_dns_resolver::lookup_ip::LookupIpFuture\">LookupIpFuture</a>&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":["trust_dns_resolver::lookup_ip::LookupIpFuture"]}];
implementors["typenum"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/struct.Greater.html\" title=\"struct typenum::Greater\">Greater</a>","synthetic":true,"types":["typenum::Greater"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/struct.Less.html\" title=\"struct typenum::Less\">Less</a>","synthetic":true,"types":["typenum::Less"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/struct.Equal.html\" title=\"struct typenum::Equal\">Equal</a>","synthetic":true,"types":["typenum::Equal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>","synthetic":true,"types":["typenum::bit::B0"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>","synthetic":true,"types":["typenum::bit::B1"]},{"text":"impl&lt;U&gt; Freeze for <a class=\"struct\" href=\"typenum/int/struct.PInt.html\" title=\"struct typenum::int::PInt\">PInt</a>&lt;U&gt;","synthetic":true,"types":["typenum::int::PInt"]},{"text":"impl&lt;U&gt; Freeze for <a class=\"struct\" href=\"typenum/int/struct.NInt.html\" title=\"struct typenum::int::NInt\">NInt</a>&lt;U&gt;","synthetic":true,"types":["typenum::int::NInt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>","synthetic":true,"types":["typenum::int::Z0"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>","synthetic":true,"types":["typenum::uint::UTerm"]},{"text":"impl&lt;U, B&gt; Freeze for <a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;U, B&gt;","synthetic":true,"types":["typenum::uint::UInt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/array/struct.ATerm.html\" title=\"struct typenum::array::ATerm\">ATerm</a>","synthetic":true,"types":["typenum::array::ATerm"]},{"text":"impl&lt;V, A&gt; Freeze for <a class=\"struct\" href=\"typenum/array/struct.TArr.html\" title=\"struct typenum::array::TArr\">TArr</a>&lt;V, A&gt;","synthetic":true,"types":["typenum::array::TArr"]}];
implementors["unchecked_index"] = [{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"unchecked_index/struct.UncheckedIndex.html\" title=\"struct unchecked_index::UncheckedIndex\">UncheckedIndex</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["unchecked_index::UncheckedIndex"]}];
implementors["unicase"] = [{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"unicase/struct.UniCase.html\" title=\"struct unicase::UniCase\">UniCase</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["unicase::UniCase"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"unicase/struct.Ascii.html\" title=\"struct unicase::Ascii\">Ascii</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["unicase::Ascii"]}];
implementors["unicode_bidi"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"unicode_bidi/struct.ParagraphInfo.html\" title=\"struct unicode_bidi::ParagraphInfo\">ParagraphInfo</a>","synthetic":true,"types":["unicode_bidi::ParagraphInfo"]},{"text":"impl&lt;'text&gt; Freeze for <a class=\"struct\" href=\"unicode_bidi/struct.InitialInfo.html\" title=\"struct unicode_bidi::InitialInfo\">InitialInfo</a>&lt;'text&gt;","synthetic":true,"types":["unicode_bidi::InitialInfo"]},{"text":"impl&lt;'text&gt; Freeze for <a class=\"struct\" href=\"unicode_bidi/struct.BidiInfo.html\" title=\"struct unicode_bidi::BidiInfo\">BidiInfo</a>&lt;'text&gt;","synthetic":true,"types":["unicode_bidi::BidiInfo"]},{"text":"impl Freeze for <a class=\"enum\" href=\"unicode_bidi/enum.BidiClass.html\" title=\"enum unicode_bidi::BidiClass\">BidiClass</a>","synthetic":true,"types":["unicode_bidi::char_data::tables::BidiClass"]},{"text":"impl Freeze for <a class=\"struct\" href=\"unicode_bidi/level/struct.Level.html\" title=\"struct unicode_bidi::level::Level\">Level</a>","synthetic":true,"types":["unicode_bidi::level::Level"]},{"text":"impl Freeze for <a class=\"enum\" href=\"unicode_bidi/level/enum.Error.html\" title=\"enum unicode_bidi::level::Error\">Error</a>","synthetic":true,"types":["unicode_bidi::level::Error"]}];
implementors["unicode_normalization"] = [{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"unicode_normalization/struct.Decompositions.html\" title=\"struct unicode_normalization::Decompositions\">Decompositions</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["unicode_normalization::decompose::Decompositions"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"unicode_normalization/struct.Recompositions.html\" title=\"struct unicode_normalization::Recompositions\">Recompositions</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["unicode_normalization::recompose::Recompositions"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"unicode_normalization/struct.StreamSafe.html\" title=\"struct unicode_normalization::StreamSafe\">StreamSafe</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["unicode_normalization::stream_safe::StreamSafe"]},{"text":"impl Freeze for <a class=\"enum\" href=\"unicode_normalization/enum.IsNormalized.html\" title=\"enum unicode_normalization::IsNormalized\">IsNormalized</a>","synthetic":true,"types":["unicode_normalization::quick_check::IsNormalized"]}];
implementors["unicode_segmentation"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unicode_segmentation/struct.Graphemes.html\" title=\"struct unicode_segmentation::Graphemes\">Graphemes</a>&lt;'a&gt;","synthetic":true,"types":["unicode_segmentation::grapheme::Graphemes"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unicode_segmentation/struct.GraphemeIndices.html\" title=\"struct unicode_segmentation::GraphemeIndices\">GraphemeIndices</a>&lt;'a&gt;","synthetic":true,"types":["unicode_segmentation::grapheme::GraphemeIndices"]},{"text":"impl Freeze for <a class=\"struct\" href=\"unicode_segmentation/struct.GraphemeCursor.html\" title=\"struct unicode_segmentation::GraphemeCursor\">GraphemeCursor</a>","synthetic":true,"types":["unicode_segmentation::grapheme::GraphemeCursor"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unicode_segmentation/struct.UWordBounds.html\" title=\"struct unicode_segmentation::UWordBounds\">UWordBounds</a>&lt;'a&gt;","synthetic":true,"types":["unicode_segmentation::word::UWordBounds"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unicode_segmentation/struct.UWordBoundIndices.html\" title=\"struct unicode_segmentation::UWordBoundIndices\">UWordBoundIndices</a>&lt;'a&gt;","synthetic":true,"types":["unicode_segmentation::word::UWordBoundIndices"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unicode_segmentation/struct.UnicodeWords.html\" title=\"struct unicode_segmentation::UnicodeWords\">UnicodeWords</a>&lt;'a&gt;","synthetic":true,"types":["unicode_segmentation::word::UnicodeWords"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unicode_segmentation/struct.USentenceBounds.html\" title=\"struct unicode_segmentation::USentenceBounds\">USentenceBounds</a>&lt;'a&gt;","synthetic":true,"types":["unicode_segmentation::sentence::USentenceBounds"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unicode_segmentation/struct.USentenceBoundIndices.html\" title=\"struct unicode_segmentation::USentenceBoundIndices\">USentenceBoundIndices</a>&lt;'a&gt;","synthetic":true,"types":["unicode_segmentation::sentence::USentenceBoundIndices"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unicode_segmentation/struct.UnicodeSentences.html\" title=\"struct unicode_segmentation::UnicodeSentences\">UnicodeSentences</a>&lt;'a&gt;","synthetic":true,"types":["unicode_segmentation::sentence::UnicodeSentences"]},{"text":"impl Freeze for <a class=\"enum\" href=\"unicode_segmentation/enum.GraphemeIncomplete.html\" title=\"enum unicode_segmentation::GraphemeIncomplete\">GraphemeIncomplete</a>","synthetic":true,"types":["unicode_segmentation::grapheme::GraphemeIncomplete"]}];
implementors["untrusted"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"untrusted/struct.Input.html\" title=\"struct untrusted::Input\">Input</a>&lt;'a&gt;","synthetic":true,"types":["untrusted::Input"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"untrusted/struct.Reader.html\" title=\"struct untrusted::Reader\">Reader</a>&lt;'a&gt;","synthetic":true,"types":["untrusted::Reader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"untrusted/struct.Mark.html\" title=\"struct untrusted::Mark\">Mark</a>","synthetic":true,"types":["untrusted::Mark"]},{"text":"impl Freeze for <a class=\"struct\" href=\"untrusted/struct.EndOfInput.html\" title=\"struct untrusted::EndOfInput\">EndOfInput</a>","synthetic":true,"types":["untrusted::EndOfInput"]}];
implementors["url"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"url/struct.OpaqueOrigin.html\" title=\"struct url::OpaqueOrigin\">OpaqueOrigin</a>","synthetic":true,"types":["url::origin::OpaqueOrigin"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"url/struct.PathSegmentsMut.html\" title=\"struct url::PathSegmentsMut\">PathSegmentsMut</a>&lt;'a&gt;","synthetic":true,"types":["url::path_segments::PathSegmentsMut"]},{"text":"impl Freeze for <a class=\"struct\" href=\"url/struct.Url.html\" title=\"struct url::Url\">Url</a>","synthetic":true,"types":["url::Url"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"url/struct.ParseOptions.html\" title=\"struct url::ParseOptions\">ParseOptions</a>&lt;'a&gt;","synthetic":true,"types":["url::ParseOptions"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"url/struct.UrlQuery.html\" title=\"struct url::UrlQuery\">UrlQuery</a>&lt;'a&gt;","synthetic":true,"types":["url::UrlQuery"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"enum\" href=\"url/enum.Host.html\" title=\"enum url::Host\">Host</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["url::host::Host"]},{"text":"impl Freeze for <a class=\"enum\" href=\"url/enum.Origin.html\" title=\"enum url::Origin\">Origin</a>","synthetic":true,"types":["url::origin::Origin"]},{"text":"impl Freeze for <a class=\"enum\" href=\"url/enum.ParseError.html\" title=\"enum url::ParseError\">ParseError</a>","synthetic":true,"types":["url::parser::ParseError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"url/enum.SyntaxViolation.html\" title=\"enum url::SyntaxViolation\">SyntaxViolation</a>","synthetic":true,"types":["url::parser::SyntaxViolation"]},{"text":"impl Freeze for <a class=\"enum\" href=\"url/enum.Position.html\" title=\"enum url::Position\">Position</a>","synthetic":true,"types":["url::slicing::Position"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"url/form_urlencoded/struct.Parse.html\" title=\"struct url::form_urlencoded::Parse\">Parse</a>&lt;'a&gt;","synthetic":true,"types":["url::form_urlencoded::Parse"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"url/form_urlencoded/struct.ParseIntoOwned.html\" title=\"struct url::form_urlencoded::ParseIntoOwned\">ParseIntoOwned</a>&lt;'a&gt;","synthetic":true,"types":["url::form_urlencoded::ParseIntoOwned"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"url/form_urlencoded/struct.ByteSerialize.html\" title=\"struct url::form_urlencoded::ByteSerialize\">ByteSerialize</a>&lt;'a&gt;","synthetic":true,"types":["url::form_urlencoded::ByteSerialize"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"url/form_urlencoded/struct.Serializer.html\" title=\"struct url::form_urlencoded::Serializer\">Serializer</a>&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["url::form_urlencoded::Serializer"]}];
implementors["uuid"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"uuid/struct.Builder.html\" title=\"struct uuid::Builder\">Builder</a>","synthetic":true,"types":["uuid::builder::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"uuid/struct.Error.html\" title=\"struct uuid::Error\">Error</a>","synthetic":true,"types":["uuid::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"uuid/struct.Uuid.html\" title=\"struct uuid::Uuid\">Uuid</a>","synthetic":true,"types":["uuid::Uuid"]},{"text":"impl Freeze for <a class=\"enum\" href=\"uuid/enum.Version.html\" title=\"enum uuid::Version\">Version</a>","synthetic":true,"types":["uuid::Version"]},{"text":"impl Freeze for <a class=\"enum\" href=\"uuid/enum.Variant.html\" title=\"enum uuid::Variant\">Variant</a>","synthetic":true,"types":["uuid::Variant"]},{"text":"impl Freeze for <a class=\"struct\" href=\"uuid/adapter/struct.Hyphenated.html\" title=\"struct uuid::adapter::Hyphenated\">Hyphenated</a>","synthetic":true,"types":["uuid::adapter::Hyphenated"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"uuid/adapter/struct.HyphenatedRef.html\" title=\"struct uuid::adapter::HyphenatedRef\">HyphenatedRef</a>&lt;'a&gt;","synthetic":true,"types":["uuid::adapter::HyphenatedRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"uuid/adapter/struct.Simple.html\" title=\"struct uuid::adapter::Simple\">Simple</a>","synthetic":true,"types":["uuid::adapter::Simple"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"uuid/adapter/struct.SimpleRef.html\" title=\"struct uuid::adapter::SimpleRef\">SimpleRef</a>&lt;'a&gt;","synthetic":true,"types":["uuid::adapter::SimpleRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"uuid/adapter/struct.Urn.html\" title=\"struct uuid::adapter::Urn\">Urn</a>","synthetic":true,"types":["uuid::adapter::Urn"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"uuid/adapter/struct.UrnRef.html\" title=\"struct uuid::adapter::UrnRef\">UrnRef</a>&lt;'a&gt;","synthetic":true,"types":["uuid::adapter::UrnRef"]}];
implementors["v_htmlescape"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"v_htmlescape/struct.HTMLEscape.html\" title=\"struct v_htmlescape::HTMLEscape\">HTMLEscape</a>&lt;'a&gt;","synthetic":true,"types":["v_htmlescape::HTMLEscape"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"v_htmlescape/fallback/struct.HTMLEscape.html\" title=\"struct v_htmlescape::fallback::HTMLEscape\">HTMLEscape</a>&lt;'a&gt;","synthetic":true,"types":["v_htmlescape::fallback::HTMLEscape"]}];
implementors["vrme_server"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"vrme_server/accounts/get_info/struct.AccountInfoResponse.html\" title=\"struct vrme_server::accounts::get_info::AccountInfoResponse\">AccountInfoResponse</a>","synthetic":true,"types":["vrme_server::accounts::get_info::AccountInfoResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"vrme_server/accounts/get_uuid/struct.GetUuidRequest.html\" title=\"struct vrme_server::accounts::get_uuid::GetUuidRequest\">GetUuidRequest</a>","synthetic":true,"types":["vrme_server::accounts::get_uuid::GetUuidRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"vrme_server/accounts/register/struct.RegistrationRequest.html\" title=\"struct vrme_server::accounts::register::RegistrationRequest\">RegistrationRequest</a>","synthetic":true,"types":["vrme_server::accounts::register::RegistrationRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"vrme_server/accounts/update_info/struct.UpdateAccountInformationRequest.html\" title=\"struct vrme_server::accounts::update_info::UpdateAccountInformationRequest\">UpdateAccountInformationRequest</a>","synthetic":true,"types":["vrme_server::accounts::update_info::UpdateAccountInformationRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"vrme_server/auth/auth_payload/struct.AuthPayload.html\" title=\"struct vrme_server::auth::auth_payload::AuthPayload\">AuthPayload</a>","synthetic":true,"types":["vrme_server::auth::auth_payload::AuthPayload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"vrme_server/auth/auth_token/struct.AuthToken.html\" title=\"struct vrme_server::auth::auth_token::AuthToken\">AuthToken</a>","synthetic":true,"types":["vrme_server::auth::auth_token::AuthToken"]},{"text":"impl Freeze for <a class=\"enum\" href=\"vrme_server/auth/errors/enum.AuthError.html\" title=\"enum vrme_server::auth::errors::AuthError\">AuthError</a>","synthetic":true,"types":["vrme_server::auth::errors::AuthError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"vrme_server/auth/login/struct.LoginInfo.html\" title=\"struct vrme_server::auth::login::LoginInfo\">LoginInfo</a>","synthetic":true,"types":["vrme_server::auth::login::LoginInfo"]},{"text":"impl Freeze for <a class=\"enum\" href=\"vrme_server/database/error/enum.DatabaseError.html\" title=\"enum vrme_server::database::error::DatabaseError\">DatabaseError</a>","synthetic":true,"types":["vrme_server::database::error::DatabaseError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"vrme_server/database/postgresql/struct.PersistentConnectionPool.html\" title=\"struct vrme_server::database::postgresql::PersistentConnectionPool\">PersistentConnectionPool</a>","synthetic":true,"types":["vrme_server::database::postgresql::PersistentConnectionPool"]},{"text":"impl Freeze for <a class=\"struct\" href=\"vrme_server/meetings/add_listener/struct.AddListenerRequestPayload.html\" title=\"struct vrme_server::meetings::add_listener::AddListenerRequestPayload\">AddListenerRequestPayload</a>","synthetic":true,"types":["vrme_server::meetings::add_listener::AddListenerRequestPayload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"vrme_server/meetings/get_session_info/struct.MeetingSessionInfoResponsePayload.html\" title=\"struct vrme_server::meetings::get_session_info::MeetingSessionInfoResponsePayload\">MeetingSessionInfoResponsePayload</a>","synthetic":true,"types":["vrme_server::meetings::get_session_info::MeetingSessionInfoResponsePayload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"vrme_server/meetings/init_session/struct.MeetingSessionResponsePayload.html\" title=\"struct vrme_server::meetings::init_session::MeetingSessionResponsePayload\">MeetingSessionResponsePayload</a>","synthetic":true,"types":["vrme_server::meetings::init_session::MeetingSessionResponsePayload"]},{"text":"impl Freeze for <a class=\"enum\" href=\"vrme_server/service_errors/enum.ServiceError.html\" title=\"enum vrme_server::service_errors::ServiceError\">ServiceError</a>","synthetic":true,"types":["vrme_server::service_errors::ServiceError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"vrme_server/settings/struct.Settings.html\" title=\"struct vrme_server::settings::Settings\">Settings</a>","synthetic":true,"types":["vrme_server::settings::Settings"]},{"text":"impl Freeze for <a class=\"struct\" href=\"vrme_server/settings/struct.DatabaseSettings.html\" title=\"struct vrme_server::settings::DatabaseSettings\">DatabaseSettings</a>","synthetic":true,"types":["vrme_server::settings::DatabaseSettings"]},{"text":"impl Freeze for <a class=\"struct\" href=\"vrme_server/settings/struct.LoggingSettings.html\" title=\"struct vrme_server::settings::LoggingSettings\">LoggingSettings</a>","synthetic":true,"types":["vrme_server::settings::LoggingSettings"]},{"text":"impl Freeze for <a class=\"struct\" href=\"vrme_server/settings/struct.ServerSettings.html\" title=\"struct vrme_server::settings::ServerSettings\">ServerSettings</a>","synthetic":true,"types":["vrme_server::settings::ServerSettings"]},{"text":"impl Freeze for <a class=\"struct\" href=\"vrme_server/settings/struct.AuthSettings.html\" title=\"struct vrme_server::settings::AuthSettings\">AuthSettings</a>","synthetic":true,"types":["vrme_server::settings::AuthSettings"]},{"text":"impl Freeze for <a class=\"struct\" href=\"vrme_server/settings/struct.RateLimitingSettings.html\" title=\"struct vrme_server::settings::RateLimitingSettings\">RateLimitingSettings</a>","synthetic":true,"types":["vrme_server::settings::RateLimitingSettings"]},{"text":"impl Freeze for <a class=\"struct\" href=\"vrme_server/settings/struct.TlsSettings.html\" title=\"struct vrme_server::settings::TlsSettings\">TlsSettings</a>","synthetic":true,"types":["vrme_server::settings::TlsSettings"]},{"text":"impl Freeze for <a class=\"enum\" href=\"vrme_server/settings/enum.SettingsError.html\" title=\"enum vrme_server::settings::SettingsError\">SettingsError</a>","synthetic":true,"types":["vrme_server::settings::SettingsError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"vrme_server/settings/enum.LoggingLevel.html\" title=\"enum vrme_server::settings::LoggingLevel\">LoggingLevel</a>","synthetic":true,"types":["vrme_server::settings::LoggingLevel"]},{"text":"impl Freeze for <a class=\"struct\" href=\"vrme_server/types/client_hashed_password/struct.ClientHashedPassword.html\" title=\"struct vrme_server::types::client_hashed_password::ClientHashedPassword\">ClientHashedPassword</a>","synthetic":true,"types":["vrme_server::types::client_hashed_password::ClientHashedPassword"]},{"text":"impl Freeze for <a class=\"struct\" href=\"vrme_server/types/hashed_password/struct.HashedPassword.html\" title=\"struct vrme_server::types::hashed_password::HashedPassword\">HashedPassword</a>","synthetic":true,"types":["vrme_server::types::hashed_password::HashedPassword"]}];
implementors["webpki"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"webpki/struct.DNSNameRef.html\" title=\"struct webpki::DNSNameRef\">DNSNameRef</a>&lt;'a&gt;","synthetic":true,"types":["webpki::name::DNSNameRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"webpki/struct.InvalidDNSNameError.html\" title=\"struct webpki::InvalidDNSNameError\">InvalidDNSNameError</a>","synthetic":true,"types":["webpki::name::InvalidDNSNameError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"webpki/struct.DNSName.html\" title=\"struct webpki::DNSName\">DNSName</a>","synthetic":true,"types":["webpki::name::DNSName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"webpki/struct.SignatureAlgorithm.html\" title=\"struct webpki::SignatureAlgorithm\">SignatureAlgorithm</a>","synthetic":true,"types":["webpki::signed_data::SignatureAlgorithm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"webpki/struct.Time.html\" title=\"struct webpki::Time\">Time</a>","synthetic":true,"types":["webpki::time::Time"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"webpki/struct.EndEntityCert.html\" title=\"struct webpki::EndEntityCert\">EndEntityCert</a>&lt;'a&gt;","synthetic":true,"types":["webpki::EndEntityCert"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"webpki/struct.TrustAnchor.html\" title=\"struct webpki::TrustAnchor\">TrustAnchor</a>&lt;'a&gt;","synthetic":true,"types":["webpki::TrustAnchor"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"webpki/struct.TLSServerTrustAnchors.html\" title=\"struct webpki::TLSServerTrustAnchors\">TLSServerTrustAnchors</a>&lt;'a&gt;","synthetic":true,"types":["webpki::TLSServerTrustAnchors"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"webpki/struct.TLSClientTrustAnchors.html\" title=\"struct webpki::TLSClientTrustAnchors\">TLSClientTrustAnchors</a>&lt;'a&gt;","synthetic":true,"types":["webpki::TLSClientTrustAnchors"]},{"text":"impl Freeze for <a class=\"enum\" href=\"webpki/enum.Error.html\" title=\"enum webpki::Error\">Error</a>","synthetic":true,"types":["webpki::error::Error"]}];
implementors["yaml_rust"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"yaml_rust/emitter/struct.YamlEmitter.html\" title=\"struct yaml_rust::emitter::YamlEmitter\">YamlEmitter</a>&lt;'a&gt;","synthetic":true,"types":["yaml_rust::emitter::YamlEmitter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"yaml_rust/emitter/enum.EmitError.html\" title=\"enum yaml_rust::emitter::EmitError\">EmitError</a>","synthetic":true,"types":["yaml_rust::emitter::EmitError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"yaml_rust/parser/struct.Parser.html\" title=\"struct yaml_rust::parser::Parser\">Parser</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["yaml_rust::parser::Parser"]},{"text":"impl Freeze for <a class=\"enum\" href=\"yaml_rust/parser/enum.Event.html\" title=\"enum yaml_rust::parser::Event\">Event</a>","synthetic":true,"types":["yaml_rust::parser::Event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"yaml_rust/scanner/struct.Marker.html\" title=\"struct yaml_rust::scanner::Marker\">Marker</a>","synthetic":true,"types":["yaml_rust::scanner::Marker"]},{"text":"impl Freeze for <a class=\"struct\" href=\"yaml_rust/scanner/struct.ScanError.html\" title=\"struct yaml_rust::scanner::ScanError\">ScanError</a>","synthetic":true,"types":["yaml_rust::scanner::ScanError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"yaml_rust/scanner/struct.Token.html\" title=\"struct yaml_rust::scanner::Token\">Token</a>","synthetic":true,"types":["yaml_rust::scanner::Token"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"yaml_rust/scanner/struct.Scanner.html\" title=\"struct yaml_rust::scanner::Scanner\">Scanner</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["yaml_rust::scanner::Scanner"]},{"text":"impl Freeze for <a class=\"enum\" href=\"yaml_rust/scanner/enum.TEncoding.html\" title=\"enum yaml_rust::scanner::TEncoding\">TEncoding</a>","synthetic":true,"types":["yaml_rust::scanner::TEncoding"]},{"text":"impl Freeze for <a class=\"enum\" href=\"yaml_rust/scanner/enum.TScalarStyle.html\" title=\"enum yaml_rust::scanner::TScalarStyle\">TScalarStyle</a>","synthetic":true,"types":["yaml_rust::scanner::TScalarStyle"]},{"text":"impl Freeze for <a class=\"enum\" href=\"yaml_rust/scanner/enum.TokenType.html\" title=\"enum yaml_rust::scanner::TokenType\">TokenType</a>","synthetic":true,"types":["yaml_rust::scanner::TokenType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"yaml_rust/yaml/struct.YamlLoader.html\" title=\"struct yaml_rust::yaml::YamlLoader\">YamlLoader</a>","synthetic":true,"types":["yaml_rust::yaml::YamlLoader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"yaml_rust/yaml/struct.YamlIter.html\" title=\"struct yaml_rust::yaml::YamlIter\">YamlIter</a>","synthetic":true,"types":["yaml_rust::yaml::YamlIter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"yaml_rust/yaml/enum.Yaml.html\" title=\"enum yaml_rust::yaml::Yaml\">Yaml</a>","synthetic":true,"types":["yaml_rust::yaml::Yaml"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()