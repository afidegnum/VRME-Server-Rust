(function() {var implementors = {};
implementors["chrono"] = [{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"chrono/naive/struct.NaiveDate.html\" title=\"struct chrono::naive::NaiveDate\">NaiveDate</a>","synthetic":false,"types":["chrono::naive::date::NaiveDate"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"chrono/naive/struct.NaiveTime.html\" title=\"struct chrono::naive::NaiveTime\">NaiveTime</a>","synthetic":false,"types":["chrono::naive::time::NaiveTime"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"chrono/naive/struct.NaiveDateTime.html\" title=\"struct chrono::naive::NaiveDateTime\">NaiveDateTime</a>","synthetic":false,"types":["chrono::naive::datetime::NaiveDateTime"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"chrono/struct.DateTime.html\" title=\"struct chrono::DateTime\">DateTime</a>&lt;<a class=\"struct\" href=\"chrono/offset/struct.FixedOffset.html\" title=\"struct chrono::offset::FixedOffset\">FixedOffset</a>&gt;","synthetic":false,"types":["chrono::datetime::DateTime"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"chrono/struct.DateTime.html\" title=\"struct chrono::DateTime\">DateTime</a>&lt;<a class=\"struct\" href=\"chrono/offset/struct.Utc.html\" title=\"struct chrono::offset::Utc\">Utc</a>&gt;","synthetic":false,"types":["chrono::datetime::DateTime"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"chrono/struct.DateTime.html\" title=\"struct chrono::DateTime\">DateTime</a>&lt;<a class=\"struct\" href=\"chrono/offset/struct.Local.html\" title=\"struct chrono::offset::Local\">Local</a>&gt;","synthetic":false,"types":["chrono::datetime::DateTime"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"enum\" href=\"chrono/enum.Weekday.html\" title=\"enum chrono::Weekday\">Weekday</a>","synthetic":false,"types":["chrono::Weekday"]}];
implementors["config"] = [{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"config/struct.Value.html\" title=\"struct config::Value\">Value</a>","synthetic":false,"types":["config::value::Value"]}];
implementors["deadpool"] = [{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"deadpool/managed/struct.PoolConfig.html\" title=\"struct deadpool::managed::PoolConfig\">PoolConfig</a>","synthetic":false,"types":["deadpool::managed::config::PoolConfig"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"deadpool/managed/struct.Timeouts.html\" title=\"struct deadpool::managed::Timeouts\">Timeouts</a>","synthetic":false,"types":["deadpool::managed::config::Timeouts"]}];
implementors["deadpool_postgres"] = [{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"enum\" href=\"deadpool_postgres/config/enum.TargetSessionAttrs.html\" title=\"enum deadpool_postgres::config::TargetSessionAttrs\">TargetSessionAttrs</a>","synthetic":false,"types":["deadpool_postgres::config::TargetSessionAttrs"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"enum\" href=\"deadpool_postgres/config/enum.SslMode.html\" title=\"enum deadpool_postgres::config::SslMode\">SslMode</a>","synthetic":false,"types":["deadpool_postgres::config::SslMode"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"enum\" href=\"deadpool_postgres/config/enum.ChannelBinding.html\" title=\"enum deadpool_postgres::config::ChannelBinding\">ChannelBinding</a>","synthetic":false,"types":["deadpool_postgres::config::ChannelBinding"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"enum\" href=\"deadpool_postgres/config/enum.RecyclingMethod.html\" title=\"enum deadpool_postgres::config::RecyclingMethod\">RecyclingMethod</a>","synthetic":false,"types":["deadpool_postgres::config::RecyclingMethod"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"deadpool_postgres/config/struct.ManagerConfig.html\" title=\"struct deadpool_postgres::config::ManagerConfig\">ManagerConfig</a>","synthetic":false,"types":["deadpool_postgres::config::ManagerConfig"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"deadpool_postgres/config/struct.Config.html\" title=\"struct deadpool_postgres::config::Config\">Config</a>","synthetic":false,"types":["deadpool_postgres::config::Config"]}];
implementors["linked_hash_map"] = [{"text":"impl&lt;K, V&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a> for <a class=\"struct\" href=\"linked_hash_map/struct.LinkedHashMap.html\" title=\"struct linked_hash_map::LinkedHashMap\">LinkedHashMap</a>&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>,&nbsp;</span>","synthetic":false,"types":["linked_hash_map::LinkedHashMap"]}];
implementors["serde"] = [];
implementors["serde_hjson"] = [{"text":"impl <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a> for <a class=\"enum\" href=\"serde_hjson/value/enum.Value.html\" title=\"enum serde_hjson::value::Value\">Value</a>","synthetic":false,"types":["serde_hjson::value::Value"]}];
implementors["serde_json"] = [{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"serde_json/map/struct.Map.html\" title=\"struct serde_json::map::Map\">Map</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, <a class=\"enum\" href=\"serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a>&gt;","synthetic":false,"types":["serde_json::map::Map"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"enum\" href=\"serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a>","synthetic":false,"types":["serde_json::value::Value"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"serde_json/struct.Number.html\" title=\"struct serde_json::Number\">Number</a>","synthetic":false,"types":["serde_json::number::Number"]}];
implementors["toml"] = [{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"toml/map/struct.Map.html\" title=\"struct toml::map::Map\">Map</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, <a class=\"enum\" href=\"toml/value/enum.Value.html\" title=\"enum toml::value::Value\">Value</a>&gt;","synthetic":false,"types":["toml::map::Map"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"enum\" href=\"toml/value/enum.Value.html\" title=\"enum toml::value::Value\">Value</a>","synthetic":false,"types":["toml::value::Value"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"toml/value/struct.Datetime.html\" title=\"struct toml::value::Datetime\">Datetime</a>","synthetic":false,"types":["toml::datetime::Datetime"]},{"text":"impl&lt;'de, T&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"toml/struct.Spanned.html\" title=\"struct toml::Spanned\">Spanned</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,&nbsp;</span>","synthetic":false,"types":["toml::spanned::Spanned"]}];
implementors["uuid"] = [{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"uuid/struct.Uuid.html\" title=\"struct uuid::Uuid\">Uuid</a>","synthetic":false,"types":["uuid::Uuid"]}];
implementors["vrme_server"] = [{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"vrme_server/accounts/get_info/struct.AccountInfoResponse.html\" title=\"struct vrme_server::accounts::get_info::AccountInfoResponse\">AccountInfoResponse</a>","synthetic":false,"types":["vrme_server::accounts::get_info::AccountInfoResponse"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"vrme_server/accounts/get_uuid/struct.GetUuidRequest.html\" title=\"struct vrme_server::accounts::get_uuid::GetUuidRequest\">GetUuidRequest</a>","synthetic":false,"types":["vrme_server::accounts::get_uuid::GetUuidRequest"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"vrme_server/accounts/register/struct.RegistrationRequest.html\" title=\"struct vrme_server::accounts::register::RegistrationRequest\">RegistrationRequest</a>","synthetic":false,"types":["vrme_server::accounts::register::RegistrationRequest"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"vrme_server/accounts/update_info/struct.UpdateAccountInformationRequest.html\" title=\"struct vrme_server::accounts::update_info::UpdateAccountInformationRequest\">UpdateAccountInformationRequest</a>","synthetic":false,"types":["vrme_server::accounts::update_info::UpdateAccountInformationRequest"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"vrme_server/auth/auth_payload/struct.AuthPayload.html\" title=\"struct vrme_server::auth::auth_payload::AuthPayload\">AuthPayload</a>","synthetic":false,"types":["vrme_server::auth::auth_payload::AuthPayload"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"vrme_server/auth/auth_token/struct.AuthToken.html\" title=\"struct vrme_server::auth::auth_token::AuthToken\">AuthToken</a>","synthetic":false,"types":["vrme_server::auth::auth_token::AuthToken"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"vrme_server/auth/login/struct.LoginInfo.html\" title=\"struct vrme_server::auth::login::LoginInfo\">LoginInfo</a>","synthetic":false,"types":["vrme_server::auth::login::LoginInfo"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"vrme_server/meetings/add_listener/struct.AddListenerRequestPayload.html\" title=\"struct vrme_server::meetings::add_listener::AddListenerRequestPayload\">AddListenerRequestPayload</a>","synthetic":false,"types":["vrme_server::meetings::add_listener::AddListenerRequestPayload"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"vrme_server/meetings/get_session_info/struct.MeetingSessionInfoResponsePayload.html\" title=\"struct vrme_server::meetings::get_session_info::MeetingSessionInfoResponsePayload\">MeetingSessionInfoResponsePayload</a>","synthetic":false,"types":["vrme_server::meetings::get_session_info::MeetingSessionInfoResponsePayload"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"vrme_server/meetings/init_session/struct.MeetingSessionResponsePayload.html\" title=\"struct vrme_server::meetings::init_session::MeetingSessionResponsePayload\">MeetingSessionResponsePayload</a>","synthetic":false,"types":["vrme_server::meetings::init_session::MeetingSessionResponsePayload"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"vrme_server/settings/struct.Settings.html\" title=\"struct vrme_server::settings::Settings\">Settings</a>","synthetic":false,"types":["vrme_server::settings::Settings"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"vrme_server/settings/struct.DatabaseSettings.html\" title=\"struct vrme_server::settings::DatabaseSettings\">DatabaseSettings</a>","synthetic":false,"types":["vrme_server::settings::DatabaseSettings"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"vrme_server/settings/struct.LoggingSettings.html\" title=\"struct vrme_server::settings::LoggingSettings\">LoggingSettings</a>","synthetic":false,"types":["vrme_server::settings::LoggingSettings"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"enum\" href=\"vrme_server/settings/enum.LoggingLevel.html\" title=\"enum vrme_server::settings::LoggingLevel\">LoggingLevel</a>","synthetic":false,"types":["vrme_server::settings::LoggingLevel"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"vrme_server/settings/struct.ServerSettings.html\" title=\"struct vrme_server::settings::ServerSettings\">ServerSettings</a>","synthetic":false,"types":["vrme_server::settings::ServerSettings"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"vrme_server/settings/struct.AuthSettings.html\" title=\"struct vrme_server::settings::AuthSettings\">AuthSettings</a>","synthetic":false,"types":["vrme_server::settings::AuthSettings"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"vrme_server/settings/struct.RateLimitingSettings.html\" title=\"struct vrme_server::settings::RateLimitingSettings\">RateLimitingSettings</a>","synthetic":false,"types":["vrme_server::settings::RateLimitingSettings"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"vrme_server/settings/struct.TlsSettings.html\" title=\"struct vrme_server::settings::TlsSettings\">TlsSettings</a>","synthetic":false,"types":["vrme_server::settings::TlsSettings"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"vrme_server/types/hashed_password/struct.HashedPassword.html\" title=\"struct vrme_server::types::hashed_password::HashedPassword\">HashedPassword</a>","synthetic":false,"types":["vrme_server::types::hashed_password::HashedPassword"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()